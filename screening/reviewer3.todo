"Song F., Touili T." $ "Model-checking software library API usage rules" $ "Modern software increasingly relies on using third-party libraries which are accessed via application programming interfaces (APIs). Libraries usually impose constraints on how API functions can be used (API usage rules) and programmers have to obey these API usage rules. However, API usage rules often are not well documented or documented informally. In this work, we show how to use the SCTPL and SLTPL logics to precisely and formally specify API usage rules in libraries, where SCTPL/SLTPL can be seen as an extension of the branching/linear temporal logic CTL/LTL with variables, quantifiers and predicates over the stack. This allows library providers to formally describe API usage rules without knowing how their libraries will be used by programmers. We propose an automated approach to check whether programs using libraries violate API usage rules or not. Our approach consists in modeling programs as pushdown systems (PDSs) and checking API usage rules by SCTPL/SLTPL model-checking for PDSs. To make the model-checking procedure more efficient and precise, we propose an abstraction that reduces drastically the size of the program model and integrate may-alias analysis into our approach to reduce false alarms. Moreover, we characterize two sublogics rSCTPL and rSLTPL of SCTPL and SLTPL that are preserved by the abstraction. We implement our techniques in a tool and apply the tool to check several open-source programs. Our tool finds several previously unknown bugs in several programs. The may-alias analysis avoids most of the false alarms that occur using SCTPL or SLTPL model-checking techniques without may-alias analysis. © 2015, Springer-Verlag Berlin Heidelberg."
"Campos E.C., de Souza L.B.L., Maia M.D.A." $ "Searching crowd knowledge to recommend solutions for API usage tasks" $ "Stack Overflow (SO) is a question and answer service directed to issues related to software development. In SO, developers post questions related to a programming topic and other members of the site can provide answers to help them. The information available on this type of service is also known as ‘crowd knowledge’ and currently is one important trend in supporting activities related to software development. We present an approach that makes use of ‘crowd knowledge’ in SO to recommend information that can assist developer activities. This strategy recommends a ranked list of question-answer pairs from SO based on a query. The criteria for ranking are based on three main aspects: the textual similarity of the pairs with respect to the query related to the developer's problem, the quality of the pairs, and a filtering mechanism that considers only ‘how-to’ posts. We conducted an experiment considering programming problems on three different topics (Swing, Boost and LINQ) widely used by the software development community to evaluate the proposed recommendation strategy. The results have shown that for Lucene + Score + How-to approach, 77.14% of the assessed activities have at least one recommended pair proved to be useful concerning the target programming problem. Copyright © 2016 John Wiley & Sons, Ltd. Copyright © 2016 John Wiley & Sons, Ltd."
"Acar Y., Backes M., Fahl S., Kim D., Mazurek M.L., Stransky C." $ "You Get Where You're Looking for: The Impact of Information Sources on Code Security" $ "Vulnerabilities in Android code - including but not limited to insecure data storage, unprotected inter-component communication, broken TLS implementations, and violations of least privilege - have enabled real-world privacy leaks and motivated research cataloguing their prevalence and impact. Researchers have speculated that appification promotes security problems, as it increasingly allows inexperienced laymen to develop complex and sensitive apps. Anecdotally, Internet resources such as Stack Overflow are blamed for promoting insecure solutions that are naively copy-pasted by inexperienced developers. In this paper, we for the first time systematically analyzed how the use of information resources impacts code security. We first surveyed 295 app developers who have published in the Google Play market concerning how they use resources to solve security-related problems. Based on the survey results, we conducted a lab study with 54 Android developers (students and professionals), in which participants wrote security-and privacy-relevant code under time constraints. The participants were assigned to one of four conditions: free choice of resources, Stack Overflow only, official Android documentation only, or books only. Those participants who were allowed to use only Stack Overflow produced significantly less secure code than those using, the official Android documentation or books, while participants using the official Android documentation produced significantly less functional code than those using Stack Overflow. To assess the quality of Stack Overflow as a resource, we surveyed the 139 threads our participants accessed during the study, finding that only 25% of them were helpful in solving the assigned tasks and only 17% of them contained secure code snippets. In order to obtain ground truth concerning the prevalence of the secure and insecure code our participants wrote in the lab study, we statically analyzed a random sample of 200,000 apps from Google Play, finding that 93.6% of the apps used at least one of the API calls our participants used during our study. We also found that many of the security errors made by our participants also appear in the wild, possibly also originating in the use of Stack Overflow to solve programming problems. Taken together, our results confirm that API documentation is secure but hard to use, while informal documentation such as Stack Overflow is more accessible but often leads to insecurity. Given time constraints and economic pressures, we can expect that Android developers will continue to choose those resources that are easiest to use, therefore, our results firmly establish the need for secure-but-usable documentation. © 2016 IEEE."
"López-Fernández L., García B., Gallego M., Gortázar F." $ "Designing and evaluating the usability of an API for real-time multimedia services in the Internet" $ "In the last few years, multimedia technologies in general, and Real-Time multimedia Communications (RTC) in particular, are becoming mainstream among WWW and smartphone developers, who have an increasing interest in richer media capabilities for creating their applications. The engineering literature proposing novel algorithms, protocols and architectures for managing and processing multimedia information is currently overwhelming. However, most of these results do not arrive to applications due to the lack of simple and usable APIs. Interestingly, in this context in which APIs are the critical ingredient for reaching wide developer audiences, the scientific literature about multimedia APIs and their usability is scarce. In this paper we try to contribute to fill this gap by proposing the RTC Media API: a novel type of API designed with the aim of making simple for developers the use of latest trends in RTC multimedia including WebRTC, Video Content Analysis or Augmented Reality. We provide a specification of such API and discuss how it satisfies a set of design requirements including programming-language agnosticism, adaptation to cloud environments, support to multisensory multimedia, etc. After that, we describe an implementation of such an API that has been created in the context of the Kurento open source software project, and present a study evaluating the API usability performed in a group of more than 40 professional developers distributed worldwide. In the light of the obtained results, we conclude that the usability of the API is adequate across the main development activities (i.e. API learning, code creation and code maintenance), with an average usability score of 3.39 over 5 in a Likert scale, and that this result is robust with respect to developers’ profiles, cultures, professional experiences and preferred programming languages. © 2016 Springer Science+Business Media New York,Application Programming Interfaces, Cognitive dimensions of notations, Media server, Multimedia processing, Multimedia tools and applications, Real-time multimedia communications, WebRTC"
"Pathirage M., Hyde J., Pan Y., Plale B." $ "SamzaSQL: Scalable fast data management with streaming SQL" $ "As the data-driven economy evolves, enterprises have come to realize a competitive advantage in being able to act on high volume, high velocity streams of data. Technologies such as distributed message queues and streaming processing platforms that can scale to thousands of data stream partitions on commodity hardware are a response. However, the programming API provided by these systems is often low-level, requiring substantial custom code that adds to the programmer learning curve and maintenance overhead. Additionally, these systems often lack SQL querying capabilities that have proven popular on Big Data systems like Hive, Impala or Presto. We define a minimal set of extensions to standard SQL for data stream querying and manipulation. These extensions are prototyped in SamzaSQL, a new tool for streaming SQL that compiles streaming SQL into physical plans that are executed on Samza, an open-source distributed stream processing framework. We compare the performance of streaming SQL queries against native Samza applications and discuss usability improvements. SamzaSQL is a part of the open source Apache Samza project and will be available for general use. © 2016 IEEE."
"Walker S., McFadden M." $ "Best practices for scalable power measurement and control" $ "There are thousands of specialized registers onmodern processors which provide useful features such as powerbudgeting, thermal monitoring, and performance counting. These registers fall into two categories, model specific registers(MSRs) and configuration space registers (CSRs). Many ofthese registers, such as those supported by PAPI, help thehigh-performance computing (HPC) community analyze theirprogram in order to maximize performance and use resourcesmore efficiently. However, there are many MSRs and CSRswhich are not supported by existing performance tools. TheMSR kernel module provides access to all MSRs, but requiresthe user to be root. Users will typically want to access a handfulof MSRs sequentially, but we found that the existing MSRmodule has far too much overhead. Just like MSRs, usersneed elevated privileges to access CSRs with utilities suchas lspci. Simply allowing users to access all of the registersis out of the question because of the security risks involved. Furthermore, using these registers requires detailed knowledgeof the architectural changes in addition to the manufacturer'sproprietary ways of encoding the data. In this paper, we will describe a group of utilities developedat Lawrence Livermore National Laboratory to address theseproblems. Our Libmsr API solves the usability issues byproviding a simplified interface to common tasks. The companionkernel module, MSR-SAFE, allows whitelisting MSRsfor userspace access, plus provides an optimized way to accessMSRs in batches. Our CSR-SAFE kernel module is a first of itskind utility to whitelist sections of the PCI configuration space, where CSRs reside, for userspace access. We demonstrate theabilities of Libmsr and MSR-SAFE by using the utilities toset various power limits on the NAS parallel benchmark MG. Experiments analyzing our optimizations show a maximumspeedup of 26X, and approximately 2-8X on average for typicalbatches versus the stock MSR kernel module. Our utilitiescurrently support most modern Intel processors. © 2016 IEEE."
"Fleureau J., Galvane Q., Tariolle F.-L., Guillotel P." $ "Generic drone control platform for autonomous capture of cinema scenes" $ "The movie industry has been using Unmanned Aerial Vehicles as a new tool to produce more and more complex and aesthetic camera shots. However, the shooting process currently rely on manual control of the drones which makes it difficult and sometimes inconvenient to work with. In this paper we address the lack of autonomous system to operate generic rotary-wing drones for shooting purposes. We propose a global control architecture based on a high-level generic API used by many UAV. Our solution integrates a compound and coupled model of a generic rotary-wing drone and a Full State Feedback strategy. To address the specific task of capturing cinema scenes, we combine the control architecture with an automatic camera path planning approach that encompass cinematographic techniques. The possibilities offered by our system are demonstrated through a series of experiments. © 2016 Copyright held by the owner/author(s)."
"Otegui J., Guralnick R.P." $ "The geospatial data quality REST API for primary biodiversity data" $ "Summary: We present a REST web service to assess the geospatial quality of primary biodiversity data. It enables access to basic and advanced functions to detect completeness and consistency issues as well as general errors in the provided record or set of records. The API uses JSON for data interchange and efficient parallelization techniques for fast assessments of large datasets. Availability and implementation: The Geospatial Data Quality API is part of the VertNet set of APIs. It can be accessed at http://api-geospatial.vertnet-portal.appspot.com/geospatial and is already implemented in the VertNet data portal for quality reporting. Source code is freely available under GPL license from http://www.github.com/vertnet/api-geospatial. Supplementary information: Supplementary data are available at Bioinformatics online. © 2016 The Author 2016. Published by Oxford University Press."
"Gurram B., Giri N." $ "Improving localization accuracy of android's Fused Location Provider API using Kalman Filter" $ "This paper intends to improve the location accuracy of Google's Fused Location Provider API, for android handheld device using Kalman Filter. Since the Fused Location Provider was built for managing the battery and accuracy tradeoff between GPS provider and Network Provider, the estimate is likely to be noisy and the track obtained contains jumps. So by using Kalman filter, the jumps can be devoid, and a smooth track can be obtained. A real time experiment is carried out to check the improvements. The results show that the proposed location path is smoother than the path travelled using the conventional Fused Location Provider API. © 2016 IEEE."
"Nguyen T.T., Pham H.V., Vu P.M., Nguyen T.T." $ "Learning API usages from bytecode: A statistical approach" $ "Mobile app developers rely heavily on standard API frameworks and libraries. However, learning API usages is often challenging due to the fast-changing nature of API frameworks for mobile systems and the insufficiency of API documentation and source code examples. In this paper, we propose a novel approach to learn API usages from bytecode of Android mobile apps. Our core contributions include HAPI, a statistical model of API usages and three algorithms to extract method call sequences from apps' bytecode, to train HAPI based on those sequences, and to recommend method calls in code completion using the trained HAPIs. Our empirical evaluation shows that our prototype tool can effectively learn API usages from 200 thousand apps containing 350 million method sequences. It recommends next method calls with top-3 accuracy of 90% and outperforms baseline approaches on average 10-20%. © 2016 ACM."
"Wu N., Hou D., Liu Q." $ "Linking usage tutorials into API client code" $ "Traceability links between software artifacts have important applications in the development process. This paper concerns a special case of traceability recovery, i.e., the automated integration of API usage tutorials with the API client code. Our solution involves partitioning the client code into multiple semantic groups/snippets and linking each snippet to the best matching tutorials. Evaluation using benchmarks created for two popular APIs reveals that our solution can find the expected tutorial links at the average rank of 1.6 and 1.4 in the top ranked results, for the two API's, respectively, and with good average precision and recall. We also evaluate the impact of both method partitioning and JavaDoc query expansion on tutorial linking performance. Lastly, we conduct a formative user study to pinpoint the scenarios where our solution actually helps a software developer. We conclude that it is a promising approach to speeding up the maintenance of API client code. © 2016 ACM."
"Nguyen A.T., Nguyen H.A., Nguyen T.N." $ "A large-scale study on repetitiveness, containment, and composability of routines in open-source projects" $ "Source code in software systems has been shown to have a good degree of repetitiveness at the lexical, syntactical, and API usage levels. This paper presents a large-scale study on the repetitiveness, containment, and composability of source code at the semantic level. We collected a large dataset consisting of 9,224 Java projects with 2.79M class files, 17.54M methods with 187M SLOCs. For each method in a project, we build the program dependency graph (PDG) to represent a routine, and compare PDGs with one another as well as the subgraphs within them. We found that within a project, 12.1% of the routines are repeated, and most of them repeat from 2-7 times. As entirety, the routines are quite project-specific with only 3.3% of them exactly repeating in 1-4 other projects with at most 8 times. We also found that 26.1% and 7.27% of the routines are contained in other routine(s), i.e., implemented as part of other routine(s) elsewhere within a project and in other projects, respectively. Except for trivial routines, their repetitiveness and containment is independent of their complexity. Defining a subroutine via a per-variable slicing subgraph in a PDG, we found that 14.3% of all routines have all of their subroutines repeated. A high percentage of subroutines in a routine can be found/reused elsewhere. We collected 8,764,971 unique subroutines (with 323,564 unique JDK subroutines) as basic units for code searching/synthesis. We also provide practical implications of our findings to automated tools. © 2016 ACM."
"Tsai C.-C., Jain B., Abdul N.A., Porter D.E." $ "A study of modern Linux API usage and compatibility: What to support when you're supporting" $ "This paper presents a study of Linux API usage across all applications and libraries in the Ubuntu Linux 15.04 distribution. We propose metrics for reasoning about the importance of various system APIs, including system calls, pseudo-files, and libc functions. Our metrics are designed for evaluating the relative maturity of a prototype system or compatibility layer, and this paper focuses on compatibility with Linux applications. This study uses a combination of static analysis to understand API usage and survey data to weight the relative importance of applications to end users. This paper yields several insights for developers and researchers, which are useful for assessing the complexity and security of Linux APIs. For example, every Ubuntu installation requires 224 system calls, 208 ioctl, fcntl, and prctl codes and hundreds of pseudo files. For each API type, a significant number of APIs are rarely used, if ever. Moreover, several security-relevant API changes, such as replacing access with faccessat, have met with slow adoption. Finally, hundreds of libc interfaces are effectively unused, yielding opportunities to improve security and efficiency by restructuring libc. Copyright © 2016 held by owner/author(s)."
"Corraya A.D., Sumi M.A., Shachi S.I., Rahman Z." $ "Guiding software developers by social networking application plug-in using the multiple bridge source repository through a data mining integrated approach" $ "In today's world social networking is an important (powerful) medium of mass communication. People of almost all classes have been interacting each other and sharing their views, moments and ideas by using enormous user friendly applications in different social networking sites. It is really unbelievable to find a person who has never heard about the social networking system. The available social networking sites usually opportune their users to develop various customized applications through particular templates and embedded sources of codes. The users with average knowledge of development often encounter difficulties to reuse those resources and eventually lack guidelines and necessary API recommendations. In our work, we have proposed a framework and model to help those apps developer through a user assistance plug-in tool that is able to provide identical API usage patterns and sequences in response to a particular user query. We have titled our system as Social Networking Application Plug-in (SNAP). It searches social networking apps repository where multiple storage are bridged and apply respective mining algorithm to find the relevant sequences to fulfill the user needs. It provides similar, most relevant and functional API usage scenarios as well as gives an option to choose, reuse and modify the recommended sources. From the investigations we have ever made, the SNAP approach is capable to recommend error-free, understandable and minimal API patterns. © 2015 IEEE."
"Mani S., Padhye R., Sinha V.S." $ "Mining API expertise profiles with Partial Program Analysis" $ "A developer's API usage expertise can be estimated by analyzing source code that they have checked-in to a software repository. In prior work we proposed a system for creating a social network of developers centered around the APIs they use in order to recommend people and projects they might be interested in. The implementation of such a system requires analyzing code from repositories of large numbers of projects that use different build systems. Hence, one challenge is to determine the APIs referenced in code in these repositories without relying on the ability to resolve every project's external dependencies. In this paper, we consider a technique called Partial Program Analysis for resolving type bindings in Java source code in the absence of third-party library binaries. Another important design decision concerns the approach of associating such API references with the developers who authored them such as walking entire change history or use blame information. We evaluate these different design options on 4 open-source Java projects and found that both Partial Program Analysis and blame-based approach provide precision greater than 80%. However, use of blame as opposed to complete program history leads to significant recall loss, in most cases greater than 40%. © 2016 ACM."
"Yuniarti A., Atidnminanto A., Mardasatria A., Hariadi R.R., Suciati N." $ "3D ITS campus on the web: A WebGL implementation" $ "Multimedia web experience can be increased using 3D graphics on the web. Proprietary systems need specific plug-ins to download and install. Therefore, open standard methods have been used increasingly. WebGL is one of those that is a cross-platform, web standard for a 3D graphics API based on OpenGL ES 2.0. There are many other Javascript libraries that abstract WebGL and results in higher code level. One of the libraries is Three.js, the most popular library/API for WebGL-based 3D graphics. This paper proposed an implementation of WebGL and Three.js libraries for a 3D ITS Campus information system. The proposed system can be viewed using two modes: ground and free modes. In the ground view mode, users can not move in vertical direction. Whereas the free view mode enables users to move in any direction. A usability testing was performed after development. The participants consist of 12 postgraduate students who are currently studying at the Informatics Department ITS, graduated from both ITS and non-ITS campus in their previous study. Results from the experiment show that the proposed system effectively render the ITS campus (83% of participants successfully view the 3D ITS campus on their own computers) and most participants suggest to add more buildings and natural objects like trees and ponds to the system. © 2015 IEEE."
"Suter P., Wittern E." $ "Inferring web API descriptions from usage data" $ "We describe a set of techniques to infer structured descriptions of web APIs from usage examples. Using trained classifiers, we identify fixed and variable segments in paths, and tag parameters according to their types. We implemented our techniques and evaluated their precision on 10 APIs for which we obtained: 1) descriptions, manually written by the API maintainers, and 2) server logs of the API usage. Our experiments show that our system is able to reconstruct the structure of both simple and complex web API descriptions, outperforming an existing tool with similar goals. Finally, we assess the impact of noise in the input data on the results of our method. © 2015 IEEE."
"Nguyen A.T., Nguyen T.T., Nguyen T.N." $ "Divide-and-conquer approach for multi-phase statistical migration for source code" $ "Prior research shows that directly applying phrase-based SMT on lexical tokens to migrate Java to C# produces much semantically incorrect code. A key limitation is the use of sequences in phrase-based SMT to model and translate source code with well-formed structures. We propose mppSMT, a divide-and-conquer technique to address that with novel training and migration algorithms using phrase-based SMT in three phases. First, mppSMT treats a program as a sequence of syntactic units and maps/translates such sequences in two languages to one another. Second, with a syntax-directed fashion, it deals with the tokens within syntactic units by encoding them with semantic symbols to represent their data and token types. This encoding via semantic symbols helps better migration of API usages. Third, the lexical tokens corresponding to each sememe are mapped or migrated. The resulting sequences of tokens are merged together to form the final migrated code. Such divide-and-conquer and syntax-direction strategies enable phrase-based SMT to adapt well to syntactical structures in source code, thus, improving migration accuracy. Our empirical evaluation on several real-world systems shows that 84.8 - 97.9% and 70 - 83% of the migrated methods are syntactically and semantically correct, respectively. 26.3 - 51.2% of total migrated methods are exactly matched to the human-written C# code in the oracle. Compared to Java2CSharp, a rule-based migration tool, it achieves higher semantic accuracy from 6.6 - 57.7% relatively. Importantly, it does not require manual labeling for training data or manual definition of rules. © 2015 IEEE."
"Rossi D." $ "UML-based model-driven REST API development" $ "In the last few years we have witnessed the expansion of REST APIs as a method to implement machineto-machine interactions in open distributed systems. Recently REST APIs can also be found in several B2B and enterprise scenarios that were previously reserved to alternative technologies such as SOAP-based Web Services. Despite that, the development of REST-based solutions has remained mostly inspired by agile approaches with no or limited explicit modeling artifacts produced during the development process. This clashes with software development methods in which modeling artifacts are expected to be available for all developed software. Another problem is related to the resource-based nature of these APIs that miss standardized methods to discover and understand their capabilities akin to what object-oriented interfaces can do for objects and services. In this paper we propose a model-driven approach to REST API development, this approach is composed by two main steps: (i) UML modeling of the API using specific profiles and (ii) a model transformation that exploits RAML, a recent RESTful API modeling language, as an intermediate notation that can be used to automatically produce documentation and code for various languages/platforms. Copyright © 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved."
"Huang C.Y., Wu C.H." $ "Design and implement an interoperable Internet of Things application based on an extended OGC sensorthings API Standard" $ "The Internet of Things (IoT) is an infrastructure that interconnects uniquely-identifiable devices using the Internet. By interconnecting everyday appliances, various monitoring and physical mashup applications can be constructed to improve people's daily life. However, IoT devices created by different manufacturers follow different proprietary protocols and cannot communicate with each other. This heterogeneity issue causes different products to be locked in multiple closed ecosystems that we call IoT silos. In order to address this issue, a common industrial solution is the hub approach, which implements connectors to communicate with IoT devices following different protocols. However, with the growing number of proprietary protocols proposed by device manufacturers, IoT hubs need to support and maintain a lot of customized connectors. Hence, we believe the ultimate solution to address the heterogeneity issue is to follow open and interoperable standard. Among the existing IoT standards, the Open Geospatial Consortium (OGC) SensorThings API standard supports comprehensive conceptual model and query functionalities. The first version of SensorThings API mainly focuses on connecting to IoT devices and sharing sensor observations online, which is the sensing capability. Besides the sensing capability, IoT devices could also be controlled via the Internet, which is the tasking capability. While the tasking capability was not included in the first version of the SensorThings API standard, this research aims on defining the tasking capability profile and integrates with the SensorThings API standard, which we call the extended-SensorThings API in this paper. In general, this research proposes a lightweight JSON-based web service description, the ""Tasking Capability Description"", allowing device owners and manufacturers to describe different IoT device protocols. Through the extended-SensorThings API, users and applications can follow a coherent protocol to control IoT devices that use different communication protocols, which could consequently achieve the interoperable Internet of Things infrastructure."
"Li B., Zhang Y., Lyu C., Li J., Gu D." $ "SSG: Sensor security guard for android smartphones" $ "The smartphone sensors provide extraordinary user experience in various Android apps, e.g. sport apps, gravity sensing games. Recent works have been proposed to launch powerful sensor-based attacks such as location tracing and sound eavesdropping. The use of sensors does not require any permission in Android apps, so these attacks are very difficult to be noticed by the app users. Furthermore, the combination of various kinds of sensors generates numerous types of attacks which are hard to be systematically studied. To better address the attacks, we have developed a taxonomy on sensor-based attacks from five aspects. In this work, we propose a sensor API hooking and information filtering framework, Sensor Security Guard (SSG). Unlike any rough hooking framework, this system provides finegrained processing for different security levels set by the users, or by default. The sensor data is blocked, forged or processed under different mode strategies and then returned to the apps. In addition, according to the taxonomy, SSG develops fine-grained corresponding countermeasures. We evaluate the usability of SSG on 30 popular apps chosen from Google Market. SSG does not cause any crash of either the Android system or the apps while working. The result indicated that SSG could significantly preserve the users’ privacy with acceptable energy lost. © Institute for Computer Sciences, Social Informatics and Telecommunications Engineering 2016."
"Holzschuher F., Peinl R." $ "Querying a graph database - Language selection and performance considerations" $ "NoSQL and especially graph databases are constantly gaining popularity among developers as they promise to deliver superior performance when handling highly interconnected data compared to relational databases. Apache Shindig is the reference implementation for OpenSocial with a highly interconnected data model. However, it had a relational database as back-end. In this paper we describe our experiences with the graph database Neo4j as back-end and compare Cypher, Gremlin and Java as alternatives for querying data with MySQL. We consider performance as well as usability from a developer's perspective. Our results show that Cypher is a good query language in terms of code readability and has a moderate overhead for most queries (20-200%). However, it has to be supplemented with ""stored procedures"" to make up for some performance deficits in pattern matching queries (>1000%). The RESTful API is unusable slow, whereas our WebSocket connection performs significantly better (>650%). © 2015 Elsevier Inc. All rights reserved."
"Zou Y.R., Mustafa N., Memon N.A., Eid M." $ "ECO ECO: Changing climate related behaviors for cellphone-based videogames" $ "Global climate change has become a major issue of today's human society. Since most of our human activity could potentially have big environmental impacts once accumulated, it is especially important that the public is educated with the environmental effects of their daily actions. This paper's main purpose is to propose a gamified system that leverages the high saturation of smartphones and the rising popularity of Internet of Things (IoT) to educate young children with environmental concepts as well as encouraging them to commit to real-life ""green habits"". An android mobile game Eco Eco was developed to demonstrate the concept and test the proposed system's effectiveness for young users. This Farmville-like game is played only by conducting real-life environmental activities like using a reusable water bottle, walking more steps instead of using cars, or reduce usage of household electricity. The game, developed with Unity3D utilizes the Google Fit API for step count, CloudSight API for image recognition and a connected smart device for monitoring energy usage. A preliminary user test was also conducted to improve the usability of the system as well as to test the effects of this system. © 2015 IEEE."
"Coblenz M., Seacord R., Myers B., Sunshine J., Aldrich J." $ "A course-based usability analysis of Cilk Plus and OpenMP" $ "Cilk Plus and OpenMP are parallel language extensions for the C and C++ programming languages. The CPLEX Study Group of the ISO/IEC C Standards Committee is developing a proposal for a parallel programming extension to C that combines ideas from Cilk Plus and OpenMP. We conducted a preliminary comparison of Cilk Plus and OpenMP in a master's level course on security to evaluate the design tradeoffs in the usability and security of these two approaches. The eventual goal is to inform decision-making within the committee. We found several usability problems worthy of further investigation based on student performance, including declaring and using reductions, multi-line compiler directives, and the understanda-bility of task assignment to threads. © 2015 IEEE."
"Saied M.A., Benomar O., Sahraoui H." $ "Visualization based API usage patterns refining" $ "Learning to use existing or new software libraries is a difficult task for software developers, which would impede their productivity. Most of existing work provided different techniques to mine API usage patterns from client programs, in order to help developers to understand and use existing libraries. However, considering only client programs to identify API usage patterns, is a strong constraint as collecting several similar client programs for an API is not a trivial task. And even if these clients are available, all the usage scenarios of the API of interest may not be covered by those clients. In this paper, we propose a visualization based approach for the refinement of Client-based Usage Patterns. We first visualize the patterns structure. Then we enrich the patterns with API methods that are semantically related to them, and thus may contribute together to the implementation of a particular functionality for potential client programs. © 2015 IEEE."
"Serrano M.A., Melani A., Vargas R., Marongiu A., Bertogna M., Quiñones E." $ "Timing characterization of OpenMP4 tasking model" $ "OpenMP is increasingly being supported by the newest high-end embedded many-core processors. Despite the lack of any notion of real-time execution, the latest specification of OpenMP (v4.0) introduces a tasking model that resembles the way real-time embedded applications are modeled and designed, i.e., as a set of periodic task graphs. This makes OpenMP4 a convenient candidate to be adopted in future real-time systems. However, OpenMP4 incorporates as well features to guarantee backward compatibility with previous versions that limit its practical usability in real-time systems. The most notable example is the distinction between tied and untied tasks. Tied tasks force all parts of a task to be executed on the same thread that started the execution, whereas a suspended untied task is allowed to resume execution on a different thread. Moreover, tied tasks are forbidden to be scheduled in threads in which other non-descendant tied tasks are suspended. As a result, the execution model of tied tasks, which is the default model in OpenMP to simplify the coexistence with legacy constructs, clearly restricts the performance and has serious implications on the response time analysis of OpenMP4 applications, making difficult to adopt it in real-time environments. In this paper, we revisit OpenMP design choices, introducing timing predictability as a new and key metric of interest. Our first results confirm that even if tied tasks can be timing analyzed, the quality of the analysis is much worse than with untied tasks. We thus reason about the benefits of using untied tasks, deriving a response time analysis for this model, and so allowing OpenMP4 untied model to be applied to real-time systems. © 2015 IEEE."
"Li Q., Li X." $ "Android Malware Detection Based on Static Analysis of Characteristic Tree" $ "The number of mobile malware is greatly increasing and the malware detection malware has become a critical problem. Android is fast becoming the most popular mobile platform resulting in quick increase in malware targeting the platform. Current static-analysis practice on Android application package (APK) mainly uses the features such as signature, md5 hash, permissions, data flows, API (Application Programming Interface) calls and etc. Extracted from the manifest file and the code. Such features lack consideration on the APK code organizations and object hierarchy, and thus they may be ineffective in detecting and predicting an APK'S application behaviors and maliciousness. Our research aims to find and implement a novel API-usage characterization approach for Android APK on different layers of resolutions, namely packages, classes, functions and APIs. A tree structure called 'Characteristic Tree' is used to contain such API-usage information on different layers of the tree structure, and a comparison algorithm is designed for calculating characteristic-tree similarity. This new detection method detection provides more meticulous insights in classifying and detecting Android malware of different types and code families. The variations in API-usage on different code layers imply code functionalities and application behaviors, and thus they can be used to improve current static-analysis method in malware detection and signature generation. Realistic malware packet samples of various types and families were used to validate the proposed approach, and results were discussed for its performance and future improvement. © 2015 IEEE."
"Nguyen H.A., Dyer R., Nguyen T.N., Rajan H." $ "Consensus-based mining of API preconditions in big code" $ "Formal specifications for APIs help developers correctly use them and enable checker tools automatically verify their uses. However, formal specifications are not always available with released APIs. In this work, we demonstrate an approach for mining API preconditions from a large-scale corpus of open-source software. It considers conditions guarding API calls in client code as potential preconditions of the corresponding APIs. Then it uses consensus among a large number of API usages to keep the ones appearing in the majority. Finally, the mined preconditions are ranked based on their frequencies and reported to users. © 2015 ACM."
"Knodel O., Spallek R.G." $ "Computing framework for dynamic integration of reconfigurable resources in a cloud" $ "Integrating FPGAs into clouds or data centers allows easy access to such reconfigurable resources and provides a promising opportunity to improve both performance and energy efficiency of such systems. Although currently the use of FPGAs as hardware accelerators and especially in clouds is mainly a topic of research, the integration of reconfigurable virtualized resources will become a task of growing importance in the future. We developed a cloud management and hypervisor system called RC3E providing FPGA resources as a service. This paper introduces a computing framework which extends our hypervisor and allows multiple (virtual) user designs on a single physical FPGA. The communication between host and FPGA is implemented by a communication API on the host and the integration of high-level synthesis (HLS) to accelerate applications. We demonstrate the usability of our framework by implementing a sample user design on an FPGA and measuring the performance with up to four simultaneous virtual user designs. © 2015 IEEE."
"Kim B., Jung H." $ "LW-RDMA: Design and implementation of a lightweight RDMA API for InfiniBand-based clusters" $ "Due to the development of low-latency networks such as InfiniBand and Myrinet, cluster-based computing systems are now commonly used when implementing computing-intensive applications. InfiniBand is the de-facto standard for highperformance cluster-based computing systems. InfiniBand supports RDMA (Remote Direct Memory Access) features and provides a native API for these features. The use of the native-API-like VPI Verbs API is not easy owing to its complexity. However, customizing and optimizing can be done to improve the development efficiency. In this paper, we design and implement a lightweight RDMA API to improve the usability and applicability of InfiniBand-based clusters. The proposed method is termed LW-RDMA. The LW-RDMA API is lightweight and simple to use by those without expertise in the area of InfiniBand architecture and/or related details. In the experimental results, the implemented LW-RDMA showed better data transfer efficiency performance in some cases when compared to other RDMA techniques. © 2015 ACM."
"Xu X., Luis G.M., Lobov A., Lastra J.L.M." $ "Multiple ontology workspace management and performance assessment" $ "This paper describes the development of a multiple ontology workspace management system and its performance assessment. This management system provides users with their own ontology workspace as a repository. It aims to facilitate the storage and manipulation of ontology models for knowledge driven manufacturing execution systems. The system uses Jena TDB API to maintain the file system on the server and utilizes Spring framework to provide RESTful web services to expose functionalities to the users such as user account creation, ontology model upload and SPARQL query services. Besides the web interface for the interaction between the user and the system, the system also provides web service endpoints that are compatible with other query engines based on Graph Store HTTP Protocol defined in standard SPARQL 1.1. User authentication is also introduced in the system in order to keep the privacy and integrity of the user data. In the end the performance is tested to evaluate its usability. The developed system offers adequate performance for a large number of users and enables the users to store and retrieve information of ontology anywhere as long as internet is available. As the result, it improves the availability of ontology as an important role in knowledge representation, knowledge acquisition and knowledge driven manufacturing systems. © 2015 IEEE."
"Favario L., Meo A.R., Masala E." $ "A New Platform for Cross-Repository Creation and Sharing of Educational Resources: Architecture and a Case Study" $ "Currently there is a large amount of educational resources available, developed by many educational institutions at all level. One of the main challenges is to make use of such wealth of material in a simple and effective way, especially when pre-university education is involved, ranging from primary schools to high schools. The main difficulties experienced by the teachers willing to tailor the available material to the specific needs of their class are typically the lack of available time and the difficulties in learning the peculiar procedures that each repository system (including CMS, LMS etc.) requires. This work presents an architecture to integrate different repository systems using the Content Management Interoperability Services (CMIS) API, as well as an integration layer that provides a much more simplified interface suitable for the needs of the content creators (i.e., Teachers), and the users of the contents (i.e., The learners). Both the technical aspects of integration and the usability issues from the point of view of the teachers are described and considered in the design. The first experiments, evaluated by means of performance indicators and some user feedbacks, show that the platform has the potential for widespread adoption in the Italian educational environment. © 2015 IEEE."
"Duncan B., Zhang Y." $ "Neural networks for sentiment analysis on Twitter" $ "The online medium has become a significant way that people express their opinions online. Sentiment analysis can be used to find out the polarity of an opinion, such as positive, negative, or neutral. Sentiment analysis has applications such as companies getting their customer's opinions on their products, political sentiment analysis, or opinions on movie reviews. Recent research has involved looking at text from online blogs, tweets, online movie reviews, etc. to try and classify the text as being positive, negative, or neutral. For this research, a feedforward neural network will be experimented with for sentiment analysis of tweets. The training set of tweets are collected using the Twitter API using positive and negative keywords. The testing set of tweets are collected using the same positive and negative keywords. © 2015 IEEE."
"Kuznetsov K., Gorla A., Tavecchia I., Groß F., Zeller A." $ "Mining Android Apps for Anomalies" $ "How do we know a program does what it claims to do? Our CHABADA prototype can cluster Android™ apps by their description topics and identify outliers in each cluster with respect to their API usage. A ""weather"" app that sends messages thus becomes an anomaly, likewise, a ""messaging"" app would typically not be expected to access the current location and would also be identified. In this paper we present a new approach for anomaly detection that improves the classification results of our original CHABADA paper [. 1]. Applied on a set of 22,500+ Android applications, our CHABADA prototype can now predict 74% of novel malware and as such, without requiring any known malware patterns, maintains a false positive rate close to 10%. © 2015 Elsevier Inc. All rights reserved."
"Sohan S.M., Anslow C., Maurer F." $ "A Case Study of Web API Evolution" $ "When applications are integrated using web APIs, changes on a web API may break the dependent applications. This problem exists because old versions of the APIs may no longer be supported, a lack of adequate documentation to upgrade to a newer version, and insufficient communication of changes. In this paper we conducted a case study of evolving Web APIs to investigate what changes are made between versions and how the changes are documented and communicated to the API users. The findings are a list of recommendations for practitioners and researchers based on API change profiles, versioning, documentation and communication approaches that are observed in practice. This study will help inform developers of evolving Web APIs to make decision about versioning, documentation and communication methods. © 2015 IEEE."
"Saied M.A., Abdeen H., Benomar O., Sahraoui H." $ "Could We Infer Unordered API Usage Patterns Only Using the Library Source Code?" $ "Learning to use existing or new software libraries is a difficult task for software developers, which would impede their productivity. Much existing work has provided different techniques to mine API usage patterns from client programs in order to help developers on understanding and using existing libraries. However, considering only client programs to identify API usage patterns is a strong constraint as the client programs source code is not always available or the clients themselves do not exist yet for newly released APIs. In this paper, we propose a technique for mining Non Client-based Usage Patterns (NCBUP miner). We detect unordered API usage patterns as distinct groups of API methods that are structurally and semantically related and thus may contribute together to the implementation of a particular functionality for potential client programs. We evaluated our technique through four APIs. The obtained results are comparable to those of client-based approaches in terms of usage-patterns cohesion. © 2015 IEEE."
"Sawant A.A., Bacchelli A." $ "A dataset for API usage" $ "An Application Programming Interface (API) provides a specific set of functionalities to a developer. The main aim of an API is to encourage the reuse of already existing functionality. There has been some work done into API popularity trends, API evolution and API usage. For all the aforementioned research avenues there has been a need to mine the usage of an API in order to perform any kind of analysis. Each one of the approaches that has been employed in the past involved a certain degree of inaccuracy as there was no type check that takes place. We introduce an approach that takes type information into account while mining API method invocations and annotation usages. This approach accurately makes a connection between a method invocation and the class of the API to which the method belongs to. We try collecting as many usages of an API as possible, this is achieved by targeting projects hosted on GitHub. Additionally, we look at the history of every project to collect the usage of an API from earliest version onwards. By making such a large and rich dataset public, we hope to stimulate some more research in the field of APIs with the aid of accurate API usage samples. © 2015 IEEE."
"Wang W., Malik H., Godfrey M.W." $ "Recommending posts concerning API issues in developer Q&A sites" $ "API design is known to be a challenging craft, as API designers must balance their elegant ideals against 'real-world' concerns, such as utility, performance, backwards compatibility, and unforeseen emergent uses. However, to date, there is no principled method to collect or analyze API usability information that incorporates input from typical developers. In practice, developers often turn to Q&A websites such as stackoverflow.com (SO) when seeking expert advice on API use, the popularity of such sites has thus led to a very large volume of unstructured information that can be searched with diligence for answers to specific questions. The collected wisdom within such sites could, in principle, be of great help to API designers to better support developer needs, if only it could be collected, analyzed, and distilled for practical use. In this paper, we present a methodology that combines several techniques, including social network analysis and topic mining, to recommend SO posts that are likely to concern API design-related issues. To establish a comparison baseline, we introduce two more recommendation approaches: a reputation-based recommender and a random recommender. We have found that when applied to Q&A discussion of two popular mobile platforms, Android and iOS, our methodology achieves up to 93% accuracy and is more stable with its recommendations when compared to the two baseline techniques. © 2015 IEEE."
"Calabria A., Spinozzi G., Benedicenti F., Tenderini E., Montini E." $ "adLIMS: A customized open source software that allows bridging clinical and basic molecular research studies" $ "Background: Many biological laboratories that deal with genomic samples are facing the problem of sample tracking, both for pure laboratory management and for efficiency. Our laboratory exploits PCR techniques and Next Generation Sequencing (NGS) methods to perform high-throughput integration site monitoring in different clinical trials and scientific projects. Because of the huge amount of samples that we process every year, which result in hundreds of millions of sequencing reads, we need to standardize data management and tracking systems, building up a scalable and flexible structure with web-based interfaces, which are usually called Laboratory Information Management System (LIMS). Methods: We started collecting end-users' requirements, composed of desired functionalities of the system and Graphical User Interfaces (GUI), and then we evaluated available tools that could address our requirements, spanning from pure LIMS to Content Management Systems (CMS) up to enterprise information systems. Our analysis identified ADempiere ERP, an open source Enterprise Resource Planning written in Java J2EE, as the best software that also natively implements some highly desirable technological advances, such as the high usability and modularity that grants high use-case flexibility and software scalability for custom solutions. Results: We extended and customized ADempiere ERP to fulfil LIMS requirements and we developed adLIMS. It has been validated by our end-users verifying functionalities and GUIs through test cases for PCRs samples and pre-sequencing data and it is currently in use in our laboratories. adLIMS implements authorization and authentication policies, allowing multiple users management and roles definition that enables specific permissions, operations and data views to each user. For example, adLIMS allows creating sample sheets from stored data using available exporting operations. This simplicity and process standardization may avoid manual errors and information backtracking, features that are not granted using track recording on files or spreadsheets. Conclusions: adLIMS aims to combine sample tracking and data reporting features with higher accessibility and usability of GUIs, thus allowing time to be saved on doing repetitive laboratory tasks, and reducing errors with respect to manual data collection methods. Moreover, adLIMS implements automated data entry, exploiting sample data multiplexing and parallel/transactional processing. adLIMS is natively extensible to cope with laboratory automation through platform-dependent API interfaces, and could be extended to genomic facilities due to the ERP functionalities. © 2015 Calabria et al."
"Mitra R." $ "Rapido: A sketching tool for web API designers" $ "Well-designed Web APIs must provide high levels of usability and must ""get it right"" on the first release. One strategy for accomplishing this feat is to identify usability issues early in the design process before a public release. Sketching is a useful way of improving the user experience early in the design phase. Designers can create many sketches and learn from them. The Rapido tool is designed to automate the Web API sketching process and help designers improve usability in an iterative fashion."
"Malloch J., Sinclair S., Wanderley M.M." $ "Distributed tools for interactive design of heterogeneous signal networks" $ "We introduce libmapper, an open source, cross-platform software library for flexibly connecting disparate interactive media control systems at run-time. This library implements a minimal, openly-documented protocol meant to replace and improve on existing schemes for connecting digital musical instruments and other interactive systems, bringing clarified, strong semantics to system messaging and description. We use automated discovery and message translation instead of imposed system-representation standards to approach “plug-and-play” usability without sacrificing design flexibility. System modularity is encouraged, and data are transported between peers without centralized servers. © 2014, Springer Science+Business Media New York."
"Lamba Y., Khattar M., Sureka A." $ "Pravaaha: Mining android applications for discovering API call usage patterns and trends" $ "Software libraries and frameworks, consisting of a collection of Class and Interface definitions, provide a mechanism for code reuse by providing methods, APIs, components (generic functionality) and a support structure for developers to build applications, products and solutions. KitKat, Jelly Bean, Ice Cream Sandwich, Honeycomb and Gingerbread are different versions (open-source) of Android, one of the most popular mobile platforms in the world. In this paper, we present the results of our large-scale (consisting of 1, 120 open-source applications and 17:4 million lines of code) API usage analysis of Android applications. Our work is motivated by the need to mine actual Android API usage, frequent API call usage patterns and trends to understand and generate empirical data on how developers are using the mobile platform in their applications. Extracting popular and frequently-invoked methods, API packages and API call-usage patterns is useful to both the API Producers and API Consumers. For example, API Producers can view the quantitative data on API usage as a feedback from users on the relevance, usability and applicability of the respective APIs. We conduct a series of experiments on analysing the Android platform API usage (usage of different packages, usage of methods, usage across categories) and present the results of our analysis using graphs such as Bubble Chart, Radar Chart, Heat-Map for effective visualization of the results and for extraction of actionable information. Copyright 2015 ACM."
"Rama G.M., Kak A." $ "Some structural measures of API usability" $ "In this age of collaborative software development, the importance of usable APIs is well recognized. There already exists a rich body of literature that addresses issues ranging from how to design usable APIs to assessing qualitatively the usability of a given API. However, there does not yet exist a set of general-purpose metrics that can be pressed into service for a more quantitative assessment of API usability. The goal of this paper is to remedy this shortcoming in the literature. Our work presents a set of formulas that examine the API method declarations from the perspective of several commonly held beliefs regarding what makes APIs difficult to use.We validate the numerical characterizations of API usability as produced by our metrics through the APIs of several software systems. Copyright © 2013 John Wiley & Sons, Ltd."
"Saied M.A., Sahraoui H., Dufour B." $ "An observational study on API usage constraints and their documentation" $ "Nowadays, APIs represent the most common reuse form when developing software. However, the reuse benefits depend greatly on the ability of client application developers to use correctly the APIs. In this paper, we present an observational study on the API usage constraints and their documentation. To conduct the study on a large number of APIs, we implemented and validated strategies to automatically detect four types of usage constraints in existing APIs. We observed that some of the constraint types are frequent and that for three types, they are not documented in general. Surprisingly, the absence of documentation is, in general, specific to the constraints and not due to the non documenting habits of developers. © 2015 IEEE."
"Pigula P., Nosál M." $ "Unified compile-time and runtime Java annotation processing" $ "Java provides two different options for processing source code annotations. One of them is the annotation processing API used in compile time, and the other is the Reflection API used in runtime. Both options provide different API for accessing program metamodel. In this paper, we examine the differences between those representations and we discuss options on how to unify these models along with advantages and disadvantages of this approach. Based on this proposal, we design a unified Java language model and present a prototype tool which can populate a unified model during both compilation and runtime. The paper includes the designed API of this unified language model. To verify our approach, we have performed experiments to show the usability of the unified metamodel. © 2015, IEEE."
"Kapros E., Peirce N." $ "Usability of educational technology APIs: Findings and guidelines" $ "This paper describes a project that reviewed the usability of existing Educational Technology Application Programming Interfaces (EdTech APIs). The focus was on web-based APIs and the portals through which these are offered to developers. After analysing the state of art with regard to existing EdTech APIs and after conducting a literature review on API usability, a survey was circulated among developers and CTOs of EdTech organisations. The results of the aforementioned three steps were triangulated and resulted in usability guidelines for EdTech APIs. The contribution of this project is twofold: firstly, the production of a concrete set of EdTech API usability guidelines and, secondly, their implementation in a proof-of-concept a portal for two different EdTech offerings. © Springer International Publishing Switzerland 2015."
"Aibin M., Blazejewski M." $ "Complex Elastic Optical Network Simulator (CEONS)" $ "This paper presents the features of an advanced software simulator for the Elastic Optical Network (EON) - Complex Elastic Optical Networks Simulator (CEONS). The CEONS is as a test environment for solving three main issues addressed in EON: Routing and Spectrum Assignment (RSA) problems, Routing, Modulation and Spectrum Assignment (RMSA) problems, and addressing regenerator placement problem. With a universal API, users can design their own algorithms in any programming language and implement them in the simulator as plugins to solve the problems mentioned above. The ease and versatility of implementing the algorithms allows usage of the CEONS in advanced problems and for the introduction of EON technology. © 2015 IEEE."
"Tsouroplis R., Petychakis M., Alvertis I., Biliri E., Lampathaki F., Askounis D." $ "Internet-based enterprise innovation through a community-based API builder to manage APIs" $ "More and more users, these days, keep fragmented data across the web in different applications, through various types of devices, PC, mobiles, wearable devices, etc. By taking advantage of an aggregative Graph Application Programming Interface (API), users have the ability to harness shattered data and keep them into a privacy-aware platform (Cloudlet) where permissions can be applied, and therefore let developers build useful applications from it. To make this unifying Graph API, the API Builder is proposed, as a tool for easily creating new APIs and connecting them with existing ones from Cloud-based Services (CBS), thus providing integration among services and making it easier for users and/or enterprises to reach a larger audience while conveying their message. Typical obstacles, like keeping up to date with CBS API versioning, that seems daunting for developers, are also tackled through semi-automation and the help of the community empowering the API Builder. In that way, application developers do not have to worry for merging various APIs or if the application-generated data are locked in silos of companies, now the user is the judge who gives access to their data and meta-data (i.e. especially context), to enable smarter, context-adaptive and richer in content applications. © 2015 Springer International Publishing Switzerland."
"George J.A., Hemalatha M." $ "Improving authentication and authorization for identity based cloud environment using oauth with fuzzy based blowfish algorithm" $ "Cloud computing involves group of remote servers, software, networks, centralized storage, which allows different number of online services and resources to virtualized business environment, individual users and educational institutions. But the main challenges are security between the user information, trust between the user and service provider. In business environment, Private Cloud Model (PCM) provides tight security of the application data even though in cloud, security issues such as authorization, confidentiality still exist. Therefore, the paper focuses on security, authentication and authorization using OAuth protocol. OAuth protocol authorizes the user while accessing the data from one application via another application for managing identities. OAuth HTTP based protocol is used for authorization and security is implemented using Fuzzy based blowfish encryption algorithm (FBFE). In OAuth, authorization is granted in four different ways like authorization code, implicit, resource owner password credential and client credential. OAuth establishes authorization between application and API user using token and redirect URI. © 2015 Praise Worthy Prize S.r.l. - All rights reserved."
"Abbasi A.A., Jin H., Wu S." $ "A software-defined cloud resource management framework" $ "Network systems employ policies that are inherently dynamic in nature and that depend on temporal conditions defined in terms of external events such as the measurement of bandwidth, use of hosts, intrusion detection or specific time events. Software-defined networking (SDN) offers the opportunity to make networks easier to configure by providing richer configuration methods. To reduce network monitoring costs and traffic overheads, herein, we propose a softwaredefined cloud resource management framework that uses a Fuzzy Analytical Hierarchy Process (Fuzzy-AHP) to customize the network resource allocation. The framework can be incorporated into SDN-enabled cloud infrastructures by using an Application Program Interface (API). Using real-time data, we demonstrate that our framework can improve network resource management and is capable of handling increasing traffic requests. We also validate our framework efficiency through simulations. © Springer International Publishing Switzerland 2015."
"Miller M.A., Schwartz T., Hoover P., Yoshimoto K., Sivagnanam S., Majumdar A." $ "The CIPRES workbench: A flexible framework for creating science gateways" $ "Here we describe the CIPRES Workbench (CW), an open source software framework for creating new science gateways with minimal overhead. The CW is a web application that can be deployed on a modest server, and can be configured to submit command line instructions to any resource where the application has submission privileges. It is designed to be highly configurable / customizable, and supports GUI-based access to HPC resources through a web browser interface as well as programmatic access via a ReSTful API. Using browser access, the CW architecture creates an environment with secure user accounts where user input data, job results, and job provenance are stored. The ReSTful API allows users with a registered a client application to deliver command lines to analytical codes and retrieve results from remote compute resources. A development effort is underway to allow the CW to submit jobs via the Science Gateways as a Platform (SciGaP) services hosted at Indiana University. Copyright © 2015 ACM."
"Zheng M., Xue H., Zhang Y., Wei T., Lui J.C.S." $ "Enpublic apps: Security threats using iOS enterprise and developer certificates" $ "Compared with Android, the conventional wisdom is that iOS is more secure. However, both jailbroken and nonjailbroken iOS devices have number of vulnerabilities. For iOS, apps need to interact with the underlying system using Application Programming Interfaces (APIs). Some of these APIs remain undocumented and Apple forbids apps in App Store from using them. These APIs, also known as ""private APIs"", provide powerful features to developers and yet they may have serious security consequences if misused. Furthermore, apps which use private APIs can bypass the App Store and use the ""Apple's Enterprise/Developer Certificates"" for distribution. This poses a significant threat to the iOS ecosystem. So far, there is no formal study to understand these apps and how private APIs are being encapsulated. We call these iOS apps which distribute to the public using enterprise certificates as ""enpublic"" apps. In this paper, we present the design and implementation of iAnalytics, which can automatically analyze ""enpublic"" apps' private API usages and vulnerabilities. Using iAnalytics, we crawled and analyzed 1,408 enpublic iOS apps. We discovered that: 844 (60%) out of the 1408 apps do use private APIs, 14 (1%) apps contain URL scheme vulnerabilities, 901 (64%) enpublic apps transport sensitive information through unencrypted channel or store the information in plaintext on the phone. In addition, we summarized 25 private APIs which are crucial and security sensitive on iOS 6/7/8, and we have filed one CVE (Common Vulnerabilities and Exposures) for iOS devices. Copyright © 2015 ACM."
"Svajlenko J., Keivanloo I., Roy C.K." $ "Big data clone detection using classical detectors: an exploratory study" $ "Big data analysis is an emerging research topic in various domains, and clone detection is no exception. The goal is to create big data inter-project clone corpora across open-source or corporate-source code repositories. Such corpora can be used to study developer behavior and to reduce engineering costs by extracting globally duplicated efforts into new APIs and as a basis for code completion and API usage support. However, building scalable clone detection tools is challenging. It is often impractical to use existing state-of-the-art tools to analyze big data because the memory and execution time required exceed the average user's resources. Some tools have inherent limitations in their data structures and algorithms that prevent the analysis of big data even when extraordinary resources are available. These limitations are impossible to overcome if the source code of the tool is unavailable or if the user lacks the time or expertise to modify the tool without harming its performance or accuracy. In this research, we have investigated the use of our shuffling framework for scaling classical clone detection tools to big data. The framework achieves scalability on commodity hardware by partitioning the input dataset into subsets manageable by the tool and computing resources. A non-deterministic process is used to randomly ‘shuffle’ the contents of the dataset into a series of subsets. The tool is executed for each subset, and its output for each is merged into a single report. This approach does not require modification to the subject tools, allowing their individual strengths and precision to be captured at an acceptable loss of recall. In our study, we explored the performance and applicability of the framework for the big data dataset, IJaDataset 2.0, which consists of 356 million lines of code from 25,000 open-source Java projects. We begin with a computationally inexpensive version of our framework based on pure random shuffling. This version was successful at scaling the tools to IJaDataset but required many subsets to achieve a desirable recall. Using our findings, we incrementally improved the framework to achieve a satisfactory recall using fewer resources. We investigated the use of efficient file tracking and file-similarity heuristics to bias the shuffling algorithm toward subsets of the dataset that contain undetected clone pairs. These changes were successful in improving the recall performance of the framework. Our study shows that the framework is able to achieve up to 90–95% of a tool's native recall using standard hardware. Copyright © 2014 John Wiley & Sons, Ltd. Copyright © 2014 John Wiley & Sons, Ltd."
"Honko H., Andalibi V., Aaltonen T., Parak J., Saaranen M., Viik J., Korhonen I." $ "W2E-Wellness warehouse engine for semantic interoperability of consumer health data" $ "Novel health monitoring devices and applications allow consumers easy and ubiquitous ways to monitor their health status. However, technologies from different providers lack both technical and semantic interoperability and hence the resulting health data is often deeply tied to a specific service, which is limiting its re-usability and utilization in different services. We have designed a Wellness Warehouse Engine (W2E) that bridges this gap and enables seamless exchange of data between different services. W2E provides interfaces to various data sources and makes data available via unified Representational State Transfer Application Programming Interface (REST API) to other services. Importantly, it includes Unifier - an engine that allows transforming input data into generic units re-usable by other services, and Analyzer - an engine that allows advanced analysis of input data, such as combining different data sources into new output parameters. In this paper, we describe the architecture of W2E and demonstrate its applicability by using it for unifying data from four consumer activity trackers, using a test base of 20 subjects each carrying out three different tracking sessions. Finally, we discuss challenges of building a scalable Unifier engine for the ever-enlarging number of new devices. © 2015 IEEE."
"Joe W., Lee J., Jeong K." $ "CSN: The conceptually manageable sensor network" $ "For the last decade, computer science and information technology have been rapidly expanding their application areas from computation and data processing inside computers to the real time monitoring and management of the real world outside computers. For those emerging applications such as Internet of Things, the flexible, scalable, and interoperable, collaborating sensor networks are crucial. In this paper, we present a sensor network system called the conceptually manageable sensor network (CSN). CSN is intended to support the conceptual management and integration of sensor networks and to provide well-defined and logical APIs for the facilitation of application development. The CSN design is based on the simple and intuitive conceptual model: sets and message queues. In order to minimize the system development efforts and to inherit the system quality of production level open source software, the CSN system is intentionally implemented as a set of extensions to the open source messaging system called ActiveMQ. We conducted some preliminary usability and performance tests for the current CSN implementation. For the usability test, we used data sets from a real world project for the energy-efficient management of Indoor Air Quality in subway stations. Both usability and performance tests showed promising results. © 2015 Woojin Joe et al."
"Chakroun I., Vander Aa T., De Fraine B., Haber T., Wuyts R., Demeuter W." $ "ExaShark: A scalable hybrid array kit for exascale simulation" $ "Many problems in high-performance computing, such as stencil applications in iterative solvers or in particle-based simulations, have a need for regular distributed grids. Libraries offering such n-dimensional regular grids need to take advantage of the latest high-performance computing technologies and scale to exascale systems, but also need to be usable by non HPC experts. This paper presents ExaShark: a library for handling n-dimensional distributed data structures that strikes a balance between performance and usability. ExaShark is an open source middleware, offered as a library, targeted at reducing the increasing programming burden on heterogeneous current and future exascale architectures. It offers its users a global-array-like usability while its runtime can be configured to use shared memory threading techniques (Pthreads, OpenMP, TBB), inter-node distribution techniques (MPI, GPI), or combinations of both. ExaShark has been used to develop applications such as a Jacobian 2D heat simulation and advanced pipelined conjugate gradient solvers. These applications are used to demonstrate the performance and usability of ExaShark. Copyright © 2015 Society for Modeling & Simulation International (SCS)."
"Arora R., Chen K., Gupta M., Clark S., Song C." $ "Leveraging diagrid hub for interactively generating and running parallel programs" $ "Interactive Parallelization Tool (IPT) is a semi-automatic tool that can be used by domain experts and students for transforming certain classes of existing applications into multiple parallel variants. An end-user of IPT provides existing application and high-level specifications for parallelization as input. On the basis of the specifications provided by the end-user, IPT carries out the code changes in the given existing application to generate parallel variants that can be run on different High Performance Computing (HPC) platforms. The parallel programming paradigms that are currently supported by IPT are MPI, OpenMP, and CUDA. The supported base languages are C and C++. Though IPT is still under active development, it has been recently made available on a web-enabled platform, named DiaGrid Hub, with the support from the XSEDE Extended Collaborative Support Service (ECSS). While the main goal of IPT is to make parallel programming easy for its end-users, the main goal of DiaGrid Hub is to enable the research community with instant access to HPC and High Throughput Computing platforms through a user-friendly web-interface. By deploying IPT on DiaGrid Hub, our goal is to enable the end-users to generate parallel versions of their existing applications without having to install IPT locally. They can also immediately compile and run the generated applications on Purdue and XSEDE resources that are available through DiaGrid Hub. Hence, the collaborative project that is reported in this paper lowers the entry-barriers to parallel programming and the usage of the national CyberInfrastructure (CI). In this paper, we present our ongoing work on deploying IPT over DiaGrid and testing the usability of IPT through a web-interface. Copyright © 2015 ACM."
"Murukannaiah P.K., Singh M.P." $ "Platys: An active learning framework for place-aware application development and its evaluation" $ "We introduce a high-level abstraction of location called place. A place derives its meaning from a user's physical space, activities, or social context. In this manner, place can facilitate improved user experience compared to the traditional representation of location, which is spatial coordinates. We propose the Platys framework as a way to address the special challenges of place-aware application development. The core of Platys is a middleware that (1) learns a model of places specific to each user via active learning, a machine learning paradigm that seeks to reduce the user-effort required for training the middleware, and (2) exposes the learned user-specific model of places to applications at run time, insulating application developers from dealing with both low-level sensors and user idiosyncrasies in perceiving places. We evaluated Platys via two studies. First, we collected place labels and Android phone sensor readings from 10 users. We applied Platys' active learning approach to learn each user's places and found that Platys (1) requires fewer place labels to learn a user's places with a desired accuracy than do two traditional supervised approaches, and (2) learns places with higher accuracy than two unsupervised approaches. Second, we conducted a developer study to evaluate Platys' efficiency in assisting developers and its effectiveness in enabling usable applications. In this study, 46 developers employed either Platys or the Android location API to develop a place-aware application. Our results indicate that application developers employing Platys, when compared to those employing the Android API, (1) develop a place-aware application faster and perceive reduced difficulty and (2) produce applications that are easier to understand (for developers) and potentially more usable and privacy preserving (for application users). © 2015 ACM."
"Giancarlo R., Scaturro D., Utro F." $ "ValWorkBench: An open source Java library for cluster validation, with applications to microarray data analysis" $ "The prediction of the number of clusters in a dataset, in particular microarrays, is a fundamental task in biological data analysis, usually performed via validation measures. Unfortunately, it has received very little attention and in fact there is a growing need for software tools/libraries dedicated to it. Here we present ValWorkBench, a software library consisting of eleven well known validation measures, together with novel heuristic approximations for some of them. The main objective of this paper is to provide the interested researcher with the full software documentation of an open source cluster validation platform having the main features of being easily extendible in a homogeneous way and of offering software components that can be readily re-used. Consequently, the focus of the presentation is on the architecture of the library, since it provides an essential map that can be used to access the full software documentation, which is available at the supplementary material website [1]. The mentioned main features of ValWorkBench are also discussed and exemplified, with emphasis on software abstraction design and re-usability. A comparison with existing cluster validation software libraries, mainly in terms of the mentioned features, is also offered. It suggests that ValWorkBench is a much needed contribution to the microarray software development/algorithm engineering community. For completeness, it is important to mention that previous accurate algorithmic experimental analysis of the relative merits of each of the implemented measures [19,23,25], carried out specifically on microarray data, gives useful insights on the effectiveness of ValWorkBench for cluster validation to researchers in the microarray community interested in its use for the mentioned task. © 2014 Elsevier Ireland Ltd."
"Rosoiu M.-E., David J., Euzenat J." $ "A linked data framework for android" $ "Mobile devices are becoming major repositories of personal information. Still, they do not provide a uniform manner to deal with data from both inside and outside the device. Linked data provides a uniform interface to access structured interconnected data over the web. Hence, exposing mobile phone information as linked data would improve the usability of such information. We present an API that provides data access in RDF, both within mobile devices and from the outside world. This API is based on the Android content provider API which is designed to share data across Android applications. Moreover, it introduces a transparent URI dereferencing scheme, exposing content outside of the device. As a consequence, any application may access data as linked data without any a priori knowledge of the data source. © Springer-Verlag Berlin Heidelberg 2015."
"[No author name available]" $ "11th International Conference on Security and Privacy in Communication Networks, SecureComm 2015" $ "The proceedings contain 48 papers. The special focus in this conference is on Mobile, System and Software Security. The topics include: Enforcing permissions with system-wide application execution context, detection, classification and characterization of android malware using API data dependency, improving security and usability for provider independent login architectures with mobile devices, using provenance patterns to vet sensitive behaviors in android apps, isolated execution of sensitive components for mobile applications, intrinsic code attestation by instruction chaining for embedded devices, defeating kernel driver purifier, kernel data attack is a realistic security threat, cloud-based anti-malware via reversible sketch, mining network traffic anomalies with hadoop, a secure interface for isolated execution environment to dynamically use external services, authenticating top-k results of secure multi-keyword search in cloud computing, resource efficient privacy preservation of online social media conversations, real-time privacy leakage monitoring without system modification for android, practicality of using side-channel analysis for software integrity checking of embedded systems, remote activation of hardware trojans via a covert temperature channel, route leaks identification by detecting routing loops, stateful black-box fuzzing of proprietary network protocols, deriving behavioral fingerprints from DNS traffic, enhancing traffic analysis resistance for tor hidden services with multipath routing, an improved method for anomaly-based network scan detection, an attribute-based signcryption scheme to secure attribute-defined multicast communications, generation of transmission control rules compliant with existing access control policies and a markov random field approach to automated protocol signature inference."
"Hastings J., Haug K., Steinbeck C." $ "Ten recommendations for software engineering in research" $ "Research in the context of data-driven science requires a backbone of well-written software, but scientific researchers are typically not trained at length in software engineering, the principles for creating better software products. To address this gap, in particular for young researchers new to programming, we give ten recommendations to ensure the usability, sustainability and practicality of research software. © 2014 Hastings et al., licensee BioMed Central Ltd."
"David Hincapié-Ramos J., Ivanchuk L., Sridharan S.K., Irani P." $ "SmartColor: Real-time color correction and contrast for optical see-through head-mounted displays" $ "Users of optical see-through head-mounted displays (OHMD) perceive color as a blend of the display color and the background. Color-blending is a major usability challenge as it leads to loss of color encodings and poor text legibility. Color correction aims at mitigating color blending by producing an alternative color which, when blended with the background, more closely approaches the color originally intended. To date, approaches to color correction do not yield optimal results or do not work in real-time. This paper makes two contributions. First, we present QuickCorrection, a realtime color correction algorithm based on display profiles. We describe the algorithm, measure its accuracy and analyze two implementations for the OpenGL graphics pipeline. Second, we present SmartColor, a middleware for color management of userinterface components in OHMD. SmartColor uses color correction to provide three management strategies: correction, contrast, and show-up-on-contrast. Correction determines the alternate color which best preserves the original color. Contrast determines the color which best warranties text legibility while preserving as much of the original hue. Show-up-on-contrast makes a component visible when a related component does not have enough contrast to be legible. We describe the SmartColor's architecture and illustrate the color strategies for various types of display content. © 2014 IEEE."
"Pozhidaev M." $ "The framework for accessible applications: Text-based case for blind people" $ "This paper offers a Java framework for creating accessible applications for blind and visually impaired people as part of a proposed general conception based on the maximum use of objects filled with text data only. It offers new types of applications more easily recognizable by disabled persons, helping them to do their work faster and more comfortably. Strong and weak points are analyzed. The published prototype of the proposed platform is described as well as the conclusions of the performed experiments. The prototype is implemented on Java SE and wrapped by a GNU/Linux environment as a bootable ISO-image. Copyright 2014 ACM."
"Zhu Z., Zou Y., Xie B., Jin Y., Lin Z., Zhang L." $ "Mining API usage examples from test code" $ "Lack of effective usage examples in API documents has been proven to be a great obstacle to API learning. To deal with this issue, several approaches have been proposed to automatically extract usage examples from client code or related web pages, which are unfortunately not available for newly released API libraries. In this paper, we propose a novel approach to mining API usage examples from test code. Although test code can be a good source of usage examples, the issue of multiple test scenarios might lead to repetitive and interdependent API usages in a test method, which make it complicated and difficult to extract API usage examples. To address this issue, we study the JUnit test code and summarize a set of test code patterns. We employ a code pattern based heuristic slicing approach to separate test scenarios into code examples. Then we cluster the similar usage examples for recommendation. An evaluation on four open source software libraries demonstrates that the accuracy of our approach is much higher than the state-of-art approach eXoaDoc on test code. Furthermore, we have developed an Eclipse plug in tool UsETeC. © 2014 IEEE."
"Watson R." $ "Applying the cognitive dimensions of API usability to improve API documentation planning" $ "This interactive poster explores the application of the 12 cognitive dimensions of API usability to API documentation planning by using the dimensions to identify and characterize the factors that influence the documentation that the users of an API require. Many factors can complicate estimating and planning the documentation an API requires. Even when an API's documentation requirements can be estimated, it can be difficult to present to stakeholders an objective basis for the estimate. The cognitive dimensions of API usability have characterized APIs and their users successfully and they have been used to communicate these characterizations to stakeholders. It follows that the same dimensions could also help identify the documentation that an API requires to provide a satisfactory and successful experience for the software developers who use the API. © Copyright 2014 ACM."
"Nguyen A.T., Nguyen H.A., Nguyen T.T., Nguyen T.N." $ "Statistical learning approach for mining API usage mappings for code migration" $ "The same software product nowadays could appear in multiple platforms and devices. To address business needs, software companies develop a software product in a programming language and then migrate it to another one. To support that process, semi-automatic migration tools have been proposed. However, they require users to manually define the mappings between the respective APIs of the libraries used in two languages. To reduce such manual effort, we introduce StaMiner, a novel data-driven approach that statistically learns the mappings between APIs from the corpus of the corresponding client code of the APIs in two languages Java and C#. Instead of using heuristics on the textual or structural similarity between APIs in two languages to map API methods and classes as in existing mining approaches, StaMiner is based on a statistical model that learns the mappings in such a corpus and provides mappings for APIs with all possible arities. Our empirical evaluation on several projects shows that StaMiner can detect API usage mappings with higher accuracy than a state-of-the-art approach. With the resulting API mappings mined by StaMiner, Java2CSharp, an existing migration tool, could achieve a higher level of accuracy. © 2014 ACM."
"Nguyen A.T., Nguyen H.A., Nguyen T.T., Nguyen T.N." $ "Statistical learning of API mappings for language migration" $ "The process of migrating software between languages is called language migration or code migration. To reduce manual ef-fort in defining the rules of API mappings for code migra-tion, in this work, we investigate a data-driven model that statistically learns the mappings between API usages from the corpus of the corresponding methods in the client code of the APIs in two languages. Copyright © 2014 ACM."
"Linares-Vásquez M., Bavota G., Bernal-Cárdenas C., Oliveto R., Di Penta M., Poshyvanyk D." $ "Mining energy-greedy API usage patterns in android apps: An empirical study" $ "Energy consumption of mobile applications is nowadays a hot topic, given the widespread use of mobile devices. The high demand for features and improved user experience, given the available powerful hardware, tend to increase the apps' energy consumption. However, excessive energy consumption in mobile apps could also be a consequence of energy greedy hardware, bad programming practices, or particular API usage patterns. We present the largest to date quantitative and qualitative empirical investigation into the categories of API calls and usage patterns that-in the context of the Android development framework-exhibit particularly high energy consumption profiles. By using a hardware power monitor, we measure energy consumption of method calls when executing typical usage scenarios in 55 mobile apps from different domains. Based on the collected data, we mine and analyze energy-greedy APIs and usage patterns. We zoom in and discuss the cases where either the anomalous energy consumption is unavoidable or where it is due to suboptimal usage or choice of APIs. Finally, we synthesize our findings into actionable knowledge and recipes for developers on how to reduce energy consumption while using certain categories of Android APIs and patterns. Copyright 2014 ACM."
"Mijailović Ž., Milićev D." $ "Empirical analysis of GUI programming concerns" $ "The focus of this paper is on identification of typical graphical user interface (GUI) programming concerns. As opposed to some other proposals available in the literature that indicate GUI programming concerns by simple intuition, we have conducted a systematic empirical analysis to derive our proposal. It included an analysis of an existing application programming interface (API), its use in industrial projects, and an analysis of the requirements and issues reported during software maintenance. In addition, we have evaluated more than 50 GUI frameworks and APIs and proved usefulness and generality of our classification of concerns. As an additional proof of applicability of the proposed classification, we have refactored the inheritance hierarchy of the selected GUI API using concern-oriented interfaces. We have implemented a supporting tool that complements the developed API and supports its concern-oriented use. The evaluation of the refactored API showed positive effects on API usability. © 2014 Elsevier Ltd."
"[No author name available]" $ "11th Working Conference on Mining Software Repositories, MSR 2014 - Proceedings" $ "The proceedings contain 63 papers. The topics discussed include: mining energy-greedy API usage patterns in android apps: an empirical study, greenminer: a hardware based mining software repositories software energy consumption framework, mining questions about software energy consumption, prediction and ranking of co-change candidates for clones, incremental origin analysis of source code files, characterizing and predicting blocking bugs in open source projects, the promises and perils of mining GitHub, mining questions asked by web developers, MUX: algorithm selection for software model checkers, finding patterns in static analysis alerts, an empirical study of just-in-time defect prediction using cross-project models, and the impact of code review coverage and code review participation on software quality."
"Asaduzzaman M., Roy C.K., Schneider K.A., Hou D." $ "Context-sensitive code completion tool for better API usability" $ "Developers depend on APIs of frameworks and libraries to support the development process. Due to the large number of existing APIs, it is difficult to learn, remember, and use them during the development of a software. To mitigate the problem, modern integrated development environments provide code completion facilities that free developers from remembering every detail. In this paper, we introduce CSCC, a simple, efficient context-sensitive code completion tool that leverages previous code examples to support method completion. Compared to other existing code completion tools, CSCC uses new sources of contextual information together with lightweight source code analysis to better recommend API method calls. © 2014 IEEE."
"Khan M.A., Muhammad S., Muhammad T." $ "Identifying performance issues based on method invocation patterns of an API" $ "Software systems use many third party libraries by invoking their APIs. A software system may potentially use an API in an inefficient manner, for example, by creating unnecessary or a large number of short-lived objects. This can cause performance degradation in terms of memory usage and latency in critical applications. In this paper we use an object invocation model based on object creation and their method invocations from different code locations. We use a framework to extract the model features from a running software system. The extracted features are then used in a clustering based mechanism to identify problematic code locations within the software system. We demonstrate our approach by analyzing Java Collection API objects in a Java-based open source editor JEdit. We have successfully identified interesting code locations and discussed their impact on software performance. Copyright is held by the owner/author(s)."
"Kashyap V., Hardekopf B." $ "Security signature inference for javascript-based browser addons" $ "JavaScript-based browser addons are a tempting target for malicious developers|addons have high privileges and ready access to a browser user's confidential information, and they have none of the usual sandboxing or other security restric- Tions used for client-side webpage JavaScript. Therefore, vetting third-party addons is important both for addon users and for the browser providers that host oficial addon repos- itories. The current state-of-the-art vetting methodology is manual and ad-hoc, which makes the vetting process diffi- cult, tedious, and error-prone. In this paper, we propose a method to help automate this vetting process. We describe a novel notion of addon se- curity signatures, which provide detailed information about an addon's information ows and API usage, along with a novel static analysis to automatically infer these signatures from the addon code. We implement our analysis and em- pirically evaluate it on a benchmark suite consisting of ten real browser addons taken from the oficial Mozilla addon repository. Our results show that our analysis is practical and useful for vetting browser addons. Copyright © 2014 by the Association for Computing Machinery, Inc. (ACM)."
"Wu W., Adams B., Gueheneuc Y.-G., Antoniol G." $ "ACUA: API change and usage auditor" $ "Modern software uses frameworks through their Application Programming Interfaces (APIs). Framework APIs may change while frameworks evolve. Client programs have to upgrade to new releases of frameworks if security vulnerabilities are discovered in the used releases. Patching security vulnerabilities can be delayed by non-security-related API changes when the frameworks used by client programs are not up to date. Keeping frameworks updated can reduce the reaction time to patch security leaks. Client program upgrades are not cost free, developers need to understand the API usages in client programs and API changes between framework releases before conduct upgrading tasks. In this paper, we propose a tool ACUA to generate reports containing detailed API change and usage information by analyzing the binary code of both frameworks and clients programs written in Java. Developers can use the API change and usage reports generated by ACUA to estimate the work load and decide when to starting upgrading client programs based on the estimation. © 2014 IEEE."
"Bianchini D." $ "Deriving folksonomies for improving web API search" $ "Web APIs, that is, software components made available by third parties through web interfaces, can be aggregated to develop web applications, also known as mashups. Also in this application domain, tagging performed by other mashup designers, who used available Web APIs and mashups composed of them, might be exploited as knowledge that progressively emerges from the community of designers. Web API tagging has some peculiar aspects that will be analyzed in this paper. On the other hand, folksonomies are Web 2.0 tools for conceptualizing knowledge emerging from the bottom. In this paper, we discuss the adoption of folksonomy concepts in modeling Web API use for mashup development. We motivate the adoption of folksonomies in this context and we present the differences with other models that represent very close information. Our folksonomy model is meant to be fully compliant with existing and commonly used public Web API repositories. It is not intended to substitute them, but to complement their contents in order to enable advanced Web API search facilities in such a collaborative environment. © Springer-Verlag Berlin Heidelberg 2014."
"Padhye R., Mukherjee D., Sinha V.S." $ "API as a social glue" $ "The rapid growth of social platforms such as Facebook, Twit-ter and LinkedIn underscores the need for people to connect to existing and new contacts for recreational and profes-sional purposes. A parallel of this phenomenon exists in the software development arena as well. Open-source code shar-ing platforms such as GitHub provide the ability to follow people and projects of interest. However, users are manu-ally required to identify projects or other users whom they might be interested in following. We observe that most soft-ware projects use third-party libraries and that developers who contribute to multiple projects often use the same li-brary APIs across projects. Thus, the library APIs seem to be a good fingerprint of their skill set. Hence, we argue that library APIs can form the social glue to connect people and projects having similar interests. We propose APINet, a system that mines API usage profiles from source code version management systems and create a social network of people, projects and libraries. We describe our initial im-plementation that uses data from 568 open-source projects hosted on GitHub. Our system recommends to a user new projects and people that they may be interested in, suggests communities of people who use related libraries and finds experts for a given topic who are closest in a user's social graph. Copyright © 2014 ACM."
"Sainz F., Mateo S., Beltran V., Bosque J.L., Martorell X., Ayguadé E." $ "Leveraging OmpSs to exploit hardware accelerators" $ "CUDA and OpenCL are the most widely used programming models to exploit hardware accelerators. Both programming models provide a C-based programming language to write accelerator kernels and a host API used to glue the host and kernel parts. Although this model is a clear improvement over a low-level and ad-hoc programming model for each hardware accelerator, it is still too complex and cumbersome for general adoption. For large and complex applications using several accelerators, the main problem becomes the explicit coordination and management of resources required between the host and the hardware accelerators that introduce a new family of issues (scheduling, data transfers, synchronization,...) that the programmer must take into account. In this paper, we propose a simple extension to OmpSs - a data-flow programming model - that dramatically simplifies the integration of accelerated code, in the form of CUDA or OpenCL kernels, into any C, C++ or Fortran application. Our proposal fully replaces the CUDA and OpenCL host APIs with a few pragmas, so we can leverage any kernel written in CUDA C or OpenCL C without any performance impact. Our compiler generates all the boilerplat code while our runtime system takes care of kernels scheduling, data transfers between host and accelerators and synchronizations between host and kernels parts. To evaluate our approach, we have ported several native CUDA and OpenCL applications to OmpSs by replacing all the CUDA or OpenCL API calls by a few number of pragmas. The OmpSs versions of these applications have competitive performance and scalability but with a significantly lower complexity than the original ones. © 2014 IEEE."
"Lee S., Lee S., Lim S., Jung J., Choi S., Kim N., Lee J.-B." $ "An API design process in terms of usability: A case study on building more usable apis for smart TV platform" $ "Products are released based on various platforms. An Application programing interface (API) is important to develop platform based applications effectively. Previously, we had some difficulties in developing applications using our platform APIs. Their name was ambiguous, and their functions were not primitive, and even their documentation was not enough to refer to. Therefore, we had to maintain our platform APIs. In this paper, we propose an API design process and API evaluation guidelines. 'API Analysts' elicit functions from requirement documents. 'API designer' design APIs for the functions following the guidelines. 'Technical writers' produce documentation for the APIs. 'API reviewers' evaluate the APIs and API documentation conforming to the proposed guidelines. Proposed process made our platform APIs more convenient to use for developing applications. © 2014 IEEE."
"Diprose J.P." $ "Tools for programming human robot interaction" $ "Whilst robots are increasingly being used in scenarios that involve human-robot interaction, it is still difficult to program them to interact with humans. This is because current programming tools either require programmers to work at low abstraction levels or they lack features needed to implement particular aspects of human-robot interaction. Our goal is to create an API that is both capable of programming a wide range of human-robot interaction scenarios and is easy to use by the various users of human-robot interaction programming tools. We have taken a first step toward this API by developing an exemplar, high level API for programming social interaction and evaluating it with the Cognitive Dimensions framework. We plan to explore other aspects of human-robot interaction, including navigation and manipulation and exploring how they should be integrated with our existing primitives for programming social interaction. © 2014 IEEE."
"Ramakrishnan L., Poon S., Hendrix V., Gunter D., Pastorello G.Z., Agarwal D." $ "Experiences with user-centered design for the tigres workflow API" $ "Scientific data volumes have been growing exponentially. This has resulted in the need for new tools that enable users to operate on and analyze data. Cyber infrastructure tools, including workflow tools, that have been developed in the last few years has often fallen short if user needs and suffered from lack of wider adoption. User-centered Design (UCD) process has been used as an effective approach to develop usable software with high adoption rates. However, UCD has largely been applied for user-interfaces and there has been limited work in applying UCD to application program interfaces and cyber infrastructure tools. We use an adapted version of UCD that we refer to as Scientist-Centered Design (SCD) to engage with users in the design and development of Tigres, a workflow application programming interface. Tigres provides a simple set of programming templates (e.g., sequence, parallel, split, merge) that can be can used to compose and execute computational and data transformation pipelines. In this paper, we describe Tigres and discuss our experiences with the use of UCD for the initial development of Tigres. Our experience-to-date is that the UCD process not only resulted in better requirements gathering but also heavily influenced the architecture design and implementation details. User engagement during the development of tools such as Tigres is critical to ensure usability and increase adoption. © 2014 IEEE."
"Park J.H., Hung J.C., Yen N.Y., Jeong Y.-S." $ "Guest editorial: Advanced convergence technologies: Big data, IoT, cloud computing" $ "The special issue 2014, Volume 15 of Journal of Internet Technology presents an overview of the state-of-the-art of issues and solution guidelines for the Advanced Convergence Technologies, Big Data, IoT and Cloud Computing. Joon-Min Gil and co-researchers presented a user-created computing framework for desktop grids as entitled 'Organizing a User-Created Computing Environment by RESTful Web Service Open APIs in Desktop Grids.' Using the framework, application developers can utilize DGSs easily and conveniently as computational tools in order to solve their own applications. Sadiq Almuairfi and co-researchers compared IPAS with other authentication schemes by performing two experiments and asking participants to answer a questionnaire as entitled 'A Comparative Study of Authentication Schemes with Security and Usability of IPAS.' They explained the usability and security of IPAS from the users' point of view. Prosper Mafole et al. proposed a novel fragmentation scheme called backoff-free fragment retransmission (BFFR)."
"Spliet R., Howes L., Gaster B.R., Varbanescu A.L." $ "KMA: A dynamic memory manager for OpenCL" $ "OpenCL is becoming a popular choice for the parallel programming of both multi-core CPUs and GPGPUs. One of the features missing in OpenCL, yet commonly required in irregular parallel applications, is dynamic memory allocation. In this paper, we propose KMA, a first dynamic memory allocator for OpenCL. KMA's design is based on a thorough analysis of a set of 11 algorithms, which shows that dynamic memory allocation is a necessary commodity, typically used for implementing complex data structures (arrays, lists, trees) that need constant restructuring at runtime. Taking into account both the survey findings and the status- quo of OpenCL, we design KMA as a two-layer memory manager that makes smart use of the patterns we identified in our application analysis: its basic functionality provides generic malloc() and free() APIs, while the higher layer provides support for building and efficiently managing dynamic data structures. Our experiments measure the performance and usability of KMA, using both microbenchmarks and a real-life case-study. Results show that when dynamic allocation is mandatory, KMA is a competitive allocator. We conclude that embedding dynamic memory allocation in OpenCL is feasible, but it is a complex, delicate task due to the massive parallelism of the platform and the portability issues between different OpenCL implementations. Copyright 2014 ACM."
"Kumar V., Zheng Y., Cavé V., Budimlić Z., Sarkar V." $ "HabaneroUPC++: A compiler-free PGAS library" $ "The Partitioned Global Address Space (PGAS) programming models combine shared and distributed memory features, providing the basis for high performance and high productivity parallel programming environments. UPC++ [39] is a very recent PGAS implementation that takes a library-based approach and avoids the complexities associated with compiler transformations. However, this implementation does not support dynamic task parallelism and only relies on other threading models (e.g., OpenMP or pthreads) for exploiting parallelism within a PGAS place. In this paper, we introduce a compiler-free PGAS library called HabaneroUPC++, which supports a tighter integration of intraplace and inter-place parallelism than standard hybrid programming approaches. The library makes heavy use of C++11 lambda functions in its APIs. C++11 lambdas avoid the need for compiler support while still retaining the syntactic convenience of languagebased approaches. The HabaneroUPC++ library implementation is based on a tight integration of the UPC++ library and the Habanero-C++ library, with new extensions to support the integration. The UPC++ library is used to provide PGAS communication and function shipping support using GASNet, and the Habanero-C++ library is used to provide support for intra-place work-stealing integrated with function shipping. We demonstrate the programmability and performance of our implementation using two benchmarks, scaled up to 6K cores. The insights developed in this paper promise to further enhance the usability and popularity of PGAS programming models. (c) 2014 Association for Computing Machinery. Copyright 2014 ACM 978-1-4503-3247-7/14/10...$15.00."
"Dickinson A.W.L., Abolmaesumi P., Gobbi D.G., Mousavi P." $ "SimITK: Visual programming of the ITK image-processing library within simulink" $ "The Insight Segmentation and Registration Toolkit (ITK) is a software library used for image analysis, visualization, and image-guided surgery applications. ITK is a collection of C++ classes that poses the challenge of a steep learning curve should the user not have appropriate C++ programming experience. To remove the programming complexities and facilitate rapid prototyping, an implementation of ITK within a higher-level visual programming environment is presented: SimITK. ITK functionalities are automatically wrapped into ""blocks"" within Simulink, the visual programming environment of MATLAB, where these blocks can be connected to form workflows: visual schematics that closely represent the structure of a C++ program. The heavily templated C++ nature of ITK does not facilitate direct interaction between Simulink and ITK, an intermediary is required to convert respective data types and allow intercommunication. As such, a SimITK ""Virtual Block"" has been developed that serves as a wrapper around an ITK class which is capable of resolving the ITK data types to native Simulink data types. Part of the challenge surrounding this implementation involves automatically capturing and storing the pertinent class information that need to be refined from an initial state prior to being reflected within the final block representation. The primary result from the SimITK wrapping procedure is multiple Simulink block libraries. From these libraries, blocks are selected and interconnected to demonstrate two examples: a 3D segmentation workflow and a 3D multimodal registration workflow. Compared to their pure-code equivalents, the workflows highlight ITK usability through an alternative visual interpretation of the code that abstracts away potentially confusing technicalities. © 2014 Society for Imaging Informatics in Medicine."
"Popelka S., Dedkova P." $ "Extinct village 3D visualization and its evaluation with eye-movement recording" $ "The objective of the project was to create 3D visualization of extinct village and its evaluation using eye-tracking. As an area of interest, extinct village Čistá was selected. The village was located in Karlovy Vary Region in Czech Republic and was destroyed in 1948. The purpose of destroying the village was emerging of military training area. Second purpose was to create instructional video for military purposes ""Fight in the settlement"". During the creation of this video, the village was destroyed. The main content of the project was to create an interactive web application that includes 3D model of the extinct village Čistá. As underlying data, aerial photos made in 1947 and stable cadastre from 1841 were used. Buildings were made according to historical photographs and screen shots from instruction video ""Fight in a settlement"". Resulting 3D model and underlying data were loaded into Google Earth API and are available for the general public now. The last part was to test the model usability using eye-tracking. In total, 28 respondents participated in the experiment. The experiment contained three parts - the overall views of the village, details of the model and tasks, where users were searching for particular building. Results from testing were of statistical and graphical nature. Link to the application was placed on the web site of the project of an educational trail about extinct villages in Slavkov forest area. Created 3D model and application present the extinct village Čistá to potential visitors the educational trail. © 2014 Springer International Publishing."
"Shimizu Y." $ "Incorporating Green into Production and Consumption Behaviours toward Sustainable Logistics Optimization in Process Systems" $ "Recently, realizing low carbon society has attracted a great interest under a provision for essential infrastructure aligned with sustainable development. Deployment of green logistics incorporating co-existence of manufacturers and consumers will be a new key issue for such technologies. Noticing such circumstance, in this paper, we have extended our approaches for logistics optimization to cope with green logistics associated with production and consumption behaviours in process systems. Taking a multi-layer logistics network, we have developed a novel approach that tries to evaluate the minimum total cost and CO2 emission under appropriate constraints through adjusting prone and aversion consciousness on sustainability among the logistics members. Numerical experiment has been carried out to validate effectiveness of the proposed approach. Moreover, to enhance usability toward real-world applications, we provide a system development aimed at using Google map API. © 2014 Elsevier B.V."
"Khan H., Atwater A., Hengartner U." $ "Itus: An implicit authentication framework for android" $ "Security and usability issues with pass-locks on mobile devices have prompted researchers to develop implicit authentication (IA) schemes, which continuously and transparently authenticate users using behavioural biometrics. Contemporary IA schemes proposed by the research community are challenging to deploy, and there is a need for a framework that supports: different behavioural classifiers, given that different apps have different requirements, app developers using IA without becoming domain experts, and real-time classification on resource-constrained mobile devices. We present Itus, an IA framework for Android that allows the research community to improve IA schemes incrementally, while allowing app developers to adopt these improvements at their own pace. CopyrightWe describe the Itus framework and how it provides: ease of use: Itus allows app developers to use IA by changing as few as two lines of their existing code|on the other hand, Itus provides an oracle capable of making advanced recommendations should developers wish to fine-tune the classifiers, exibility: developers can deploy Itus in an application-specific manner, adapting to their unique needs, extensibility: researchers can contribute new behavioural features and classifiers without worrying about deployment particulars, low performance overhead: Itus operates with minimal performance overhead, allowing app developers to deploy it without compromising end-user experience. These goals are accomplished with an API allowing individual stakeholders to incrementally improve Itus without reengineering new systems. We implement Itus in two demo apps and measure its performance impact. To our knowledge, Itus is the first open-source extensible IA framework for Android that can be deployed off-the-shelf. © 2014 by the Association for Computing Machinery, Inc. (ACM)."
"Zhu Z., Zou Y., Jin Y., Xie B." $ "Generating API-usage example for project developers" $ "Usage examples have been shown very helpful for API learning in software reuse. Nowadays, many approaches have been proposed to automatically extract usage examples from client code or web pages for API users. However, they overlooked the benefit of API developers in example publishing and few works paid attention to help API developers to generate usage examples automatically. In this paper, we proposed an approach to generate API-usage example based on test code before the project are released. It analyzed which parts in test code are important for indicating APIusage and summarized some test code patterns, then a heuristic slice algorithm are proposed to extract referential test code as APIusage example based on these patterns. In the experiments, we gave some case studies on the commons-lang3 open source software library. It proved that our approach can provide good assistance for developers in APIs usage example generation."
"Wang W., Godfrey M.W." $ "Detecting API usage obstacles: A study of iOS and android developer questions" $ "Software frameworks provide sets of generic functionalities that can be later customized for a specific task. When developers invoke API methods in a framework, they often encounter obstacles in finding the correct usage of the API, let alone to employ best practices. Previous research addresses this line of questions by mining API usage patterns to induce API usage templates, by conducting and compiling interviews of developers, and by inferring correlations among APIs. In this paper, we analyze API-related posts regarding iOS and Android development from a Q&A website, stackoverflow.com. Assuming that API-related posts are primarily about API usage obstacles, we find several iOS and Android API classes that appear to be particularly likely to challenge developers, even after we factor out API usage hotspots, inferred by modelling API usage of open source iOS and Android applications. For each API with usage obstacles, we further apply a topic mining tool to posts that are tagged with the API, and we discover several repetitive scenarios in which API usage obstacles occur. We consider our work as a stepping stone towards understanding API usage challenges based on forum-based input from a multitude of developers, input that is prohibitively expensive to collect through interviews. Our method helps to motivate future research in API usage, and can allow designers of platforms - such as iOS and Android - to better understand the problems developers have in using their platforms, and to make corresponding improvements. © 2013 IEEE."
"Gascon H., Yamaguchi F., Arp D., Rieck K." $ "Structural detection of Android malware using embedded call graphs" $ "The number of malicious applications targeting the Android system has literally exploded in recent years. While the security community, well aware of this fact, has proposed several methods for detection of Android malware, most of these are based on permission and API usage or the identification of expert features. Unfortunately, many of these approaches are susceptible to instruction level obfuscation techniques. Previous research on classic desktop malware has shown that some high level characteristics of the code, such as function call graphs, can be used to find similarities between samples while being more robust against certain obfuscation strategies. However, the identification of similarities in graphs is a non-trivial problem whose complexity hinders the use of these features for malware detection. In this paper, we explore how recent developments in machine learning classification of graphs can be efficiently applied to this problem. We propose a method for malware detection based on efficient embeddings of function call graphs with an explicit feature map inspired by a linear-time graph kernel. In an evaluation with 12,158 malware samples our method, purely based on structural features, outperforms several related approaches and detects 89% of the malware with few false alarms, while also allowing to pin-point malicious code structures within Android applications. © 2013 ACM."
"Moritz E., Linares-Vasquez M., Poshyvanyk D., Grechanik M., McMillan C., Gethers M." $ "ExPort: Detecting and visualizing API usages in large source code repositories" $ "This paper presents a technique for automatically mining and visualizing API usage examples. In contrast to previous approaches, our technique is capable of finding examples of API usage that occur across several functions in a program. This distinction is important because of a gap between what current API learning tools provide and what programmers need: current tools extract relatively small examples from single files/functions, even though programmers use APIs to build large software. The small examples are helpful in the initial stages of API learning, but leave out details that are helpful in later stages. Our technique is intended to fill this gap. It works by representing software as a Relational Topic Model, where API calls and the functions that use them are modeled as a document network. Given a starting API, our approach can recommend complex API usage examples mined from a repository of over 14 million Java methods. © 2013 IEEE."
"Freitas A., O'Riain S., Curry E." $ "A distributional semantic search infrastructure for linked dataspaces" $ "This paper describes and demonstrates a distributional semantic search service infrastructure for Linked Dataspaces. The center of the approach relies on the use of a distributional semantics infrastructure to provide semantic search and query services over data for users and applications, improving data accessibility over the Dataspace. By accessing the services through a REST API, users can semantically index and search over data using the distributional semantic knowledge embedded in the reference corpus. The use of distributional semantic models, which rely on the automatic extraction from large corpora, supports a comprehensive and approximative semantic matching mechanism with a low associated adaptation cost for the inclusion of new data sources. © Springer-Verlag 2013."
"Amini R., Lisetti C." $ "HapFACS: An open source API/Software to generate FACS-based expressions for ECAs animation and for corpus generation" $ "We present HapFACS (ver. beta), a new open source software and API for generating FACS-based facial expressions on 3D virtual characters that have accompanying lip-synchronized animation abilities. HapFACS has two main usage scenarios: First, with the HapFACS software, users can generate repertoires of realistic FACS-validated facial expressions, either as static images or as videos, Second, with the accessible HapFACS API, users can animate speaking virtual characters with real-time realistic facial expressions, and embed these expressive characters in their own application(s) without any prior experience in computer graphics and modeling. We describe how HapFACS (1) provides control over 49 FACS Action Units at all levels of intensity, (2) enables the animation of faces with a single AU or a composition of AUs, activated unilaterally or bilaterally, and (3) can be applied to any supported character in the underlying 3D-character system. Finally, we provide details of evaluation experiments we conducted with FACS-certified scorers to validate the facial expressions generated by HapFACS. © 2013 IEEE."
"Lin H., Jia J., Wu X., Cai L." $ "TalkingAndroid: An interactive, multimodal and real-time talking avatar application on mobile phones" $ "In this paper, we present a novel interactive, multimodal and real-time 3D talking avatar application, on mobile platforms. The application is based on a novel network independent, stand-alone framework using cross-platform JNI and OpenGL ES library. In this framework, we implement the audio synthesis, facial animation rendering and the audio-visual synchronization process on the mobile client using the native APIs to optimize the render performance and power consumption. We also utilize the existing interactive APIs on the mobile devices to extend the usability of the application. Experiment results show that the proposed framework for mobile platforms can run smoothly on the current mobile devices with real-time multimodal interaction. Compared to the traditional video streaming method and the client-server framework, the proposed framework has much lower network requirement, with much shorter interaction delay and more efficient power consumption. The presented application can be used in entertainment, education and many other interactive areas. © 2013 APSIPA."
"Fujimoto T., Nishimura K., Takahashi K., Yachi M., Takahashi K., Yamauchi Y." $ "Global math: Development of online platform for mathematical thinking games" $ "While some gaming portals provide learning-based games, most of them either merely showcase games without offering any function for user feedback for the developers or do not provide open access to individual developers, even if a website has functions for data collection. Therefore, it is difficult for individual developers and small independent teams to obtain user feedback for making enhancements in their games in the prototyping phase. The purpose of this research is to develop and evaluate an open online platform system to host mathematical thinking games. Through a joint research project in collaboration with the University of Tokyo and Benesse Corporation, we have developed the 'Global Math' platform, which is an open online platform to host mathematical thinking games for Indie game developers and students interested in developing learning games. The platform features the 'Global Math API', which enables game developers to obtain play log data by simply registering and embedding certain JavaScript codes. The API offers an interface that stores play log data in the Global Math platform database. The platform offers data-analytic functions to monitor how the games are played and received by audiences. As a formative assessment of the platform in terms of usability and effectiveness, four teams of undergraduate students who study game design participated in a game design project using the platform. The teams worked on the project for two months and uploaded four game prototypes successfully. The survey findings indicate that the students found that this project offered them an opportunity to think about different aspects of game design that they had not considered previously, and they found it appealing to develop mathematical learning games. It showed that developing mathematical games can be engaging for students as long as they are provided with the necessary resources. The survey also indicates that more instructional and technical support for developers is necessary to use the functions of the platform."
"Kalavri V., Vlassov V." $ "MapReduce: Limitations, optimizations and open issues" $ "MapReduce has recently gained great popularity as a programming model for processing and analyzing massive data sets and is extensively used by academia and industry. Several implementations of the MapReduce model have emerged, the Apache Hadoop framework being the most widely adopted. Hadoop offers various utilities, such as a distributed file system, job scheduling and resource management capabilities and a Java API for writing applications. Hadoop's success has intrigued research interest and has led to various modifications and extensions to the framework. Implemented optimizations include performance improvements, programming model extensions, tuning automation and usability enhancements. In this paper, we discuss the current state of the Hadoop framework and its identified limitations. We present, compare and classify Hadoop/MapReduce variations, identify trends, open issues and possible future directions. © 2013 IEEE."
"Hu R., Neykova R., Yoshida N., Demangeon R., Honda K." $ "Practical interruptible conversations: Distributed dynamic verification with session types and Python" $ "The rigorous and comprehensive verification of communication-based software is an important engineering challenge in distributed systems. Drawn from our industrial collaborations [33,28] on Scribble, a choreography description language based on multiparty session types, this paper proposes a dynamic verification framework for structured interruptible conversation programming. We first present our extension of Scribble to support the specification of asynchronously interruptible conversations. We then implement a concise API for conversation programming with interrupts in Python that enables session types properties to be dynamically verified for distributed processes. Our framework ensures the global safety of a system in the presence of asynchronous interrupts through independent runtime monitoring of each endpoint, checking the conformance of the local execution trace to the specified protocol. The usability of our framework for describing and verifying choreographic communications has been tested by integration into the large scientific cyberinfrastructure developed by the Ocean Observatories Initiative. Asynchronous interrupts have proven expressive enough to represent and verify their main classes of communication patterns, including asynchronous streaming and various timeout-based protocols, without requiring additional synchronisation mechanisms. Benchmarks show conversation programming and monitoring can be realised with little overhead. © 2013 Springer-Verlag."
"[No author name available]" $ "Integrated Formal Methods - 10th International Conference, IFM 2013, Proceedings" $ "The proceedings contain 29 papers. The topics discussed include: systems design guided by progress concerns, assume-guarantee specifications of state transition diagrams for behavioral refinement, automated anonymity verification of the ThreeBallot voting system, compositional verification of software product lines, deductive verification of state-space algorithms, inductive verification of hybrid automata with strongest postcondition calculus, priced timed automata and statistical model checking, improved reachability analysis in DTMC via divide and conquer, solving games using incremental induction, model-checking software library API usage rules, detecting vulnerabilities in Java-card bytecode verifiers using model-based testing, integrating formal predictions of interactive system behaviour with user evaluation, integrating proved state-based models for constructing correct distributed algorithms, and a compositional automata-based semantics for property patterns."
"Katayama S.-Y., Goda T., Shiramatsu S., Ozono T., Shintani T." $ "A fast synchronization mechanism for collaborative web applications based on HTML5" $ "We are developing a collaborative web application for editing PDF documents using web browsers. Our system enables users to edit the same document in real-time. Users can share annotations on papers in real-time on web browsers. One of the advantages of our system is very high availability. Users only need to have their own web browsers. To improve the usability of our system, we need to consider synchronization delay. Synchronization delay consists of network delay and drawing delay. Our system draws PDF files by using JavaScript, it is not fast enough for real-time collaborative editing. We propose a new synchronization method using Canvas API to reduce drawing delay. We show how to implement a real-time collaborative editing system by using the method. We present evaluation results that indicate the method is suited for collaborative web applications. © 2013 IEEE."
"Herbold S., Harms P." $ "AutoQUEST - Automated quality engineering of event-driven software" $ "In this paper, we present Auto QUEST, a testing platform for Event-Driven Software (EDS) that decouples the implementation of testing techniques from the concrete platform they should be applied to. Auto QUEST provides the means to define testing techniques against an abstract Application Programming Interface (API) and provides plug-ins to port the testing techniques to distinct platforms. The requirements on plug-in implementations for Auto QUEST are kept low to keep the porting effort low. We implemented several testing techniques on top of Auto QUEST and provide five plug-ins for concrete software platforms, which demonstrates the capabililities of our approach. © 2013 IEEE."
"Klein F., Rubinsteiny D., Sonsz K., Einabadix F., Herhut S., Slusallek P." $ "Declarative AR and image processing on the Web with Xflow" $ "Recently, modernWeb browser became capable of supporting powerful, interactive 3D graphics both via the low-level, imperative API of WebGL as well as via a high-level, declarative approach like XML3D. The obvious next step (particularly with respect to mobile platforms) is to combine video from the real world with matched virtual content - Augmented or Mixed Reality (AR/MR). However, AR requires extensive image or video processing, feature detection and tracking, and applying the results to 3D rendering - all of which is hard to implement in a Web context. In this paper we present a novel approach that encapsulates lowlevel image-processing and AR operations into re-usable high-level XML3D/Xflow components that are part of the HTML-5 DOM. A Web developer can then easily and flexibly arrange these components into (possibly complex) processing flow-graphs without having to worry about the internal computations and the structure of these modules. Our extended Xflow implementation automatically optimizes, schedules, and synchronizes the processing of the flow graph(s) in the context of real-time 3D rendering. Finally, we provide an integration model that greatly simplifies building AR applications for the browser. We demonstrate this with several simple AR and image processing applications using a polyfill implementation working in all modern browsers and evaluate the performance. Finally, we show how the declarative framework can be optimized with respect to performance and usability using parallelization with Web Workers and RiverTrail. Copyright © ACM 978-1-4503-2133-4/13/06 $15.00."
"Scheller T., Kühn E." $ "Usability evaluation of configuration-based API design concepts" $ "Usability is an important quality attribute for designing APIs, but usability-related decision factors are often unknown. This is also the case when looking at APIs for configuration tasks, like for dependency injection or object-relational mapping. In these areas three different API design concepts can be found, which are annotations, fluent interfaces, and XML. There exists no research concerning usability-related characteristics and differences between these concepts. In this paper, we present a usability study that identifies such characteristics and differences between the three concepts, by comparing three different variants of an API for dependency injection. From the study results we evaluate advantages and disadvantages in different use cases, and show how to build more usable configuration-based APIs. © 2013 Springer-Verlag."
"Khatoon S., Li G., Mahmood A." $ "Comparison and evaluation of source code mining tools and techniques: A qualitative approach" $ "Program source code substantially is structured and contains semantically rich programming constructs such as variables, functions, data structures, and program structures which indicate patterns. Mining source code by using different data mining techniques to extract the valuable hidden patterns is the new revolution in software engineering. Over last decade many tools and techniques have been proposed by researcher to extract pertinent information and uncover relationships and trends from source code about a particular characteristic of Software Engineering (SE) tasks. These efforts have resulted in wide range of research body but currently there is no comprehensive overview exists. This paper surveys the tools and techniques which rely only on data mining methods to determine patterns from source code in context of programming, bug detection, maintenance, program understanding and software reuse. The work provides comparison and evaluation of the current state-of-the-art source code mining tools and techniques, and organizes the large amount of information into a coherent conceptual way. Thus the survey provides researchers with a concise overview of source code mining techniques and assists practitioners the selection of appropriate techniques for their work. The result of this review shows existing studies focus on one specific pattern being mined from source code such as special kind of bug detection. Thus, there is a need of multiple tools to test and find potential information from software which increase cost and time of development. Hence there is a strong need of tool which helps in developing quality software by automatically detecting different kind of bugs and generates relevant API code automatically to help in decreasing overall software development time. © 2013-IOS Press and the authors. All rights reserved."
"Aigner W., Hoffmann S., Rind A." $ "EvalBench: A software library for visualization evaluation" $ "It is generally acknowledged in visualization research that it is necessary to evaluate visualization artifacts in order to provide empirical evidence on their effectiveness and efficiency as well as their usability and utility. However, the difficulties of conducting such evaluations still remain an issue. Apart from the required know-how to appropriately design and conduct user studies, the necessary implementation effort for evaluation features in visualization software is a considerable obstacle. To mitigate this, we present EvalBench, an easy-to-use, flexible, and reusable software library for visualization evaluation written in Java. We describe its design choices and basic abstractions of our conceptual architecture and demonstrate its applicability by a number of case studies. EvalBench reduces implementation effort for evaluation features and makes conducting user studies easier. It can be used and integrated with third-party visualization prototypes that need to be evaluated via loose coupling. EvalBench supports both, quantitative and qualitative evaluation methods such as controlled experiments, interaction logging, laboratory questionnaires, heuristic evaluations, and insight diaries. © 2013 The Author(s) Computer Graphics Forum © 2013 The Eurographics Association and Blackwell Publishing Ltd."
"Businge J., Serebrenik A., Van Den Brand M." $ "Analyzing the eclipse API usage: Putting the developer in the loop" $ "Eclipse guidelines distinguish between two types of interfaces provided to third-party developers, i.e., APIs and non-APIs. APIs are stable and supported, while non-APIs are unstable, unsupported and discouraged as they are subject to arbitrary change or removal without notice. In our previous work, we found that despite the discouragement of Eclipse, the use of non-APIs in Eclipse third-party plug-ins (ETPs) is not uncommon. Furthermore, we found that these non-APIs are the main cause of ETP incompatibilities in forthcoming releases of the Eclipse. In the current work we conducted a survey aiming at understanding why do the ETP developers use non-APIs. We have observed that developers with a level of education of up to master degree have a tendency not to read product manuals/guidelines. Furthermore, while for less experienced developers instability of the non-APIs overshadows their benefits, more experienced developers prefer to enjoy the benefits of non-APIs despite the instability problem. Finally, we have observed that there are no significant differences between Open Source and commercial Eclipse products in terms of awareness of Eclipse guidelines and interfaces, Eclipse product size and updating of Eclipse product in the new SDK releases. © 2013 IEEE."
"Parashar H.J., Sachdeva S., Batra S." $ "Enhancing access to standardized clinical application for mobile interfaces" $ "As Electronic Health Records (EHRs) become more prevalent in health care, research is needed to understand the efficacy within clinical contexts for a standard based health application. The current research explores 'Opereffa' to be used for handheld moveable devices. Opereffa stands for openEHR REFerence Framework and Application. It is a project for creating an open source clinical application, which will be driven by the Clinical Review Board of openEHR [2]. It is based on openEHR standard which combines structure of archetypes and terminology codes. This is the first effort for its exploration on mobile devices. The aim is to generate an application programming interface for Android based mobile for its testing on a sample set of archetypes. Later, we will extend this research to other mobile operating systems. The study has been done for increasing the usability and reach ability of EHRs. It enhances data sharing through mobile for standardized EHRs (through use of archetypes). © 2013 Springer-Verlag Berlin Heidelberg."
"Scheller T., Kühn E." $ "Influence of code completion methods on the usability of APIs" $ "Code completion is an important feature in modern IDEs, helping programmers to find needed classes and methods in external APIs. A code completion mechanism defines the way APIs are presented to the programmer and thereby has a strong influence on their usability. In this paper, we present a study that evaluates the code completion mechanisms of popular Java and .Net IDEs. It shows that there are significant differences between them, and that with a good code completion mechanism, programmers more often find the most optimal methods and overloads, reducing the complexity of the resulting code and improving overall performance. Based on the results we present suggestions to improve the usability of APIs."
"Ameddah H., Assas M." $ "Three-dimensional (3D) bio-cad modeling of human knee" $ "In the past three decades, the fast growing technology of Computer-Aided Design and Computer-Aided Manufac- turing (CAD/CAM) has been continuously developed and applied to many fields in engineering, manufacturing, entertainment, and medicine. While maturing in some of the fields, CAD/CAM is still in developing stages in the medical and prototyping arena. Medical images (X-ray, CT, MR) of human organs are widely used in the everyday clinical praxis. A deeper insight of the anatomical properties can be obtained by building a three dimensional computer model from the images. In order to properly evaluate the 2D images and also the 3D objects engineers need efficient and robust graphical and geometrical tools. The purpose of this paper was to establish a procedure for attaining 3D solid models of the human knee. Solid models of the distal end of the femur and the tibial plateau were created to approximate the human knee (tibio-femoral joint). To create these models, points taken from magnetic resonance images (MRI) were first processing by methods for edge detect- ing using Matlab toolbox image processing and then converted to a point cloud in each cross section. From here, B-spline was created points in each cross section. Finally, these B-spline were lofted together to form a 3D solid model. The results of this paper are the first to develop image processing 3D visualization in Solidworks Application Programming Interface (API) using Visual Basic Language. The system performance is tested using MRI data, and 3D physical models Knee for MRP are created directly from Solidworks. © 2013 American Scientific Publishers All rights reserved."
"Mendez D., Baudry B., Monperrus M." $ "Empirical evidence of large-scale diversity in API usage of object-oriented software" $ "In this paper, we study how object-oriented classes are used across thousands of software packages. We concentrate on ""usage diversity"", defined as the different statically observable combinations of methods called on the same object. We present empirical evidence that there is a significant usage diversity for many classes. For instance, we observe in our dataset that Java's String is used in 2460 manners. We discuss the reasons of this observed diversity and the consequences on software engineering knowledge and research. © 2013 IEEE."
"Rabkin A., Reiss C., Katz R., Patterson D." $ "Using clouds for MapReduce measurement assignments" $ "We describe our experiences teaching MapReduce in a large undergraduate lecture course using public cloud services and the standard Hadoop API. Using the standard API, students directly experienced the quality of industrial big-data tools. Using the cloud, every student could carry out scalability benchmarking assignments on realistic hardware, which would have been impossible otherwise. Over two semesters, over 500 students took our course. We believe this is the first large-scale demonstration that it is feasible to use pay-as-you-go billing in the cloud for a large undergraduate course. Modest instructor effort was sufficient to prevent students from overspending. Average per-pupil expenses in the Cloud were under $45. Students were excited by the assignment: 90% said they thought it should be retained in future course offerings. © 2013 ACM."
"Khan M.A., Muhammad S., Muhammad T." $ "Runtime invocation analysis of API objects in large code base" $ "Software systems use several third party libraries via their available interfaces popularly known as the application programming interface (API). The runtime usage of the API in an object-oriented software system can be defined by several characteristics including the type and number of API objects created, the methods invoked on those objects, and the source code locations from where the objects were created or invoked during their lifetime. These characteristics can be used to identify the source code locations exhibiting different types of runtime behavior which can be used for program comprehension, debugging, performance monitoring and fault detection. In this paper, we define object invocation model based on above-mentioned characteristics. We also propose an implementation framework that can be used to extract key model parameters from any source code. The Java Collections API is one of the most widely used Java APIs. We demonstrate effectiveness of our proposed approach by analyzing object invocation model for Java Collection API in a large open source project. © 2013 IEEE."
"Agarwal D., Prasad S.K." $ "Azure BOT: A framework for bag-of-tasks applications on the azure cloud platform" $ "Windows Azure is an emerging cloud platform that provides application developers with APIs to write scientific and commercial applications. However, the steep learning curve to understand the unique architecture of the cloud platforms in general and continuously changing Azure APIs specifically, make it difficult for the application developers to write cloud based applications. During our extensive experience with Azure cloud platform over the past few years, we have identified the need of a framework to abstract the complexities of working with the Azure cloud platform. Such a framework is essential for adoption of cloud technologies. Therefore, we have created AzureBOT-A framework for the Azure cloud platform to write bag-of-tasks class of distributed applications. Azure provides a straightforward and general interface that permits developers to concentrate on their application logic rather than cloud interaction. While we have implemented AzureBOT on Azure cloud platform, our framework design is generic to most of the cloud platforms. In this paper, we present the detailed design of our framework's internal architecture, the APIs in brief, and the usability of our framework. We also discuss the implementation of two different applications and their scalability results over 100Azure worker processors. © 2013 IEEE."
"Ghosh S., Liao T., Calandra H., Chapman B.M." $ "Performance of CPU/GPU compiler directives on ISO/TTI kernels" $ "GPUs are slowly becoming ubiquitous devices in High Performance Computing, as their capabilities to enhance the performance per watt of compute intensive algorithms as compared to multicore CPUs have been identified. The primary shortcoming of a GPU is usability, since vendor specific APIs are quite different from existing programming languages, and it requires a substantial knowledge of the device and programming interface to optimize applications. Hence, lately a growing number of higher level programming models are targeting GPUs to alleviate this problem. The ultimate goal for a high-level model is to expose an easy-to-use interface for the user to offload compute intensive portions of code (kernels) to the GPU, and tune the code according to the target accelerator to maximize overall performance with a reduced development effort. In this paper, we share our experiences of three of the notable high-level directive based GPU programming models—PGI, CAPS and OpenACC (from CAPS and PGI) on an Nvidia M2090 GPU. We analyze their performance and programmability against Isotropic (ISO)/Tilted Transversely Isotropic (TTI) finite difference kernels, which are primary components in the Reverse Time Migration (RTM) application used by oil and gas exploration for seismic imaging of the sub-surface. When ported to a single GPU using the mentioned directives, we observe an average 1.5–1.8x improvement in performance for both ISO and TTI kernels, when compared with optimized multi-threaded CPU implementations using OpenMP. © 2013, Springer-Verlag Wien."
"Szydzik T., Nunez A., De Paepe L., Albani L." $ "Contributions to visualization algorithm enabling GPU-accelerated image displaying for dual panel high dynamic range LCD display" $ "High dynamic range displays based on dual panel LCD are a viable option for building a low-cost solution for providing high bit depth visualization systems. One of the factors limiting the usability of this type of displays are the computation requirements of the algorithm necessary for correct visualization using the two stacked panels. In this work we present the methodology and the results of mapping this algorithm on a CPU+GPU platform using the OpenCL 1.1 API. Visualization of a 2048×2048 image when executed on a CPU+GPU (AMD Radeon V7800) platform is performed up to 7.6 times faster then when only the CPU is used. The first results are promising and encourage the use of GPUs (or APUs) for acceleration of this kind of processing. © 2013 University of Trieste and University of Zagreb."
"Burns C., Ferreira J., Hellmann T.D., Maurer F." $ "Usable results from the field of API usability: A systematic mapping and further analysis" $ "Modern software development often involves the use of complex, reusable components called Application Programming Interfaces (APIs). Developers use APIs to complete tasks they could not otherwise accomplish in a reasonable time. These components are now vital to mainstream software development. But as APIs have become more important, understanding how to make them more usable is becoming a significant research question. To assess the current state of research in the field, we conducted a systematic mapping. A total of 28 papers were reviewed and categorized based on their research type and on the evaluation method employed by its authors. We extended the analysis of a subset of the papers we reviewed beyond the usual limits of a systematic map in order to more closely examine details of their evaluations - such as their structure and validity - and to summarize their recommendations. Based on these results, common problems in the field are discussed and future research directions are suggested. © 2012 IEEE."
"Dai S., Wei T., Zou W." $ "DroidLogger: Reveal suspicious behavior of Android applications via instrumentation" $ "As the mobile devices increased rapidly in recent years, mobile malware is becoming a severe threat to users. Traditional malware detection uses signature-based methods, but these methods can be evaded by obfuscation or polymorphism. So the behavior-based detection techniques were proposed recently. To capture the apps' behavior, previous works either use OS level tool such as strace to capture system call, or intercept high level API by modifying the virtual machine. However, the information retrieved from the former method is too difficult to understand the program's behavior, and the technique used in latter method requires to modify the emulator, which it is not compatible when the Android version upgrade. In this paper, we proposed a new light-weight method to understand the applications' behavior by logging program's API and corresponding arguments. We build the logging system DroidLogger, which instruments the logging code into the application binary, and prints out the API usage information at run time. We analyzed several malware and show DroidLogger can reveal the malicious behavior effectively. © 2012 AICIT."
"Raemaekers S., Van Deursen A., Visser J." $ "Measuring software library stability through historical version analysis" $ "Backward compatibility is a major concern for any library developer. In this paper, we evaluate how stable a set of frequently used third-party libraries is in terms of method removals, implementation change, the ratio of change in old methods to change in new ones and the percentage of new methods in each snapshot. We provide a motivating example of a commercial company which demonstrates several issues associated with the usage of third-party libraries. To obtain dependencies from software systems we developed a framework which extracts dependencies from Maven build files and which analyzes system and library code. We propose four metrics which provide different insights in the implementation and interface stability of a library. The usage frequency of library methods is utilized as a weight in the final metric and is obtained from a dataset of more than 2300 snapshots of 140 industrial Java systems. We finally describe three scenarios and an example of the application of our metrics. © 2012 IEEE."
"Andersch M., Chi C.C., Juurlink B." $ "Using OpenMP superscalar for parallelization of embedded and consumer applications" $ "In the past years, research and industry have introduced several parallel programming models to simplify the development of parallel applications. A popular class among these models are task-based programming models which proclaim ease-of-use, portability, and high performance. A novel model in this class, OpenMP Superscalar, combines advanced features such as automated runtime dependency resolution, while maintaining simple pragma-based programming for C/C++. OpenMP Superscalar has proven to be effective in leveraging parallelism in HPC workloads. Embedded and consumer applications, however, are currently still mainly parallelized using traditional thread-based programming models. In this work, we investigate how effective OpenMP Superscalar is for embedded and consumer applications in terms of usability and performance. To determine the usability of OmpSs, we show in detail how to implement complex parallelization strategies such as ones used in parallel H.264 decoding. To evaluate the performance we created a collection of ten embedded and consumer benchmarks parallelized in both OmpSs and Pthreads. © 2012 IEEE."
"Keller R., Brinkmann S., Gracia J., Niethammer C." $ "Temanejo: Debugging of thread-based task-parallel programs in StarSS" $ "To make use of manycore processors and even accelerators, several parallel programming paradigms exist, such as OpenMP, CAPS HMPP and the StarSs programming model. All of these programming models provide the means for programmers to express parallelism in the source code, identifying tasks and for all but OpenMP the dependency between those, allowing the compiler and the runtime to schedule tasks onto multiple concurrent executing entities, like threads in a many-core systems.While the programmermay have a good overview of which parts of the code may be run independently as separate tasks on a fine granular level, the overall execution behavior may not be obvious at first. This paper describes the usability features of the newly developed Temanejo debugger. © Springer-Verlag Berlin Heidelberg 2012."
"Martioli E., Teeple D., Manset N., Devost D., Withington K., Venne A., Tannock M." $ "Open source pipeline for ESPaDOnS reduction and analysis" $ "OPERA is a Canada-France-Hawaii Telescope (CFHT) open source collaborative software project currently under development for an ESPaDOnS echelle spectro-polarimetric image reduction pipeline. OPERA is designed to be fully automated, performing calibrations and reduction, producing one-dimensional intensity and polarimetric spectra. The calibrations are performed on two-dimensional images. Spectra are extracted using an optimal extraction algorithm. While primarily designed for CFHT ESPaDOnS data, the pipeline is being written to be extensible to other echelle spectrographs. A primary design goal is to make use of fast, modern object-oriented technologies. Processing is controlled by a harness, which manages a set of processing modules, that make use of a collection of native OPERA software libraries and standard external software libraries. The harness and modules are completely parametrized by site configuration and instrument parameters. The software is open-ended, permitting users of OPERA to extend the pipeline capabilities. All these features have been designed to provide a portable infrastructure that facilitates collaborative development, code re-usability and extensibility. OPERA is free software with support for both GNU/Linux and MacOSX platforms. The pipeline is hosted on SourceForge under the name ""opera-pipeline"". This article concentrates on the design and software development of OPERA, whereas a forthcoming paper will present the details of the scientific methods employed by OPERA. © 2012 SPIE."
"Kotowski D., Stacey D.A." $ "Ontology Library: A new approach for storing, searching and discovering ontologies" $ "The backbone of semantic web technologies is the ontology. This is a powerful structure, which allows for the capture, reasoning and storing of expert knowledge across various domains. Ideally these structures should be developed and implemented by experts in a set domain as well as designed with re-usability in mind. However, often due to the lack of availability and difficulties of discovering ontologies, these structures are repeatedly recreated. Current methods for storing, discovering and sharing ontologies employ similar techniques as to those used for software source code or static web pages. These are exposed to the limitation inherent with keyword-based searches, such as ambiguity with the keywords themselves and therefore, the most relevant ontology may not be discovered. This paper will examine some of the existing techniques used for the storing and sharing of ontologies. It will offer a contrasting method analogous to software libraries to develop a standard to store, share, discover, and distribute common ontologies."
"Podziewski A., Litwiniuk K., Legierski J." $ "E-health oriented application for mobile phones" $ "This paper presents the idea of using mobile operators APIs with an e-health usage scenario. Since numerous elderly people are going missing every year, proposed emergency location service presents a way in which mobile operators' networks, the Internet and possibilities given by rapid improvement of phones' functionalities can converge in order to relieve the problem. The description of presented solution is supplemented with sets of accuracy measurements and usability tests, conducted during test deployment. The results confirm usability potential of the service, giving green light for further research and development. Still, in order to make the service reliable, the algorithms used to determine location and detect falls need to be improved. The article presents a method, which may be used to improve the location accuracy."
"[No author name available]" $ "Proceedings of the 1st ACM SIGSPATIAL International Workshop on Mobile Geographic Information Systems, MobiGIS 2012 - In Conjunction with the 20th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems, GIS 2012" $ "The proceedings contain 14 papers. The topics discussed include: interactive traffic-aware route search on smartphones, trafficpulse : a mobile GISystem for transportation, improving unreliable mobile GIS with swarm-based particle filters, mining future spatiotemporal events and their sentiment from online news articles for location-aware recommendation system, evaluation of fine-granular GPS tracking on smartphones, duking it out at the smartphone mobile app mapping API corral: apple, google, and the competition, SALS: semantics-aware location sharing based on cloaking zone in mobile social networks, when and where next: individual mobility prediction, heuristics & usability of virtual attack points for pedestrian navigation: user study using paper-prototyping, a comparison of first- and second-order HMMs in the task of predicting the next locations of mobile individuals, and uncaught signal imputation for accuracy enhancement of WLAN-based positioning systems."
"[No author name available]" $ "Human-Centered Software Engineering - 4th International Conference, HCSE 2012, Proceedings" $ "The proceedings contain 28 papers. The topics discussed include: a compositional model for gesture definition, a development process for usable large scale interactive critical systems: application to satellite ground segments, agile user experience development in a large software organization: good expertise but limited impact, smartphone applications usability evaluation: a hybrid model and its implementation, methods towards API usability: a structural analysis of usability problem categories, putting dementia into context: a selective literature review of assistive applications for users with dementia and their caregivers, puzzle: a visual-based environment for end user development in touch-based mobile phones, towards conflict management in user interface composition driven by business needs, a model for assessing organizational learning in software development organizations, and a personality based design approach using subgroup discovery."
"Grill T., Polacek O., Tscheligi M." $ "Methods towards API usability: A structural analysis of usability problem categories" $ "The usability of Application Programming Interfaces (APIs) is one of the main factors defining the success of a software based framework. Research in the area of human computer interaction (HCI) currently mainly focuses on end-user usability and only little research has been done regarding the usability of APIs. In this paper, we present a methodology on how to use and combine HCI methods with the goal to evaluate the usability of APIs. The methodology consist of three phases - a heuristic evaluation, a developer workshop and interviews. We setup a case-study according to the methodology, in which we are evaluating the usability of a service-oriented framework API. The goal was to explore different HCI methods and compare the applicability of such methods to find usability problems in an API. The case-study combined qualitative and quantitative methods in order to investigate the usability and intuitiveness of the API itself. It allowed us to identify relevant problem areas for usability related issues that could be mapped to specific types of HCI methods. Examples for this are e.g. structural problems, which are identified mainly in inspection methods, while problems regarding errors and exception handling are mainly identified during the hands-on example part of the developer workshops conducted. The resulting problem areas allow us to develop a first classification of API related usability problems that are making the relevancy of usability issues for APIs more explicit and applicable. © 2012 Springer-Verlag."
"Selmeci A., Orosz T." $ "SAP remote communications" $ "SAP implemented a very deep level synchronous connection type based on industry standards, but early enough, in the first releases SAP enhanced this to Remote Function Call protocol and technology. The Remote Function Call technology opened the system to other SAP systems or external applications. Remote function call (RFC) is the fundamental technique for many different communication approaches within SAP solutions. Our document tries to uncover the different capabilities and usability of the SAP communication types like CPI-C, RFC, Q-API, tRFC, etc. In our study we figured out that main points of remote communication usage in a heterogeneous environment where SAP also in place are the business level communication from other SAP system or external application via business application programming interface (BAPI), and the loosely coupled distributed system environment, the ALE (application link enabling) communications based on RFCs. ©2012 IEEE."
"Mishne A., Shoham S., Yahav E." $ "Typestate-based semantic code search over partial programs" $ "We present a novel code search approach for answering queries focused on API-usage with code showing how the API should be used. To construct a search index, we develop new techniques for statically mining and consolidating temporal API specifications from code snippets. In contrast to existing semanticbased techniques, our approach handles partial programs in the form of code snippets. Handling snippets allows us to consume code from various sources such as parts of open source projects, educational resources (e.g. tutorials), and expert code sites. To handle code snippets, our approach (i) extracts a possibly partial temporal specification from each snippet using a relatively precise static analysis tracking a generalized notion of typestate, and (ii) consolidates the partial temporal specifications, combining consistent partial information to yield consolidated temporal specifications, each of which captures a full(er) usage scenario. To answer a search query, we define a notion of relaxed inclusion matching a query against temporal specifications and their corresponding code snippets. We have implemented our approach in a tool called PRIME and applied it to search for API usage of several challenging APIs. PRIME was able to analyze and consolidate thousands of snippets per tested API, and our results indicate that the combination of a relatively precise analysis and consolidation allowed PRIME to answer challenging queries effectively. Copyright © 2012 ACM."
"Mishima H., Aerts J., Katayama T., Bonnal R.J.P., Yoshiura K.-I." $ "The Ruby UCSC API: Accessing the UCSC genome database using Ruby" $ "Background: The University of California, Santa Cruz (UCSC) genome database is among the most used sources of genomic annotation in human and other organisms. The database offers an excellent web-based graphical user interface (the UCSC genome browser) and several means for programmatic queries. A simple application programming interface (API) in a scripting language aimed at the biologist was however not yet available. Here, we present the Ruby UCSC API, a library to access the UCSC genome database using Ruby.Results: The API is designed as a BioRuby plug-in and built on the ActiveRecord 3 framework for the object-relational mapping, making writing SQL statements unnecessary. The current version of the API supports databases of all organisms in the UCSC genome database including human, mammals, vertebrates, deuterostomes, insects, nematodes, and yeast.The API uses the bin index-if available-when querying for genomic intervals. The API also supports genomic sequence queries using locally downloaded *.2bit files that are not stored in the official MySQL database. The API is implemented in pure Ruby and is therefore available in different environments and with different Ruby interpreters (including JRuby).Conclusions: Assisted by the straightforward object-oriented design of Ruby and ActiveRecord, the Ruby UCSC API will facilitate biologists to query the UCSC genome database programmatically. The API is available through the RubyGem system. Source code and documentation are available at https://github.com/misshie/bioruby-ucsc-api/ under the Ruby license. Feedback and help is provided via the website at http://rubyucscapi.userecho.com/. © 2012 Mishima et al., licensee BioMed Central Ltd."
"Rupakheti C.R., Hou D." $ "Evaluating forum discussions to inform the design of an API critic" $ "Learning to use a software framework and its API (Application Programming Interfaces) can be a major endeavor for novices. To help, we have built a critic to advise the use of an API based on the formal semantics of the API. Specifically, the critic offers advice when the symbolic state of the API client code triggers any API usage rules. To assess to what extent our critic can help solve practical API usage problems and what kinds of API usage rules can be formulated, we manually analyzed 150 discussion threads from the Java Swing forum. We categorize the discussion threads according to how they can be helped by the critic. We find that API problems of the same nature appear repeatedly in the forum, and that API problems of the same nature can be addressed by implementing a new API usage rule for the critic. We characterize the set of discovered API usage rules as a whole. Unlike past empirical studies that focus on answering why frameworks and APIs are hard to learn, ours is the first designed to produce systematic data that have been directly used to build an API support tool. © 2012 IEEE."
"Uddin G., Dagenais B., Robillard M.P." $ "Temporal analysis of API usage concepts" $ "Software reuse through Application Programming Interfaces (APIs) is an integral part of software development. The functionality offered by an API is not always accessed uniformly throughout the lifetime of a client program. We propose Temporal API Usage Pattern Mining to detect API usage patterns in terms of their time of introduction into client programs. We detect concepts as distinct groups of API functionality from the change history of a client program. We locate those concepts in the client change history and detect temporal usage patterns, where a pattern contains a set of concepts that were added into the client program in a specific temporal order. We investigated the properties of temporal API usage patterns through a multiple-case study of three APIs and their use in up to 19 client software projects. Our technique was able to detect a number of valuable patterns in two out of three of the APIs investigated. Further investigation showed some patterns to be relatively consistent between clients, produced by multiple developers, and not trivially derivable from program structure or API documentation. © 2012 IEEE."
"Nguyen A.T., Nguyen T.T., Nguyen H.A., Tamrawi A., Nguyen H.V., Al-Kofahi J., Nguyen T.N." $ "Graph-based pattern-oriented, context-sensitive source code completion" $ "Code completion helps improve developers' programming productivity. However, the current support for code completion is limited to context-free code templates or a single method call of the variable on focus. Using software libraries for development, developers often repeat API usages for certain tasks. Thus, a code completion tool could make use of API usage patterns. In this paper, we introduce GraPacc, a graph-based, pattern-oriented, context-sensitive code completion approach that is based on a database of such patterns. GraPacc represents and manages the API usage patterns of multiple variables, methods, and control structures via graph-based models. It extracts the context-sensitive features from the code under editing, e.g. the API elements on focus and their relations to other code elements. Those features are used to search and rank the patterns that are most fitted with the current code. When a pattern is selected, the current code will be completed via a novel graph-based code completion algorithm. Empirical evaluation on several real-world systems shows that GraPacc has a high level of accuracy in code completion. © 2012 IEEE."
"Pradel M., Jaspan C., Aldrich J., Gross T.R." $ "Statically checking API protocol conformance with mined multi-object specifications" $ "Programmers using an API often must follow protocols that specify when it is legal to call particular methods. Several techniques have been proposed to find violations of such protocols based on mined specifications. However, existing techniques either focus on single-object protocols or on particular kinds of bugs, such as missing method calls. There is no practical technique to find multi-object protocol bugs without a priori known specifications. In this paper, we combine a dynamic analysis that infers multi-object protocols and a static checker of API usage constraints into a fully automatic protocol conformance checker. The combined system statically detects illegal uses of an API without human-written specifications. Our approach finds 41 bugs and code smells in mature, real-world Java programs with a true positive rate of 51%. Furthermore, we show that the analysis reveals bugs not found by state of the art approaches. © 2012 IEEE."
"Buse R.P.L., Weimer W." $ "Synthesizing API usage examples" $ "Key program interfaces are sometimes documented with usage examples: concrete code snippets that characterize common use cases for a particular data type. While such documentation is known to be of great utility, it is burdensome to create and can be incomplete, out of date, or not representative of actual practice. We present an automatic technique for mining and synthesizing succinct and representative human-readable documentation of program interfaces. Our algorithm is based on a combination of path sensitive dataflow analysis, clustering, and pattern abstraction. It produces output in the form of well-typed program snippets which document initialization, method calls, assignments, looping constructs, and exception handling. In a human study involving over 150 participants, 82% of our generated examples were found to be at least as good at human-written instances and 94% were strictly preferred to state of the art code search. © 2012 IEEE."
"Wu Y., Shao P." $ "Middleware-based distributed data acquisition and control in smart home networks" $ "For each of the networking techniques widely adopted in the field of home appliance control has its strength and weakness, it is more desirable to use multiple network technologies at the same time. Multi-platform smart home system would be an objective existence. In general point to point method, with the increasing of underlying hardware units and upper applications, the complexity of the central control unit will increase linearly. By using a universal home control middleware adapter, we decouple the application layer from the hardware layer, and make it possible to enable distributed data acquisition and control in a multi-platform smart home system. Many validated methods efficient to implement distributed data acquisition and control are discussed under this architecture, like using a timer or special thread with the unified API of the middleware adapter, redefinition callback or delegation functions for one type of the application interface, or using middleware integrated database to directly save the collected data. For each of these discussed methods, higher quality and usability both of devices and user interfaces, higher performance, lower production costs and loose-coupled hardware networks of different technologies are concerned. © 2012 Springer-Verlag GmbH."
"Tan S.H., Marinov D., Tan L., Leavens G.T." $ "@tComment: Testing javadoc comments to detect comment-code inconsistencies" $ "Code comments are important artifacts in software. Javadoc comments are widely used in Java for API specifications. API developers write Javadoc comments, and API users read these comments to understand the API, e.g., reading a Javadoc comment for a method instead of reading the method body. An inconsistency between the Javadoc comment and body for a method indicates either a fault in the body or, effectively, a fault in the comment that can mislead the method callers to introduce faults in their code. We present a novel approach, called @TCOMMENT, for testing Javadoc comments, specifically method properties about null values and related exceptions. Our approach consists of two components. The first component takes as input source files for a Java project and automatically analyzes the English text in Javadoc comments to infer a set of likely properties for a method in the files. The second component generates random tests for these methods, checks the inferred properties, and reports inconsistencies. We evaluated @TCOMMENT on seven open-source projects and found 29 inconsistencies between Javadoc comments and method bodies. We reported 16 of these inconsistencies, and 5 have already been confirmed and fixed by the developers. © 2012 IEEE."
"Lo D., Ramalingam G., Ranganath V.-P., Vaswani K." $ "Mining quantified temporal rules: Formalism, algorithms, and evaluation" $ "Libraries usually impose constraints on how clients should use them. Often these constraints are not well-documented. In this paper, we address the problem of recovering such constraints automatically, a problem referred to as specification mining. Given some client programs that use a given library, we identify constraints on the library usage that are (almost) satisfied by the given set of clients. The class of rules we target for mining combines simple binary temporal operators with state predicates (composed of equality constraints) and quantification. This is a simple yet expressive subclass of temporal properties (LTL formulae) that allows us to capture many common API usage rules. We focus on recovering rules from execution traces and apply classical data mining concepts to be robust against bugs (API usage rule violations) in clients. We present new algorithms for mining rules from execution traces. We show how a propositional rule mining algorithm can be generalized to treat quantification and state predicates in a unified way. Our approach enables the miner to be complete (i.e. , mine all rules within the targeted class that are satisfied by the given traces) while avoiding an exponential blowup. We have implemented these algorithms and used them to mine API usage rules for several Windows APIs. Our experiments show the efficiency and effectiveness of our approach. © 2010 Elsevier B.V. All rights reserved."
"Maia R., Cerqueira R., De Souza C.S., Guisasola-Gorham T." $ "A qualitative human-centric evaluation of flexibility in middleware implementations" $ "Today middleware is much more powerful, more reliable and faster than it used to be. Nevertheless, for the application developer, the complexity of using middleware platforms has increased accordingly. The volume and variety of application contexts that current middleware technologies have to support require that developers be able to anticipate the widest possible range of execution environments, desired and undesired effects of different programming strategies, handling procedures for runtime errors, and so on. This paper shows how a generic framework designed to evaluate the usability of notations (the Cognitive Dimensions of Notations Framework, or CDN) has been instantiated and used to analyze the cognitive challenges involved in adapting middleware platforms. This human-centric perspective allowed us to achieve novel results compared to existing middleware evaluation research, typically centered around system performance metrics. The focus of our study is on the process of adapting middleware implementations, rather than in the end product of this activity. Our main contributions are twofold. First, we describe a qualitative CDN-based method to analyze the cognitive effort made by programmers while adapting middleware implementations. And second, we show how two platforms designed for flexibility have been compared, suggesting that certain programming language design features might be particularly helpful for developers. © 2011 Springer Science+Business Media, LLC."
"Mühlberg J.T., Lüttgen G." $ "Verifying compiled file system code" $ "This article presents a case study on retrospective verification of the Linux Virtual File System (VFS), which is aimed at checking violations of API usage rules and memory properties. Since VFS maintains dynamic data structures and is written in a mixture of C and inlined assembly, modern software model checkers cannot be applied. Our case study centres around our novel automated software verification tool, the SOCA Verifier, which symbolically executes and analyses compiled code.We describe how this verifier deals with complex features such as memory access, pointer aliasing and computed jumps in the VFS implementation, while reducing manual modelling to a minimum. Our results show that the SOCA Verifier is capable of analysing the complex Linux VFS implementation reliably and efficiently, thereby going beyond traditional testing tools and into niches that current software model checkers do not reach. This testifies to the SOCA Verifier's suitability as an effective and efficient bug-finding tool during the development of operating system components. © 2011 BCS."
"Alcock S., Lorier P., Nelson R." $ "Libtrace: A packet capture and analysis library" $ "This paper introduces libtrace, an open-source software li- brary for reading and writing network packet traces. Lib- trace offers performance and usability enhancements com- pared to other libraries that are currently used. We de- scribe the main features of libtrace and demonstrate how the libtrace programming API enables users to easily develop portable trace analysis tools without needing to consider the details of the capture format, file compression or inter- mediate protocol headers. We compare the performance of libtrace against other trace processing libraries to show that libtrace offers the best compromise between development ef- fort and program run time. As a result, we conclude that libtrace is a valuable contribution to the passive measure- ment community that will aid the development of better and more reliable trace analysis and network monitoring tools."
"Kim I.-H., Jeong G.-M., Park E.-C., Chung K.-D." $ "A WPAN platform design in mobile phone considering application development and usability" $ "In this paper, we propose a WPAN (Wireless Personal Area Network) platform for converged network services integrating a cellular network and a WPAN. We mainly focus on an easy-to-develop and easy-to-use WPAN platform for wireless communication services using both networks. The proposed WPAN platform consists of a WPAN handset platform, a WPAN connection scheme, and a WPAN server platform. The WPAN handset platform provides abstract WPAN API (Application Programming Interface) set and application management module. Using the WPAN connection scheme, the user can enjoy converged network services in a convenient way. The WPAN server platform manages the overall services and digital devices that are connected to the handset. Compared to the existing WPAN related platform, we consider the need for the integrated service components allowing for the development of WPAN applications in the handset and their convenience for the user. Also, illustrative services and devices are implemented using the proposed method, which show the applicability of the proposed WPAN platform. © 2006-2012 by CCC Publications."
"Akbar R.J., Omori T., Maruyama K." $ "Detecting API usage patterns from software repositories using method categorization" $ "Developers often have difficulties using APIs. To aid developers in efficiently using APIs, API usage patterns can be extracted from source code stored in software repositories. Previous approaches have mined repositories to extract API usage patterns by simply applying a data mining technique to the collection of method invocations of API objects. However, respective roles of invoked methods within API objects are not considered in these approaches. This paper proposes an improved approach that extracts API usage patterns at a higher-level abstraction rather than mining the actual method invocations. Our approach embraces a multilevel sequential mining technique and uses categorization of method invocations to define their concept hierarchy. In the categorization, the method invocations are categorized based on their roles. The extracted API usage patterns represent recurring usages of API objects. Therefore, they are useful to recommend typical usages of APIs. The experimental results show that our approach is practical to discover patterns that reveal characteristics of usages. © 2012 The authors and IOS Press. All rights reserved."
"Saulnier A., Courounet P., Viaud M.L." $ "How to increase the role of users in evaluating the quality of use of a system [Comment accroître le rôle des utilisateurs dans l'évaluation de la qualité d'utilisation d'un système]" $ "This paper presents criteria and methods which were used to evaluate the usability of several professional services within the European project ASSETS. A unified approach of user-centered method is proposed to test services at various stages of development according to their GUI or API access. The notion of perceived usability and utility are introduced to increase the user involvement in the evaluation process. In our professional context, we tried to highlight the relevance of the perceived quality of the results. © 2012 ACM 978-1-4503-1846-4/12/10 ...$15.00."
"Kosec G., Trobec R." $ "A parallel meshless numerical approach for the solution of transport phenomena" $ "The application of the local meshless numerical method (LRBFCM) for solving a system of coupled partial differential equations (PDE) is explored. The numerical approach is tested on the natural convection based fluid flow problems. The fluid flow part of the solution procedure is coupled locally despite its global nature. Such an approach makes the computations convenient for an implementation on parallel computers. In this paper, the OpenMP based parallelization of the proposed numerical approach is demonstrated. On two cores, a superlinear speedup of 2.5 is confirmed by the performance analysis. The parallelization performance is explored for the classical de Vahl Davis natural convection case. The usability of the meshless numerical framework is demonstrated on highly non-linear and coupled case of solidification of binary alloy, where energy and solute transport govern double natural convection in a domain filled with porous media and free fluid with moving interphases. © Civil-Comp Press, 2012."
"Alnusair A., Zhao T." $ "Retrieving reusable software components using enhanced representation of domain knowledge" $ "This paper describes an ontology-based approach for identifying and retrieving relevant software components in large reuse libraries. Since it is usually difficult to precisely identify exact matches without considering domain knowledge, we exploit the use of domain-specific ontologies to enrich a knowledge base initially populated with multi-faceted ontological descriptions of API components. In addition to pure semantic-based search, this enriched knowledge base supports signature-based search, keyword search, and blended search. However, our experiments show evidence that only semantic search that is backed by reasoning services enables intelligent matchmaking and yields improved precision. Based on a usability case study, we further argue that semantic search is indeed usable and practical. © 2012 Springer-Verlag/Wien."
"Steiner T., Verborgh R., Vallés J.G., Van De Walle R." $ "Adding meaning to facebook microposts via a mash-up API and tracking its data provenance" $ "The social networking website Facebook offers to its users a feature called ""status updates"" (or just ""status""), which allows users to create microposts directed to all their contacts, or a subset thereof. Readers can respond to microposts, or in addition to that also click a ""Like"" button to show their appreciation for a certain micropost. Adding semantic meaning in the sense of unambiguous intended ideas to such microposts can, for example, be achieved via Natural Language Processing (NLP). Therefore, we have implemented a RESTful mash-up NLP API, which is based on a combination of several third party NLP APIs in order to retrieve more accurate results in the sense of emergence. In consequence, our API uses third party APIs opaquely in the background in order to deliver its output. In this paper, we describe how one can keep track of provenance, and credit back the contributions of each single API to the combined result of all APIs. In addition to that, we show how the existence of provenance metadata can help understand the way a combined result is formed, and optimize the result combination process. Therefore, we use the HTTP Vocabulary in RDF and the Provenance Vocabulary. The main contribution of our work is a description of how provenance metadata can be automatically added to the output of mash-up APIs like the one presented here. © 2011 IEEE."
"Brunet J., Serey D., Figueiredo J." $ "Structural conformance checking with design tests: An evaluation of usability and calability" $ "Verifying whether a software meets its functional requirements plays an important role in software development. However, this activity is necessary, but not sufficient to assure software quality. It is also important to check whether the code meets its design specification. Although there exists substantial tool support to assure that a software does what it is supposed to do, verifying whether it conforms to its design remains as an almost completely manual activity. In a previous work, we proposed design tests - test-like programs that automatically check implementations against design rules. Design test is an application of the concept of test to design conformance checking. To support design tests for Java projects, we developed DesignWizard, an API that allows developers to write and execute design tests using the popular JUnit testing framework. In this work, we present a study on the usability and scalability of DesignWizard to support structural conformance checking through design tests. We conducted a qualitative usability evaluation of DesignWizard using the Think Aloud Protocol for APIs. In the experiment, we challenged eleven developers to compose design tests for an open-source software project. We observed that the API meets most developers' expectations and that they had no difficulties to code design rules as design tests. To assess its scalability, we evaluated DesignWizard's use of CPU time and memory consumption. The study indicates that both are linear functions of the size of software under verification. © 2011 IEEE."
"Scheller T., Kühn E." $ "Measurable concepts for the usability of software components" $ "While usability has proven to be an important software quality attribute, its application to APIs is still rather uncommon. Available methods for measuring software usability show significant disadvantages when applied to APIs, like the need for test users and experienced evaluators. This makes it difficult to evaluate the usability of software components, as well as to compare different software components. An API usability measurement method is needed that is both machine-computable and objective. This paper takes a first step in the direction of such a measure by identifying measurable concepts for the usability of software components, and validating these concepts against existing studies and guidelines for usability and API design. © 2011 IEEE."
"Mar L.W., Wu Y.-C., Jiau H.C." $ "Recommending proper API code examples for documentation purpose" $ "Code examples are important resources for expressing correct application programming interface (API) usages. However, many framework and library APIs fail in offering sufficient code examples in corresponding API documentations. This is because constructing proper code examples for documentation purpose takes significant developers' efforts. To reduce such effort, this work proposes a methodology, PropER-Doc, that recommends proper code examples for documentation purpose. PropER-Doc accepts queries from API developers and utilizes code search engines (CSEs) to collect corresponding code example candidates. The structural and conceptual links between API elements are captured from the API implementation and available API documents to guide candidate recommendation. During recommendation, PropER-Doc groups collected candidates based on involved API types for distinguishing different API usages. To assist API developers in selecting proper candidates, a diagrammatic presentation and three code example appropriateness metrics are also developed in PropER-Doc. Two case studies on Eclipse JDT framework are conducted to confirm the effectiveness of PropER-Doc. © 2011 IEEE."
"Prajapati H.B., Vij S.K." $ "Analytical study of parallel and distributed image processing" $ "The available literature on parallel and distributed image processing is scattered and not organized for use to beginners. Thus, there is a need of concise understanding of parallel and distributed image processing area. In this paper, we present analysis of parallel and distributed image processing with comprehensive details, so that it becomes very useful to beginners and to those who are new to parallel or distributed image processing field. We present the outcome of our study of parallel and distributed image processing with emphasis on mechanisms, tools/technology/API used, application domains, and ongoing research work. We examine the research issues in parallel and distributed image processing. We also identify some future research directions for distributed image processing. This study provides concise understanding of the parallel and distributed image processing area to the beginners. © 2011 IEEE."
"Lu H.K." $ "Accessing cloud through API in a more secure and usable way" $ "A common method for accessing and managing cloud computing resources is through an Application Programming Interface (API). Each API request from an application must include a client authentication to the cloud service, which proves the possession of a secret key. Securing such keys is critical to the confidentiality, integrity, and availability of the data and services hosted in the cloud. Currently users manually handle these keys, a process that is neither secure nor user-friendly. Where to store the keys and how to access them are still security challenges especially for those applications that reside in the cloud themselves. Furthermore, keys are in clear text at least in a computer's memory. Attackers can find ways to recover them. This paper presents a solution to these problems by using portable security devices. The device securely exchanges keys with the cloud serve, securely stores the keys, and performs cryptographic computations using these keys for the client authentication. The user must have the device and authenticate to it in order use it. The solution enables a two-factor hierarchical security protection of the cloud computing resources. It not only enhances the security but also improves the usability. Copyright © 2011 SciTePress."
"Huang P.-Y., Jan J.-F." $ "Comparison of Google maps API and openlayers for WebGIS development" $ "Many free, open source, web based, Geographic Information Systems (GIS) are shown to be an efficient and inexpensive way to disseminate feature rich and theme orientated map presentations. With web 2.0 technologies to creatively craft web user interfaces coupled with a strong versatile spatial processing backend, the end result of these freeware products are just as compelling to use in predefined use cases as any marketed brands. Putting aside the spatial analytical functionality, the tools to render maps and information ultimately determines the success of any GIS products. There are several free rendering software libraries for developers of WebGIS systems to choose from and the most popularly implemented are Google Maps API and OpenLayers. Both are JavaScript technologies that work seamlessly within the web browsers and can display layers of information at the users' discretion. But which technology should one use? For this report, we will compare and discuss the limitations and usability of these two technologies, and try to identify their usable domains."
"Kocur L.A., Glotzbach R.J., Schulze D.G., Miller C.C." $ "Work in progress - Development and integration of an online soil mapping Web application" $ "Mapping technologies are abundant on the Web as well as through boxed software, however, the ability to overlay ones own maps onto the surface in order to provide enriched detail is not found in most typical software. ""Integrating Spatial Educational Experiences (Isee) into Crop, Soil, and Environmental Science Curricula"" is a USDA-funded project focused on making soil data in the form of maps more accessible and easy-to-use for undergraduate students. The current solution integrates the Google Earth API, GeoWebCache, PHP, MySQL, and JavaScript in the form of a website. Although the differences in GIS software usability are generally unknown, the Isee prototype may serve as a viable model of an approach applicable at other universities. The purpose of the research is to collect quantitative data to determine if differences in software with various interfaces influence a student's satisfaction and performance. The ""Isee"" website will be among the compared software, in which students will attempt to answer questions based on the information they can find with the software. The researcher will record performance data quantitatively throughout the session. Afterwards, students will report preferences and perceptions in a survey. © 2011 IEEE."
"Hosogai E., Mukai T., Jung S., Kowase Y., Bossard A., Xu Y., Ishikawa M., Kaneko K." $ "A multilingual chat system with image presentation for detecting mistranslation" $ "We have designed and developed a multilingual chat system, MCHI (Multilingual Chat with Hint Images), which is based on machine translation and equipped with a presentation function of images related to the contents of the messages by utterers so that listeners are able to notice the mistranslation. MCHI accepts English, French, Chinese, Japanese, and Korean languages. It uses Google API to retrieve related images from the image posting site Flickr. As a result of evaluation experiment, we have observed that participants detected the mismatch of a translated message with its related image. According to the answers of participants for a question in a questionnaire, it turned out that the usability of the MCHI system is good enough though the related images are not satisfactory."
"Park P., Jung J., Huh B." $ "Development of CAN-1394 automotive gateway system using designed modular software stack" $ "Recently, software diversity and reuse issues in automotive embedded software development have rapidly increased due to newly released technologies and its standardization. The modular design of software is essential to enhance software re-usability and portability. In this paper, we present a CAN-1394 Automotive gateway system implementation using modular designs of software stacks. We first study and summarize key specifications and their relationships in 1394 Automotive software stack development. Then, we present our modular implementation of software and hardware, which includes 1394 Automotive core stack components such as a communication driver and API library. In addition, we highlight essential functions of the implemented gateway for the 1394 Automotive backbone network and the CAN based in-vehicle network in detail. © 2011 IEEE."
"Budnik L., Krawczyk H." $ "Dynamic analysis of enterprise business scenarios" $ "DIES system for designing and improving enterprise business scenarios is proposed. Such scenarios are executed and monitored in an SOA environment. Many metrics are gathered, and strong/weak aspects are pointed out. DIES allows the improvement of a scenario's performance, quality, and usability. Due to technology-agnostic API the system supports any extensible business scenario technology, and it utilizes WS-BPEL standard and Apache ODE as its execution engine. A representative case study is considered, and evaluation and modification of the scenario is discussed. © 2011 IEEE."
"Khatoon S., Mahmood A., Li G." $ "An evaluation of source code mining techniques" $ "This paper reviews the tools and techniques which rely only on data mining methods to determine patterns from source code such as programming rules, copy paste code segments, and API usage. The work provides comparison and evaluation of the current state-of-the-art in source code mining techniques. Furthermore it identifies the essential strengths and weaknesses of individual tools and techniques to make an evaluation indicative of future potential. The pervious related works only focus on one specific pattern being mined such as special kind of bug detection. Thus, there is a need of multiple tools to test and find potential information from software which increase cost and time of development. Hence there is a strong need of tool which helps in developing quality software by automatically detecting different kind of bugs in one pass and also provides code reusability for the developers. © 2011 IEEE."
"Kawagoi K., Tominaga H." $ "Library management system in a laboratory scale cooperated with book seller sites" $ "A laboratory in an engineering college possesses many books about technology and science. While members in the laboratory mainly use the books, outside students sometimes borrow them. Members must manage the collection by oneself. We propose a library management system for a laboratory scale. The system cooperates with some book seller sites. It reads an ISBN of a book by a barcode reader to acquire the information by Amazon Web service. It adopts an IC chip reader for user check with a student card. The system offers purchase helping functions. It gathers book requests of members and tells a teacher to buy by a cart method of API. It applies adequate lending rules according to access permission. We also consider learning support functions, especially for books about information engineering. A user who have read a book submits his comment for understanding. He may upload his program as sample of practice. The following users can access restrictively for the educational purpose. We developed a prototype of the system, which has some database and basic functions. We carried out an experiment of user operation for usability evaluation to get some ideas for improvement. © 2011 IEEE."
"Pankratius V., Knittel F., Masing L., Walser M." $ "OpenMPspy: Leveraging quality assurance for parallel software" $ "OpenMP is widely used in practice to create parallel software, however, software quality assurance tool support is still immature. OpenMPspy introduces a new approach, with a short-term and a long-term perspective, to aid software engineers write better parallel programs in OpenMP. On the one hand, OpenMPspy acts like an online-debugger that statically detects problems with incorrect construct usage and which reports problems while programmers are typing code in Eclipse. We detect simple slips as well as more complex anti-patterns that can lead to correctness problems and performance problems. In addition, OpenMPspy can aggregate statistics about OpenMP language usage and bug patterns from many projects. Insights generated from such data help OpenMP language designers improve the usability of constructs and reduce error potential, thus enhancing parallel software quality in the long run. Using OpenMPspy, this paper presents one of the first detailed empirical studies of over 40 programs with more than 4 million lines of code, which shows how OpenMP constructs are actually used in practice. Our results reveal that constructs believed to be frequently used are actually rarely used. Our insights give OpenMP language and compiler designers a clearer picture on where to focus the efforts for future improvements. © 2011 Springer-Verlag."
"Zhang H., Wu G., Chow K., Yu Z., Xing X." $ "Detecting resource leaks through dynamical mining of resource usage patterns" $ "Resource management is crucial to software productions. Resources must be carefully acquired and released, or a resource leak might occur. For open source projects, resource leaks can be easily introduced during code check-in, and it is laborious to review, identify, report, and fix such leaks. Recently, there has been a growing interest in data mining API usage patterns to discover potential bugs such as resource leaks. However, the usage patterns mined are specific to a certain library, which cannot be applied to detect bugs in other libraries. In this paper, we present an idea called MODE, Mine Once, Detect Everywhere, to address the universality of such patterns, and use them to detect potential resource leaks automatically before code check-in. We propose an efficient algorithm to record the most valuable API calls that are related to resource usage during program execution, and mine resource usage patterns from the traces with a sequence miner. To verify the effectiveness of the patterns, experiments are given to use them to detect real resource leaks in large open source projects. © 2011 IEEE."
"Hofmeyr S., Colmenares J.A., Iancu C., Kubiatowicz J." $ "Juggle: Proactive load balancing on multicore computers" $ "We investigate proactive dynamic load balancing on multicore systems, in which threads are continually migrated to reduce the impact of processor/thread mismatches to enhance the flexibility of the SPMD-style programming model, and enable SPMD applications to run efficiently in multiprogrammed environments. We present Juggle, a practical decentralized, user-space implementation of a proactive load balancer that emphasizes portability and usability. Juggle shows performance improvements of up to 80% over static balancing for UPC, OpenMP, and pthreads benchmarks. We analyze the impact of Juggle on parallel applications and derive lower bounds and approximations for thread completion times. We show that results from Juggle closely match theoretical predictions across a variety of architectures, including NUMA and hyper-threaded systems. We also show that Juggle is effective in multiprogrammed environments with unpredictable interference from unrelated external applications. © 2011 ACM."
"Dross C., Filliâtre J.-C., Moy Y." $ "Correct code containing containers" $ "For critical software development, containers such as lists, vectors, sets or maps are an attractive alternative to ad-hoc data structures based on pointers. As standards like DO-178C put formal verification and testing on an equal footing, it is important to give users the ability to apply both to the verification of code using containers. In this paper, we present a definition of containers whose aim is to facilitate their use in certified software, using modern proof technology and novel specification languages. Correct usage of containers and user-provided correctness properties can be checked either by execution during testing or by formal proof with an automatic prover. We present a formal semantics for containers and an axiomatization of this semantics targeted at automatic provers. We have proved in Coq that the formal semantics is consistent and that the axiomatization thereof is correct. © 2011 Springer-Verlag Berlin Heidelberg."
"Gerken J., Jetter H.-C., Zöllner M., Mader M., Reiterer H." $ "The concept maps method as a tool to evaluate the usability of APIs" $ "Application programming interfaces (APIs) are the interfaces to existing code structures, such as widgets, frameworks, or toolkits. Therefore, they very much do have an impact on the quality of the resulting system. So, ensuring that developers can make the most out of them is an important challenge. However standard usability evaluation methods as known from HCI have limitations in grasping the interaction between developer and API as most IDEs (essentially the GUI) capture only part of it. In this paper we present the Concept Map method to study the usability of an API over time. This allows us to elicit the mental model of a programmer when using an API and thereby identify usability issues and learning barriers and their development over time. Copyright 2011 ACM."
"Hsu S.-K., Lin S.-J." $ "MACs: Mining API code snippets for code reuse" $ "We apply data mining to source code projects to guide developers through related API usage patterns: ""Developers who code the program statement also code."" Given a set of source code files, the mined association rules suggest related code snippets to form the components of object-oriented programs. The mined sequential rules predict likely additional API sequences within a method. After an initial program statement is given, our MACs prototype can correctly predict useful related API code snippets. In our evaluation, we present two studies investigating the usefulness of MACs in software development tasks. One study evaluated the utility of MACs's association pattern recommendations. The other evaluated usefulness of sequential pattern recommendations, and both drew from a sample of eight source code projects from SourceForge.net. Our experimental evaluation shows that MACs has significant potential to assist developers, especially API newcomers, and provides an alternative method for code reuse. © 2010 Elsevier Ltd. All rights reserved."
"Leal J.P., Dias H." $ "A framework to develop meta web interfaces" $ "Web interfaces are used nowadays for virtually every kind of computer application. The proliferation of web interfaces created the need to collect and analyze data on how users interact with them. Many web applications used for this purpose rely on what can be called a meta web interface. Meta web interfaces are used for different purposes but they share a set of common features: a web interface based on the subject interface with a second layer interface for collecting data, a central repository for persisting the collected data, and an API for retrieving aggregated data on user interaction. This paper describes Z-Web - a framework for developing meta web interfaces that provides these three features. To create a second layer in the meta web interface a Z-Web server is placed as a proxy between the web client and the subject web server and injects modifications while forwarding HTTP requests. These modifications are typically JavaScript libraries that collect and store data related to user interaction. The framework caches the pages it proxies and provides persistent storage for the collected data. An application interface (API) makes this data available to client application supported by Z-Web. This paper presents an overview of Z-Web, with the general architecture of a web application based on this framework, and describes the design and implementation issues of its main components. Two systems developed with Z-Web are also presented to evaluate the applicability of the framework and its overhead when compared with similar systems."
"Iwai G., Kawai Y., Sasaki T., Watase Y." $ "SAGA-based user environment for distributed computing resources: A universal grid solution over multi-middleware infrastructures" $ "This paper demonstrates practical applications based on SAGA -A Simple API for Grid Applications- for distributed computing resources over multi-middleware infrastructures. SAGA provides a high-level programming interface that bridges between applications and Grids as well as local schedulers such as PBS. At the Computing Research Center of KEK, we are playing a role to support not only on-site users, but also domestic university groups in the High Energy and Nuclear Physics (HENP) community. In order to provide a more effective and practical client environment to users, we have developed Grid-adaptive applications based on SAGA as a part of activity in the REsources liNKage for E-scIence (RENKEI) for the general purpose e-Infrastructure using National Research Grid Initiative (NAREGI) middleware. We present the technical details for the user environment demonstrator and discuss the usability by real HENP applications."
"Pradel M., Bichsel P., Gross T.R." $ "A framework for the evaluation of specification miners based on finite state machines" $ "Software maintenance tasks, such as testing and program understanding, can benefit from formal specifications that describe how a program should use an API. Recently, there has been increasing interest in specification miners that automatically extract finite state specifications of method ordering constraints from existing software. However, comparing different mining approaches is difficult, because no common ground to evaluate the effectiveness of specification miners has been established yet. We present a framework for evaluating to which extent specification miners find valid finite state descriptions of API usage constraints. The framework helps in creating reference specifications and includes metrics to compare mined specifications to the reference specifications. The metrics are tailored for evaluating specification miners and account for imprecision and incompleteness in mined specifications. We use the framework to compare the effectiveness of three mining approaches and to show their respective benefits. © 2010 IEEE."
"Kawai Y., Iwai G., Sasaki T., Watase Y." $ "SAGA-based file access application over multi-filesystem middleware" $ "This paper describes practical file access applications based on SAGA -A Simple API for Grid Applications- for distributed storage resources over multi-file-system middleware. SAGA provides a high-level programming interface to bridge between network file-system middleware as well as accessing a local file-system. The Computing Research Center of KEK uses many data files from physics experiments. For example, large numbers of bubble chamber image files are shared between KEK and King's College in UK. Our research problem involves displaying a single bubble chamber image file that is divided and stored in the different kinds of file-systems. We use the two types of file-systems that are iRODS -The Integrated Rule-Oriented Data System- and Gfarm -Grid Data Farm-. To access the middleware, we are developing the SAGA adaptors for the iRODS and Gfarm file-systems. We present the technical details for the user environments and show the usability with real bubble chamber image files. Copyright 2010 ACM."
"Zeller A." $ "Learning from 6,000 projects: Mining models in the large" $ "Models-abstract and simple descriptions of some artifact-are the backbone of all software engineering activities While writing models is hard, existing code can serve as a source for abstract descriptions of how software behaves. To infer correct usage, code analysis needs usage examples, though, the more, the better. We have built a lightweight parser that efficiently extracts API usage models from source code-models that can then be used to detect anomalies. Applied on the 200 million lines of code of the Gentoo Linux distribution, we would extract more than 15 million API constraints, encoding and abstracting the ""wisdom of Linux code"" © 2010 IEEE."
"Lozano A., Kellens A., Mens K., Arevalo G." $ "Mining source code for structural regularities" $ "During software development, design rules and contracts in the source code are often encoded through regularities, such as API usage protocols, coding idioms and naming conventions. The structural regularities that govern a program can aid in comprehension and maintenance of the application, but are often implicit or undocumented. Tool support for extracting these regularities from the source code can provide developers useful insights. But building such tool support is not trivial, in particular, because the informal nature of regularities results in frequent deviations and exceptions to these regularities. We propose an automated approach, based on association rule mining, to discover the structural regularities that govern the source code of a software system. We chose this technique because of its resilience to exceptions. In general, tool support for mining regularities tends to discover a huge amount of rules, making interpretation of the results hard and time-consuming. To ease the interpretation, we reduce the results to a minimal canonical form, and group them to obtain a more rational description of the discovered regularities. As an initial feasibility study of our approach, we applied it on two open-source systems, namely IntensiVE (Smalltalk) and FreeCol (Java). © 2010 IEEE."
"Jung G., Lee B." $ "Analysis on social network adoption according to the change of network topology: The impact of ""Open API"" to adoption of facebook" $ "A social network service is one of the most prospering social media in the Web 2.0 era. In SNSs, a massive number of people make online friends and share their interests. In May 2007, Facebook made an announcement of ""Open API"" policy, which allows a third-party to create applications in Facebook. After ""Open API,"" users of Facebook can utilize various interactions other than just messaging. This led to radical increase in user growth of Facebook and threatened Myspace, which was the top SNS at that time. This innovative move gathered an interest of how ""Open API"" affects interactions in social networks. The main objective of our research is to analyze the relationship between the growth of social network adoption and network topology. For this issue, our study conducts both analytical and empirical models. First of all, we adopt the concept of Metcalfe's and Reed's law to model the growth pattern of social network under duopoly competition of two SNSs. Then we apply the growth functions to the empirical analysis. We collect web traffic data of Facebook and Myspace from Alexa and test the structural change after the adoption of ""Open API"" policy. The result of the analytical model shows that social network adoption follows a quadratic growth under Metcalfe's law and an exponential growth under Reed's law. The result also shows the conditions for a SNS to take all new adopters in the market. If the SNS follows Reed's law, it can absorb all new adopters even if that particular SNS is a newcomer in the market. The empirical result confirms that there exists a significant difference in the growth pattern between, before and after ""Open API."" This implies that ""Open API"" transformed Facebook one-to-one communication network into a group forming network. Eventually, this transition increases potential connectivity in social network and leads to exponential growth of social network adoption. Copyright 2012 ACM."
"Suikkola V." $ "Open exposure of telco capabilities: Identification of critical success factors for location-based services in open telco" $ "As of late, open exposure of telco capabilities has been a target of interest - much due to the success of open application programming interfaces on the Internet services market. Due to the innate ability of the mobile networks to know its users' locations, the location-based services market is an especially interesting area from the operator point of view. Operators could possibly create success in this market by implementing the Open Telco framework, however, key service areas and critical success factors have not been identified yet. This paper reviews the existing literature on Open Telco, location-based services, and network-based positioning technologies and identifies the key location-based service application areas for network-based positioning. Based on this analysis, we present a list of critical success factors for location-based services in Open Telco. The findings indicate that the key application areas in network-positioning based location-based services are social networking, information, and productivity services. The critical success factors were found to be standard interfaces, operator cooperation, and the handling of privacy, security, as well as usability issues with location-based services. © 2010 IEEE."
"[No author name available]" $ "2010 6th Central and Eastern European Software Engineering Conference, CEE-SECR 2010" $ "The proceedings contain 36 papers. The topics discussed include: adaptation of SCRUM methodology to company business processes, automating programming via concept mining, probabilistic reasoning over semantic knowledge base of SE domain, clone detection: why, what and how?, comparison of two models of success prediction in software development projects, conceptual models of heterogeneous data representation, defect detection for multithreaded programs with semaphore-based synchronization, effective communications for small outsourcing software-engineering projects, expert system for software source code quality analysis, header-driven generation of sanity API tests for shared libraries, implementation by capture with executable UML, implementing usability methods into CMMI-compliant software development process, integrating quality, quality in use, actual usability and user experience, and interactive 3D scene modeling and visualization system."
"Carstoiu B., Carstoiu D." $ "Web4Desktop, a framework for improving the usability of web applications" $ "The cloud computing model leads to the increased penetration of the web applications in the office environment. Designed in many cases to replace traditional desktop software, web applications still lack many of the valuable features present on the desktop that increase usability and productivity. Due to the highly isolated design of the browser, it is currently impossible for web applications to communicate with desktop environment, which usually means sending messages or receiving event notifications. This is often required in order to let the person using the application know about the important events happening in the minimized browser window. By contrast traditional applications can take the control of the desktop at any time. The paper introduces the Web4Desktop framework, a browser/client based architecture designed to overcome these limitations by proving a secure infrastructure that allows web applications to communicate with any desktop software implementing the Web4Desktop API. The framework can be utilized to add desktop integration to existing web applications, a step that requires only minimal changes in the web application's code and greatly improve the user experience because these applications will start to behave more like desktop software. © 2010 Springer-Verlag."
"Beach A., Gartrell M., Han R." $ "q-Anon: Rethinking anonymity for social networks" $ "This paper proposes that social network data should be assumed public but treated private. Assuming this rather confusing requirement means that anonymity models such as k-anonymity cannot be applied to the most common form of private data release on the internet, social network APIs. An alternative anonymity model, q-Anon, is presented, which measures the probability of an attacker logically deducing previously unknown information from a social network API while assuming the data being protected may already be public information. Finally, the feasibility of such an approach is evaluated suggesting that a social network site such as Facebook could practically implement an anonymous API using q-Anon, providing its users with an anonymous option to the current application model. © 2010 IEEE."
"Andrews K., Lessacher M." $ "Liquid diagrams: Information visualisation gadgets" $ "Information visualisation techniques have sometimes been slow to diffuse into more widespread public use. Recent advances in cloud computing have opened up opportunities to bring information visualisation to the masses in ways previously not possible. Liquid diagrams are a suite of information visualisation gadgets written in Flex, which visualise live data contained in Google Docs spreadsheets through the Google Visualization API. Users can interactively configure the visualisation and any changes in the online spreadsheet data are reflected immediately in the display. In contrast to other solutions, liquid diagrams gadgets specifically support the printing and export of both vector (SVG) and raster (PNG) graphics versions of the visualisations, allowing users to construct and export high-quality diagrams for inclusion into other works. The suite of visualisation gadgets currently available includes: area charts, bar charts, heat maps (choropleths), line charts, pie charts, treemaps, and parallel coordinates plots. Star plots and voronoi treemaps are coming soon. © 2010 IEEE."
"Kim J., Lee S., Hwang S.-W., Kim S." $ "Towards an intelligent code search engine" $ "Software developers increasingly rely on information from the Web, such as documents or code examples on Applica tion Programming Interfaces (APIs), to facilitate their devel opment processes. However, API documents of ten do not in clude enough information for developers to fully understand the API usages, while searching for good code examples re quires non-trivial effort. To address this problem, we propose a novel code search engine, combining the strength of browsing documents and searching for code examples, by returning documents embed ded with high-quality code example summaries mined from the Web. Our evaluation results show that our approach pro vides code examples with high precision and boosts program mer productivity. Copyright © 2010, Association for the Advancement of Artificial Intelligence (www.aaai.org). All rights reserved."
"Nguyen H.A., Nguyen T.T., Wilson Jr. G., Nguyen A.T., Kim M., Nguyen T.N." $ "A graph-based approach to API usage adaptation" $ "Reusing existing library components is essential for reducing the cost of software development and maintenance. When library components evolve to accommodate new feature requests, to fix bugs, or to meet new standards, the clients of software libraries often need to make corresponding changes to correctly use the updated libraries. Existing API usage adaptation techniques support simple adaptation such as replacing the target of calls to a deprecated API, however, cannot handle complex adaptations such as creating a new object to be passed to a different API method, or adding an exception handling logic that surrounds the updated API method calls. This paper presents LibSync that guides developers in adapting API usage code by learning complex API usage adaptation patterns from other clients that already migrated to a new library version (and also from the API usages within the library's test code). LibSync uses several graph-based techniques (1) to identify changes to API declarations by comparing two library versions, (2) to extract associated API usage skeletons before and after library migration, and (3) to compare the extracted API usage skeletons to recover API usage adaptation patterns. Using the learned adaptation patterns, LibSync recommends the locations and edit operations for adapting API usages. The evaluation of LibSync on real-world software systems shows that it is highly correct and useful with a precision of 100% and a recall of 91%. Copyright © 2010 ACM."
"Gimblett A., Thimbleby H." $ "User interface model discovery: Towards a generic approach" $ "UI model discovery is a lightweight formal method in which a model of an interactive system is automatically discovered by exploring the system's state space, simulating the actions of a user, such models are then amenable to automatic analysis targetting structural usability concerns. This paper specifies UI model discovery in some detail, providing a formal, generic and language-neutral API and discovery algorithm. The technique has been implemented in prototype systems on several programming platforms, yielding valuable usability insights. The API described here supports further development of these ideas in a systematic manner. © 2010 ACM."
"[No author name available]" $ "2010 ICSE Workshop on Search-Driven Development: Users, Infrastructure, Tools and Evaluation, SUITE 2010" $ "The proceedings contain 12 papers. The topics discussed include: towards integrating e-mail communication in the IDE, searching API usage examples in code repositories with sourcerer API search, behavior model based component search: an initial assessment, enhancing static source code search with dynamic data, facilitating the comparison of software retrieval systems through a reference reuse collection, more archetypal usage scenarios for software search engines, immediate search in the IDE as an example of socio-technical congruence in search-driven development, searching across paths, towards query formulation and visualization of structural search results, searching and using external types in an extensible software development environment, a trustability metric for code search based on developer karma, and fostering synergies - how semantic web technology could influence software repositories."
"Lawall J., Laurie B., Hansen R.R., Palix N., Muller G." $ "Finding error handling bugs in OpenSSL using Coccinelle" $ "OpenSSL is a library providing various functionalities relating to secure network communication. Detecting and fixing bugs in OpenSSL code is thus essential, particularly when such bugs can lead to malicious attacks. In previous work, we have proposed a methodology for finding API usage protocols in Linux kernel code using the program matching and transformation engine Coccinelle. In this work, we report on our experience in applying this methodology to OpenSSL, focusing on API usage protocols related to error handling. We have detected over 30 bugs in a recent OpenSSL snapshot, and in many cases it was possible to correct the bugs automatically. Our patches correcting these bugs have been accepted by the OpenSSL developers. This work furthermore confirms the applicability of our methodology to user-level code. © 2010 IEEE."
"Farooq U., Welicki L., Zirkler D." $ "API usability peer reviews: A method for evaluating the usability of application programming interfaces" $ "We describe a usability inspection method to evaluate Application Programming Interfaces (APIs). We found the method useful as it identified usability defects in Microsoft's .NET Framework, of which 59% were new and 21% were fixed. Based on a comparison of usability defects identified between API usability peer reviews and API usability tests, API usability tests were found to expose design issues related to actually using an API whereas API usability peer reviews were found to expose the design rationale of an API. We reflect on the efficiency and productivity of each method: each API usability test is equivalent to 16 API usability peer reviews with the former having a 2.5x productivity advantage. We discuss how API usability peer reviews can be used in conjunction with API usability tests to increase usability coverage on APIs. © 2010 ACM."
"Liao Z., Duan X., Lu J., Yue X., Liu W., He Q." $ "The mobile LBS positioning solution based on NRTK and Windows Mobile" $ "In order to meet the requirements of Location-based Service (LBS), there are many proposed positioning solutions that may be able to provide LBS support, such as GPS, Mobile Phone Location, RFID, and so on. With the most widely recognized system being the Global Positioning System (GPS) and Windows Mobile 5.0 system characteristics, this paper first provides three kinds method, i.e. invoking Win32 API, using Ports namespace and calling GPS Intermediate Driver, to receive GPS raw data on Windows Mobile devices. Since internet-based GPS VRS RTK workstation can provide real-time streaming of differential GPS corrections. The following text introduces a high precision Net-based RTK (NRTK) mobile positioning solution which is mainly equipped with a Windows Mobile 5.0 device and an Ashtech Z-Xtreme receiver. With it a rover-side (NtripClient) firstly connects to an NtripCaster which is a part of a VRS workstation, via GPRS /CDMA, using the IP and specified listening Port of the Tongji VRS workstation. Then the rover-side transmits NMEA GGA strings after the HTTP request to the NtripCaster. With that the Windows Mobile device continuously receives RTCM data back from the NtripCaster and instantly sends them out into the Ashtech Z-Xtreme receiver. Finally, the Ashtech Z-Xtreme receiver will work out vector solution information of the rover-side. Thus, this paper provides a multimode mobile LBS positioning solution based on NRTK and Windows Mobile 5.0. © 2010 Copyright SPIE - The International Society for Optical Engineering."
"Gerken J., Jetter H.-C., Reiterer H." $ "Using concept maps to evaluate the usability of APIs" $ "Application programming interfaces (APIs) are the interfaces to existing code structures, such as widgets, frameworks, or toolkits. Therefore, they very much do have an impact on the quality of the resulting system. So ensuring that developers can make the most out of them is an important challenge. However standard usability evaluation methods as known from HCI have limitations in grasping the interaction between developer and API - the GUI, which makes this interaction obvious, is missing. In this paper we present a longitudinal approach using concept maps and a question diary to make this interaction visible and study the usability of an API over time. © 2010 Copyright is held by the author/owner(s)."
"Resseguie D., Fairgrieve S." $ "Unifying isolated sensor systems using web 2.0 and open standards" $ "Oak Ridge National Laboratory has developed the Sensorpedia program that enables individuals, communities, and enterprises to share, find, and use sensor data online. Sensorpedia networks users based on mutual sensor information interests in place of networking them based on mutual personal interests. The program applies several design principles common to many popular Web 2.0 sites. It is a Web-based application consisting of a Google Maps interface where users can search and explore published sensor data. The interface is designed to be simple and intuitive to use for gathering and exchanging important data online. The Sensorpedia API uses Web services designed to accept and publish data using established standards, such as the Atom Syndication Format and GeoRSS. The API also supports rapid development of customized third-party applications to meet specific needs of users."
"Hurst A., Hudson S.E., Mankoff J." $ "Automatically identifying targets users interact with during real world tasks" $ "Information about the location and size of the targets that users interact with in real world settings can enable new innovations in human performance assessment and soft-ware usability analysis. Accessibility APIs provide some information about the size and location of targets. How-ever this information is incomplete because it does not sup-port all targets found in modern interfaces and the reported sizes can be inaccurate. These accessibility APIs access the size and location of targets through low-level hooks to the operating system or an application. We have developed an alternative solution for target identification that leverages visual affordances in the interface, and the visual cues produced as users interact with targets. We have used our novel target identification technique in a hybrid solution that combines machine learning, computer vision, and accessibility API data to find the size and location of targets users select with 89% accuracy. Our hybrid approach is superior to the performance of the accessibility API alone: in our dataset of 1355 targets covering 8 popular applications, only 74% of the targets were correctly identified by the API alone. Copyright 2010 ACM."
"Myers B.A., Jeong S.Y., Xie Y., Beaton J., Stylos J., Ehret R., Karstens J., Efeoglu A., Busse D.K." $ "Studying the Documentation of an API for Enterprise ServiceOriented Architecture" $ "All software today is written using application programming interfaces (APIs). We performed a user study of the online documentation of a large and complex API for Enterprise Service-Oriented Architecture (eSOA), which identified many issues and recommendations for making API documentation easier to use. eSOA is an appropriate testbed because the target users include high-level business experts who do not have significant programming expertise and thus can be classified as ""end-user developers."" Our study showed that the participants' background influenced how they navigated the documentation. Lack of familiarity with business terminology was a barrier for developers without business application experience. Both groups avoided areas of the documentation that had an inconsistent visual design. A new design for the documentation that supports flexible navigation strategies seems to be required to support the wide range of users for eSOA. This paper summarizes our study and provides recommendations for future documentation for APIs. Copyright © 2010, IGI Global."
"Teófilo M., Martini A., Cruz P." $ "Ulmo: A system to enable mobile applications personalization by binary SMS" $ "Usability and user interfaces play a huge and important role in today's mobile application. Besides a good design, acceptable performance, scalability, and robustness, a mobile application needs to be easy to use and, to some extent, customizable. To create a system able to custom the mobile application's user interface and mirror it immediately to final users is the purpose of this article. Ulmo is such system, which is composed by a web site that enables user to comfortably executes change in mobile application user interface, a mobile application compliant (providing API that facilitates mobile application Ulmo compliance development) and the communication module to mirror web adjustments in mobile phone, which was made using SMS technology. Its availability and low cost are also considered and its high penetration in emergent markets. Some aspects as security, data compression and reliability are taken in account. © 2009 IEEE."
"Mühlberg J.T., Lüttgen G." $ "Verifying compiled file system code" $ "This paper presents a case study on retrospective verification of the Linux Virtual File System (VFS), which is aimed at checking for violations of API usage rules and memory properties. Since VFS maintains dynamic data structures and is written in a mixture of C and inlined assembly, modern software model checkers cannot be applied. Our case study centres around our novel verification tool, the SOCA Verifier, which symbolically executes and analyses compiled code. We describe how this verifier deals with complex program features such as memory access, pointer aliasing and computed jumps, while reducing manual modelling to the bare minimum. Our results show that the SOCA Verifier is capable of reliably analysing complex operating system components such as the Linux VFS, thereby going beyond traditional testing tools and into niches that current software model checkers do not reach. © 2009 Springer-Verlag Berlin Heidelberg."
"Kawrykow D., Robillard M.P." $ "Improving API usage through automatic detection of redundant code" $ "Software projects often rely on third-party libraries made accessible through Application Programming Interfaces (APIs). We have observed many cases where APIs are used in ways that are not the most effective. We developed a technique and tool support to automatically detect such patterns of API usage in software projects. The main hypothesis underlying our technique is that client code imitating the behavior of an API method without calling it may not be using the API effectively because it could instead call the method it imitates. Our technique involves analyzing software systems to detect cases of API method imitations. In addition to warning developers of potentially reimplemented API methods, we also indicate how to improve the use of the API. Applying our approach on 10 Java systems revealed over 400 actual cases of potentially suboptimal API usage, leading to many improvements to the quality of the code we studied. © 2009 IEEE."
"Focardi R., Luccio F.L., Steel G." $ "Blunting differential attacks on PIN processing APIs" $ "We propose a countermeasure for a class of known attacks on the PIN processing API used in the ATM (cash machine) network. This API controls access to the tamper-resistant Hardware Security Modules where PIN encryption, decryption and verification takes place. The attacks are differential attacks, whereby an attacker gains information about the plaintext values of encrypted customer PINs by making changes to the non-confidential inputs to a command. Our proposed fix adds an integrity check to the parameters passed to the command. It is novel in that it involves very little change to the existing ATM network infrastructure. © Springer-Verlag 2009."
"Blum N., Dutkowski S., Magedanz T." $ "InSeRt - An intent-based service request API for service exposure in Next Generation Networks" $ "Modern telecommunication networks and classical roles of operators are subject to fundamental change. Many network operators are currently seeking for new sources to generate revenue by exposing network capabilities to 3rd party service providers. At the same time we can observe that applications on the World Wide Web (WWW) are becoming more mature in terms of the definition of APIs that are offered towards other services. The combinations of those services are commonly referred to as Web 2.0 mash-ups. This report describes our approach to prototype a policy-based service broker function for Next Generation Networks (NGN)-based telecommunications service delivery platforms to provide flexible service exposure anchor points for service integration into so called mash-ups. The defined exposure API uses Intent-based request constructs to allow a description of services in business terms, i.e. intentions and strategies to achieve them and to organize their publication, search and composition on the basis of these descriptions. © 2009 IEEE."
"Pradel M., Gross T.R." $ "Automatic generation of object usage specifications from large method traces" $ "Formal specifications are used to identify programming errors, verify the correctness of programs, and as documentation. Unfortunately, producing them is error-prone and time-consuming, so they are rarely used in practice. Inferring specifications from a running application is a promising solution. However, to be practical, such an approach requires special techniques to treat large amounts of runtime data. We present a scalable dynamic analysis that infers specifications of correct method call sequences on multiple related objects. It preprocesses method traces to identify small sets of related objects and method calls which can be analyzed separately. We implemented our approach and applied the analysis to eleven real-world applications and more than 240 million runtime events. The experiments show the scalability of our approach. Moreover, the generated specifications describe correct and typical behavior, and match existing API usage documentation. © 2009 IEEE."
"Lefohn A., Houston M., Andersson J., Assarsson U., Everitt C., Fatahalian K., Foley T., Hensley J., Lalonde P., Luebke D." $ "Beyond programmable shading (parts I and II)" $ "There are strong indications that the future of interactive graphics programming is a more flexible model than today's OpenGL/Direct3D pipelines. Graphics developers need a basic understanding of how to combine emerging parallel programming techniques and more flexible graphics processors with the traditional interactive rendering pipeline. As the first in a series, this course introduces the trends and directions in this emerging field. Topics include: parallel graphics architectures, parallel programming models for graphics, and game-developer investigations of the use of these new capabilities in future rendering engines. This second course in the series Beyond Programmable Shading presents the state of the art in combining traditional rendering API usage with advanced task- and data-parallel computation to increase the image quality of interactive graphics. Leaders from graphics hardware vendors, game development, and academic research present case studies that show how general parallel computation is being combined with the traditional graphics pipeline to boost image quality and spur new graphics algorithm innovation. Each case study discusses the mix of parallel programming constructs, details of the graphics algorithm, and how the rendering pipeline and computation interact to achieve the technical goals. Presenters also discuss integrating a combination of GPU and CPU techniques for more efficient and flexible algorithms. The focus is on what currently can be done, how it is done, and near-future trends. Topics include: interactive realistic lighting, advanced geometry-processing pipelines, in-frame data structure construction, complex image processing, and rasterization versus ray tracing."
"Wurster G., Van Oorschot P.C." $ "The developer is the enemy" $ "We argue that application developers, while often viewed as allies in the effort to create software with fewer security vulnerabilities, are not reliable allies. They have varying skill sets which often do not include security. Moreover, we argue that it is inefficient and unrealistic to expect to be able to successfully teach all of the world's population of software developers to be security experts. We suggest more efficient and effective alternatives, focusing on those developers who produce core functionality used by other developers (e.g. those who develop popular APIs - Application Programming Interfaces). We discuss the benefits of designing APIs which can be easily used in a secure fashion to encourage security. We also introduce two straw-man proposals which integrate security into the work- ow of an application developer. Data tagging and unsuppressible warnings provide the basis for further work where the most natural use (path of least resistance) results in secure code. We believe there are benefits to co-opting developers into programming securely. Copyright 2008 ACM."
"Ghoul O.E., Jemni M." $ "A sign language screen reader for deaf" $ "Screen reader technology has appeared first to allow blind and people with reading difficulties to use computer and to access to the digital information. Until now, this technology is exploited mainly to help blind community. During our work with deaf people, we noticed that a screen reader can facilitate the manipulation of computers and the reading of textual information. In this paper, we propose a novel screen reader dedicated to deaf. The output of the reader is a visual translation of the text to sign language. The screen reader is composed by two essential modules: the first one is designed to capture the activities of users (mouse and keyboard events). For this purpose, we adopted Microsoft MSAA application programming interfaces. The second module, which is in classical screen readers a text to speech engine (TTS), is replaced by a novel text to sign (TTSign) engine. This module converts text into sign language animation based on avatar technology. © Springer-Verlag Berlin Heidelberg 2009."
"Donatelli M., Bellocchi G., Habyarimana E., Bregaglio S., Confalonieri R., Baruth B." $ "CLIMA: A weather generator framework" $ "Weather generators (WG) can be defined as collections of models to estimate site specific weather data and derived variables. They are commonly used for providing inputs to a variety of biophysical models or for deriving weather indices. Also, using either global circulation models or local area models inputs, sets of parameters calculated from long term weather series specific to a site can be modified to reproduce via WG synthetic series representing climate change scenarios. Finally, models implemented in WG are used for estimating missing data and to perform quality control on data collected from sensors at weather stations. The scientific foundation of models implemented in WG varies from purely empirical to physically based. Several models exist allowing either the estimate or the generation of specific weather variables, with different input requirements. New models are continuously being proposed, and, although some models to estimate specific variables are commonly accepted as reference methods, the lack of some inputs requires at times using alternate approaches. Currently available WG are applications which implement a predefined set of modelling options, in software implementations which do not allow for independent extensions by third parties. The CLIMA weather generator is a component based application which consist of a set of reusable graphical user interface (GUI) components, and a set of extensible model components. The latter are subdivided into six namespaces to estimate variables related to air temperature, rainfall, solar radiation, evapotranspiration, wind, and leaf wetness. The temporal resolution of the estimated variables varies from a day to ten minutes. Another software library allows the estimation of climatic indices from one year of daily data at the time. The current implementation consists of more than 300 models. Components are usable either via the CLIMA GUI, or via custom developed applications in a client-server architecture. The architecture of components is based on the composite and strategy as keystone design patterns. Models are implemented as single approaches (simple strategies), and as composite models (composite strategies) which are associated to models of finer granularity. Another type of model unit is represented by context strategies, which implement a logic to select within associated models. Finally, the GUI allows building composite models which can be saved as libraries, to be reused both within CLIMA for weather series generation, or independently by other applications. The components are implemented as .NET libraries. They implement a test of pre- and post-conditions, and a scalable tracing via .NET listeners. All variables and parameters are documented by a description, a physical unit and default, maximum and minimum values. Components are extensible: i.e. new models can be added independently by third parties and detected by the CLIMA application, which can also use them for data generation via building new composite libraries. Each component is made available via a software development kit which includes the code of two sample projects, either to extend or to reuse the component. CLIMA and its model components are freely available for reuse in no-profit applications."
"Lawall J.L., Brunel J., Palix N., Hansen R.R., Stuart H., Muller G." $ "WYSIWIB: A declarative approach to finding API protocols and bugs in linux code" $ "Eliminating OS bugs is essential to ensuring the reliability of infrastructures ranging from embedded systems to servers. Several tools based on static analysis have been proposed for finding bugs in OS code. They have, however, emphasized scalability over usability, making it difficult to focus the tools on specific kinds of bugs and to relate the results to patterns in the source code. We propose a declarative approach to bug finding in Linux OS code using a control-flow based program search engine. Our approach is WYSIWIB (What You See Is Where It Bugs), since the programmer expresses specifications for bug finding using a syntax close to that of ordinary C code. The key advantage of our approach is that search specifications can be easily tailored, to eliminate false positives or catch more bugs. We present three case studies that have allowed us to find hundreds of potential bugs. © 2009 IEEE."
"Chen N.-S., Wei C.-W., Chen W.-S." $ "Developing a GroupNet system to solve groupthink problem" $ "This study proposed the concepts, architecture, and kernel of a GroupNet system to construct a more flexible ubiquitous learning environment. GroupNet is aiming to support small-group face-to-face learning activities anywhere and anytime without sticking in traditional classroom settings and additional infrastructures. We have also implemented the application programming interface (API) for accessing the core functions supported by GroupNet Kernel such that developers can develop GroupNet applications with fewer efforts. A GroupNet application has been developed using the APIs for conducting an experiment on how to reduce groupthink phenomenon in collaborative learning setting using mobile devices to evaluate the usability of GroupNet Kernel and illustrate the effectiveness of GroupNet applications.© 2009 IEEE."
"Robillard M.P." $ "What makes APIs hard to learn? answers from developers" $ "Most software projects reuse components exposed through APIs, which provide developers access to implemented functionality. APIs have grown large and diverse, which raises questions regarding their usability. This article reports on a study of the obstacles professional developers at Microsoft faced when learning how to use APIs. The study was grounded in developers' experience, collected through a survey and interviews. The resulting data showed that learning resources for APIs are critically important and shed light on three issues: the need to discover the design and rationale of the API when needed, the challenge of finding credible usage API examples at the right level of complexity, and the challenge of understanding inexplicable API behavior. The article describes each of these challenges in detail and discusses associated implications for API users and designers. © 2009 IEEE."
"De Souza C.R.B., Bentolila D.L.M." $ "Automatic evaluation of API usability using complexity metrics and visualizations" $ "APIs are one of the most important concepts in today's modern software engineering. They allow software developers to work independently and minimize the impact caused by changes in the implementation of software services. Despite their importance, currently there are only a few approaches that guide the design of an API. In this paper, we present an approach, and associated tool, that allows an API client (developer) to evaluate the usability of an API and decide whether to use it (release it). In this aspect, our approach goes beyond previous approaches by performing this complexity and usability API analysis automatically. © 2009 IEEE."
"Fröschle S., Steel G." $ "Analysing PKCS#11 key management APIs with unbounded fresh data" $ "We extend Delaune, Kremer and Steel's framework for analysis of PKCS#11-based APIs from bounded to unbounded fresh data. We achieve this by: formally defining the notion of an attribute policy, showing that a well-designed API should have a certain class of policy we call complete, showing that APIs with complete policies may be safely abstracted to APIs where the attributes are fixed, and proving that these static APIs can be analysed in a small bounded model such that security properties will hold for the unbounded case. We automate analysis in our framework using the SAT-based security protocol model checker SATMC. We show that a symmetric key management subset of the Eracom PKCS#11 API, used in their ProtectServer product, preserves the secrecy of sensitive keys for unbounded numbers of fresh keys and handles, i.e. pointers to keys. We also show that this API is not robust: if an encryption key is lost to the intruder, SATMC finds an attack whereby all the keys may be compromised. © 2009 Springer Berlin Heidelberg."
"Burns A., Wettings A.J." $ "Concurrency vulnerabilities" $ "Concurrency is a significant issue in the design and implementation of systems, though it brings with it a number of vulnerabilities. Many different concurrency models can be found in programming languages. Vulnerabilities from this simple model include not all tasks start their execution, premature silent termination of a task or tasks, and overflow of task-local data. Some other vulnerabilities include unintentional use of unprotected shared variables, mutual update problem, race conditions, livestocks, and memory caching. The decision not to use a concurrent programming language does not remove these vulnerabilities, many will be present in the operating system (OS) and the API used by the sequential program to gain access to the concurrency features of the OS. It is possible to take an extensive set of language features, such as those provided by Ada tasking, and define a subset so that a profile is defined that has adequate expressive power and a minimum of vulnerabilities."
"De F. O. Araújo T., De S. Falc̃ao M.A., Lima A.M.N., Loureiro C.F.C.L." $ "MaeRobot: An open source test platform for prototyping robots" $ "MaeRobot is a platform for studying robotic systems that interact with wireless networks. MaeRobot's main goal is to provide a simple way to create and test different robotic configurations build using the Mindstorm NXT Robotics kit. A wireless mobile device running Embedded Linux OS is used as the robot controller. The architecture of the proposed platform whereas the API used to exploit its resources are described in the paper. Moreover, we provide some useful examples of applications implemented with MaeRobot. © 2008 IEEE."
"Sankaranarayanan S., Ivančić F., Gupta A." $ "Mining library specifications using inductive logic programming" $ "Software libraries organize useful functionalities in order to promote modularity and code reuse. A typical library is used by client programs through an application programming interface (API) that hides its internals from the client. Typically, the rules governing the correct usage of the API are documented informally. In many cases, libraries may have complex API usage rules and unclear documentation. As a result, the behaviour of the library under some corner cases may not be well understood by the programmer. Formal specifications provide a precise understanding of the API behaviour. We propose a methodology for learning interface specifications using Inductive Logic Programming (ILP). Our technique runs several unit tests on the library in order to generate relations describing the operation of the library. The data collected from these tests are used by an inductive learner to obtain rich Datalog/Prolog specifications. Such specifications capture essential properties of interest to the user. They may be used for applications such as reverse engineering the library internals or constructing checks on the application code to enforce proper API usage along with other properties of interest. Copyright 2008 ACM."
"Bierhoff K., Aldrich J." $ "PLURAL: Checking protocol compliance under aliasing" $ "Enforcing compliance to API usage protocols is notoriously hard due to possible aliasing of objects through multiple references. In previous work we proposed a sound, modular approach to checking protocol compliance based on types-tates that offers a great deal of flexibility in aliasing [1]. In our approach, API protocols are defined based on type states. Every reference is associated with a permission, and reasoning about permissions is appropriately conservative for the ""degree"" of possible aliasing admitted by a permission. This paper describes Plural, a tool to automatically enforce type state-based protocols using permissions in Java. API developers can specify protocols with simple annotations on methods and method parameters. A static flow analysis tracks permissions in code that uses specified APIs and issues warnings for possible protocol violations."
"Bruch M., Schäfer T., Mezini M." $ "On evaluating recommender systems for API usages" $ "To ease framework understanding, tools have been developed that analyze existing framework instantiations to extract API usage patterns and present them to the user. However, detailed quantitative evaluations of such recommender systems are lacking. In this paper we present an automated evaluation process which extracts queries and expected results from existing code bases. This enables the validation of recommendation systems with large test beds in an objective manner by means of precision and recall measures. We demonstrate the applicability of our approach by evaluating an improvement of an existing API recommender tool that takes into account the framework-method context for recommendations. Copyright 2008 ACM."
"Glek T., Mandelin D." $ "Using GCC instead of grep and sed" $ "Large codebases benefit from automatic assistance when enforcing correct API usage and performing large-scale refactoring. To make large-scale refactoring of the Mozilla codebase successful, we developed a static analysis framework based on a time-tested GCC compiler infrastructure featuring the expressiveness and ease of prototyping of a general-purpose scripting language. The presentation will describe our GCC plugin system and two generic static analysis plugins, Dehydra and Treehydra. Dehydra exposes a simplified view of the GCC AST, suitable for novice users and semantic-grep-style analyses. Treehydra exposes the GCC GIMPLE API. We also describe our static analysis applications and experience with the system."
"Yeh R.B., Paepcke A., Klemmer S.R." $ "Iterative design and evaluation of an event architecture for pen-and-paper interfaces" $ "This paper explores architectural support for interfaces combining pen, paper, and PC. We show how the eventbased approach common to GUIs can apply to augmented paper, and describe additions to address paper's distinguishing characteristics. To understand the developer experience of this architecture, we deployed the toolkit to 17 student teams for six weeks. Analysis of the developers' code provided insight into the appropriateness of events for paper UIs. The usage patterns we distilled informed a second iteration of the toolkit, which introduces techniques for integrating interactive and batched input handling, coordinating interactions across devices, and debugging paper applications. The study also revealed that programmers created gesture handlers by composing simple ink measurements. This desire for informal interactions inspired us to include abstractions for recognition. This work has implications beyond paper - designers of graphical tools can examine API usage to inform iterative toolkit development."
"Clausse J.-M., Fizeau A.H." $ "Software structure for Vega/Chara instrument" $ "VEGA (Visible spEctroGraph and polArimeter) is one of the focal instruments of the CHARA array at Mount Wilson near Los Angeles. Its control system is based on techniques developed on the GI2T interferometer (Grand Interféromètre à 2 Télescopes) and on the SIRIUS fibered hyper telescope testbed at OCA (Observatoire de la Côte d'Azur). This article describes the software and electronics architecture of the instrument. It is based on local network architecture and uses also Virtual Private Network connections. The server part is based on Windows XP (VC++). The control software is on Linux (C, GTK). For the control of the science detector and the fringe tracking systems, distributed API use real-time techniques. The control software gathers all the necessary informations of the instrument. It allows an automatic management of the instrument by using an original task scheduler. This architecture intends to drive the instrument from remote sites, such as our institute in Sou h of France."
"Stylos J., Myers B.A." $ "The implications of method placement on API learnability" $ "To better understand what makes Application Programming Interfaces (APIs) hard to use and how to improve them, recent research has begun studying programmers' strategies and use of APIs. It was found that method placement - - on which class or classes a method is placed - - can have large usability impact in object-oriented APIs. This was because programmers often start their exploration of an API from one ""main"" object, and were slower finding other objects that were not referenced in the methods of the main object. For example, while mailServer.send(mailMessage) might make sense, if programmers often begin their API explorations from the MailMessage class, then this makes it harder to find the MailServer class than the alternative mailMessage. send(mailServer). This is interesting because many real APIs place methods essential to common objects on other, helper objects. Alternate versions of three different APIs were compared, and it was found that programmers gravitated toward the same starting classes and were dramatically faster - - between 2 to 11 times - - combining multiple objects when a method on the starting class referred to the other class. © 2008 ACM."
"Wagner S., Nielsen C.C." $ "Usability and implementation experiences with cots products used as a distributed client platform" $ "This paper conveys some of the experiences with using commercial of the-shel (COTS) products as clients to Bluetooth enabled devices, which have no user interface of their own, but relies on the COTS products for user interaction. The COTS devices used include several different vendors' models of the Microsoft Pocket PCplatform (also known as Windows Mobile Professional or Classic) running NET Compact Framework, as well as a number of different models of Java enabled cell phones from Nokia, Siemens and Sony-Ericsson. The specific case study is with the Taxmaster4 Windows Mobile product used with BMW automobiles as a driving log application. The paper concludes that many usability problems exist when using COTS products. These may to some extend be overcome by pragmatic design decisions, but it is necessary that the COTS products hardware platform and application programming interfaces should become better suited to support distributed user interfaces than is the case today. This includes better support for basic user interface elements as well as supporting Bluetooth and other wireless technologies more reliably. These issues should be addressed by the vendors and manufactures of these platforms, not the application programmers. © 2008 IEEE."
"Beaton J., Jeong S.Y., Xie Y., Stylos J., Myers B.A." $ "Usability challenges for enterprise service-oriented architecture APIs" $ "An important part of many programming tasks is the use of libraries and other forms of Application Programming Interfaces (APIs). Programming via web services using a Service-Oriented Architecture (SOA) is an emerging form of API usage. Web services in a business context (called enterprise SOA or E-SOA) add additional complexity in terms of the number of the services, the variety of internal data structures, and service interdependencies. After altering existing Human-Computer Interaction (HCI) methodologies to address the unique context of software development for SOA, we evaluated a large E-SOA API and identified many usability challenges. Prominent results include difficulties developers encountered while assembling data structures in web service parameters, cycles of errors due to unclear control parameters within data structures, and difficulties with understanding long identifier names. We recommend a tolerance for unspecified objects in automatically-generated web service proxy code, consistent data structures in parameters across services, and encoding optional namespace schemes into WSDL files. © 2008 IEEE."
"Stylos J., Graf B., Busse D.K., Ziegler C., Ehret R., Karstens J." $ "A case study of API redesign for improved usability" $ "As software grows more complex, software developers' productivity is increasingly defined by their ability to effectively reuse code. Even APIs (application programming interfaces) and other code explicitly intended for reuse are often difficult and time consuming for developers to use. This paper describes the user-centered design and evaluation process we evolved in redesigning SAP's BRFplus - a business rules engine, whose API was created for platform development, but which is now also increasingly being used by application developers - even though it was not initially designed with their specific needs in mind. Our API redesign attempts to take both the initial as well as the new emergent user requirements into account. A usability evaluation of our proposed changes to the API suggests that our user-centered design process was successful in helping to create an API that significantly improved users' productivity and better matches the different users' needs. © 2008 IEEE."
"Bellotti F., Berta R., Margarone M., De Gloria A." $ "oDect: an RFID-based object detection API to support applications development on mobile devices" $ "The RFID technology is becoming ever more popular in the development of ubiquitous computing applications. A full exploitation of the RFID potential requires the study and implementation of human-computer interaction (HCI) modalities to be able to support wide usability by the target audience. This implies the need for programming methodologies specifically dedicated to support the easy and efficient prototyping of applications to have feedback from early tests with users. On the basis of our field-working experience, we have designed oDect, a high-level language and platform-independent application programming interface (API), ad hoc designed to meet the needs of typical applications for mobile devices (smart phones and PDAs). oDect aims at allowing application developers to create their prototypes focusing on the needs of the final users, without having to care about the low-level software that interacts with the RFID hardware. Further, in an end-user developing (EUD) approach, oDect provides specific support for the application end-user herself to cope with typical problems of RFID applications in detecting objects. We describe in detail the features of the API and discuss the findings of a test with four programmers, where we analyse and evaluate the use of the API in four sample applications. We also present results of an end-user test, which investigated strengths and weaknesses of the territorial agenda (TA) concept. The TA is an RFID-based citizen guide that aids-through time- and location-based reminders-users in their daily activities in a city. The TA directly exploits EUD features of oDect, in particular concerning the possibility of linking detected objects with custom actions. Copyright © 2008 John Wiley & Sons, Ltd."
"González-Vélez H., Cole M." $ "An adaptive parallel pipeline pattern for grids" $ "This paper introduces an adaptive parallel pipeline pattern which follows the GRASP (Grid-Adaptive Structured Parallelism) methodology. GRASP is a generic methodology to incorporate structural information at compile time into a parallel program that enables it to adapt automatically to dynamic variations in resource performance. GRASP instruments the pipeline with a series of pragmatic rules, which depend on particular performance thresholds based on the computation/communication patterns of the program and the availability of resources in the grid. Our parallel pipeline pattern is implemented as a parameterisable C/MPI API using a variable-size input data vector and a stage function array. We have evaluated its efficiency using a numerical benchmark stage function in a non-dedicated computational grid environment. ©2008 IEEE."
"Krumsiek J., Friedel C.C., Zimmer R." $ "ProCope - Protein complex prediction and evaluation" $ "Recent advances in high-throughput technology have increased the quantity of available data on protein complexes and stimulated the development of many new prediction methods. In this article, we present ProCope, a Java software suite for the prediction and evaluation of protein complexes from affinity purification experiments which integrates the major methods for calculating interaction scores and predicting protein complexes published over the last years. Methods can be accessed via a graphical user interface, command line tools and a Java API. Using ProCope, existing algorithms can be applied quickly and reproducibly on new experimental results, individual steps of the different algorithms can be combined in new and innovative ways and new methods can be implemented and integrated in the existing prediction framework. © The Author 2008. Published by Oxford University Press. All rights reserved."
"Homan M., Amor R., Tempero E." $ "Indexing the Java API using source code" $ "The basic idea behind software reuse is that software developers use reusable components found in software repositories to reduce the amount of code that has to be written and so increase productivity. A problem arises, however, if the repository is too big - it becomes difficult to find relevant components. What is needed is an effective means to query repositories. Most approaches to developing such means involves creating a good index to which the queries can be applied. Developing a good index requires identifying the relevant information on which to base the index. In this paper, we present the results of a project that used source code as the basis for the index. © 2008 IEEE."
"Kurzyniec D., Sunderam V., Sławińska M." $ "REVENTS: Facilitating event-driven distributed HPC applications" $ "Modern scientific applications that need to share geographically scattered resources and dynamically adapt to changes in the environment pose challenges to traditional parallel and distributed programming paradigms. Distributed component frameworks attempt to address the demands of contemporary HPC applications by enabling coarse-grained decomposition and loose coupling. Nonetheless, components usually communicate via synchronous RPC, which is not suitable for interactive applications. This paper introduces a novel distributed event notification system, called REVENTS, which enables both synchronous and decentralized asynchronous component interactions. The REVENTS system is based on a topic-list publisher-subscriber model. It integrates and enhances common technologies for messaging, events, and group communication. The article introduces the REVENTS API, its reference implementation, and its application in the H2O metacomputing framework. Presented experimental results confirm REVENTS' usability in distributed HPC scenarios. © 2008 Springer-Verlag Berlin Heidelberg."
"Fink S.J., Yahav E., Dor N., Ramalingam G., Geay E." $ "Effective typestate verification in the presence of aliasing" $ "This article addresses the challenge of sound typestate verification, with acceptable precision, for real-world Java programs. We present a novel framework for verification of typestate properties, including several new techniques to precisely treat aliases without undue performance costs. In particular, we present a flow-sensitive, context-sensitive, integrated verifier that utilizes a parametric abstract domain combining typestate and aliasing information. To scale to real programs without compromising precision, we present a staged verification system in which faster verifiers run as early stages which reduce the workload for later, more precise, stages. We have evaluated our framework on a number of real Java programs, checking correct API usage for various Java standard libraries. The results show that our approach scales to hundreds of thousands of lines of code, and verifies correctness for 93% of the potential points of failure. © 2008 ACM."
"Jian S., Wei G." $ "Development of routing application of SCA-based software defined radio" $ "Software Communications Architecture (SCA) has become the standard framework followed by the current developing software defined radios (SDR) all over the world. So it is significant for us to develop some essential applications in such an SCA-based SDR. In this paper, we propose an implementation scheme of routing application based on SCA. First, the framework and functions of SCA are introduced briefly. In the following, routing technology is discussed in such a software radio network with multi-layer dynamic topology. Based on SCA, the system architecture on which the routing application depends is presented. We put emphasis on the design of routing components and application program interface (API). Using a sequence diagram, the interaction among Routing Selection Component, Adaptive Channel Selection Component and MAC Components, is shown clearly. ©2006 IEEE."
"Lee S.-Y., Choi B.-U." $ "Certification tools of ubiquitous mobile platform" $ "The Wireless Internet Platform for Interoperability (WIPI) is a wireless Internet standard platform in Korea. The WIPI is composed of four main parts including the hardware abstraction layer (HAL), a runtime engine, and two standard application programming interfaces (APIs, WIPI-C and WIPIJava). A certification process is required to ensure the interoperability of the developed WIPI platform. In this paper, we propose the platform certification toolkit (PCT) and HAL certification toolkit (HCT) as WIPI specification certification tools. The PCT certifies the functions of the platform and standard APIs, whereas The HCT certifies the HAL API. Users can find precisely where an error occurred by using the tools, which facilitate the debugging processes and reduce development time. We describe the architecture of the PCT and the HCT and show the implementations. And, we introduce the case study applying them to the real WIPI reference implementations. © Springer-Verlag Berlin Heidelberg 2007."
"Stylos J., Myers B." $ "Mapping the space of API design decisions" $ "When creating new application programming interfaces (APIs), designers must make many decisions. These decisions affect the quality of the resulting APIs in terms of performance (such as speed and memory usage), power (expressiveness, extensibility and evolvability) and usability (learnability, productivity and error prevention). Experienced API designers have written recommendations on how to design APIs, offering their opinions on various API design decisions. Additionally, empirical research has begun to measure the usability tradeoffs of specific design decisions. While previous work has offered specific suggestions, there has not been a clear description of the design space of all possible API design decisions, or the quality attributes that these decisions affect. This paper puts existing API design recommendations into context by mapping out the space of API design decisions and API quality attributes. © 2007 IEEE."
"Xu G., Lu F., Yu H., Xu Z." $ "A distributed parallel computing environment for bioinformatics problems" $ "Certain bioinformatics research, such as sequence alignment, alternative splicing, protein function/structure prediction, gene identify, bio-chip data analysis, and so on, requires massive computing power, which is hardly available in a single computing node. In order to facilitate bioinformatics research, we have designed and implemented a distributed and parallel computing environment with grid technology, in which, biologists can solve bioinformatics problems using distributed computing resources in parallel and reduce execution time. In this environment, the computing power and program information of computing nodes are described with XML documents. A web service named Local Resource Management Service is deployed on each computing node so that the distributed resources can be accessed in a uniform manner. With an API suite, biologists can use distributed computing resources in parallel easily in their applications. Further more, users can monitor the status of distributed resources dynamically on the portal. A real use case of alternative splicing is also presented, through which we have analyzed the usability, efficiency, and stability of the environment. ©2007 IEEE."
"Juanjuan J., Koskinen J., Ruokonen A., Systä T." $ "Constructing usage scenarios for API redocumentation" $ "Software development relies heavily on reusable libraries and software components. For correct use of the provided API, proper documentation is needed. API usage is often demonstrated by giving example applications and code samples. In this paper we propose an approach for mining such usage scenarios from run-time communication between sample applications and the API. This is done automatically by first monitoring the API usage of sample applications, then filtering the generated traces, and finally synthesizing the sequence diagrams and illustrating them in a well-formed way as UML2 sequence diagrams. Such usage scenarios support the software engineer in comprehending the usage of the API. With proper tool support they can also be used for validating other applications ' API usage and for generating code for a new application using the same API. ©2007 IEEE."
"Ellis B., Stylos J., Myers B." $ "The factory pattern in API design: A usability evaluation" $ "The usability of software APIs is an important and infrequently researched topic. A user study comparing the usability of the factory pattern and constructors in API designs found highly significant results indicating that factories are detrimental to API usability in several varied situations. The results showed that users require significantly more time (p = 0.005) to construct an object with a factory than with a constructor while performing both context-sensitive and contextfree tasks. These results suggest that the use of factories can and should be avoided in many cases where other techniques, such as constructors or class clusters, can be used instead. ©2007 IEEE."
"Rich C., Sidner C.L." $ "DiamondHelp: A generic collaborative task guidance system" $ "DiamondHelp is a generic collaborative task guidance system motivated by the current usability crisis in high-tech home products. It combines an application-independent conversational interface (adapted from online chat programs) with an application-specific direct-manipulation interface. DiamondHelp is implemented in Java and uses Collagen for representing and using task models. Copyright © 2007, Association for the Advancement of Artificial Intelligence. All rights reserved."
"Mitter F., Stopper M." $ "Advantages of using language integrated queries technology" $ "Current object oriented programming languages require additional application programming interfaces (API's) to access the stored data in relational databases. Therefore an investment of learning-overhead is necessary. Additionally missing compiler support and IntelliSense feature do not simplify the situation as well as the case for doubling-up possible error sources regarding to be on the way in two worlds. A combination of features in upcoming Microsoft C# 3.0 (generics, anonymous delegates, lambda expressions, query expressions - LINQ) can achieve the desired goals without facing these disadvantages. While in beta phase this solution lacks usability, but Microsoft company announced to implement LINQ in Visual Studio 2008 (Codename Orcas) with many more upgrades like a control element for an appropriate data source. Substitutional there are different object relational mappers available that image database tables in objects, but if the company's development progress will be as expected, after all LINQ technology would be the most effective solution for the creation of data driven applications."
"[No author name available]" $ "Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR '06, Co-located with the 28th International Conference on Software Engineering, ICSE 2006" $ "The proceedings contain 41 papers. The topics discussed include: mining large software compilations over time: another perspective of software evolution, scenarios for mining the software architecture evolution, productivity analysis of Japanese enterprise software development projects, coupling and cohesion measures for evaluation of component reusability, the evolution radar: visualizing integrated logical coupling information, an open framework for CVS repository querying, analysis and visualization, mining sequences of changed-files from version histories, MAPO: mining API usages from open sourch repositories, detecting similar java classes using tree algorithms, mining version archives for co-changed lines, concern based mining of heterogeneous software repositories, mining eclipse for cross-cutting concerns, predicting defect densities in source code files with decision tree learners, and mining email social networks."
"Sormaz D.N., Pisipati D.V., Borse P.A." $ "Virtual manufacturing of milling operations with multiple tool paths" $ "Virtual manufacturing (visualisation and animation of a manufacturing process) provide the user with visual feed back in order to understand relations between the data in the process plan. The paper presents a framework, a procedure and an object-oriented prototype for virtual manufacturing of milling processes. Visualisation model is generated through three steps: geometric model, kinematic model and animation model. In the first step, geometric model, the feature geometry is analysed and corresponding tool path patterns are generated, and initial and final work piece geometry computed using stock and feature geometric models. Kinematic model is generated by segmentation of end milling processing time into intervals for each tool path segment and identification of part/tool engagement and disengagement relations. The third step, animation model, creates objects necessary for virtual manufacturing of the process in virtual 3D world. The user-friendly prototype has been implemented in java using java3d API. User is able to experiment with different values of the tool path parameters and visually inspect results in order to select the most suitable ones. Copyright © 2006 Inderscience Enterprises Ltd."
"Fink S., Yahav E., Dor N., Ramalingam G., Geav E." $ "Effective typestate verification in the presence of aliasing" $ "This paper addresses the challenge of sound typestate verification, with acceptable precision, for real-world Java programs. We present a novel framework for verification of typestate properties, including several new techniques to precisely treat aliases without undue performance costs. In particular, we present a flow-sensitive, context-sensitive, integrated verifier that utilizes a parametric abstract domain combining typestate and aliasing information. To scale to real programs without compromising precision, we present a staged verification system in which faster verifiers run as early stages which reduce the workload for later, more precise, stages. We have evaluated our framework on a number of real Java programs, checking correct API usage for various Java standard libraries. The results show that our approach scales to hundreds of thousands of lines of code, and verifies correctness for 93% of the potential points of failure. Copyright 2006 ACM."
"Gokhale P.S." $ "Innovative approach for emission monitoring and control" $ "This paper will describe the implementation of Membrane-based vapor recovery system and unconventional CEMS applied in Methyl Tertiary Butyl ether (MTBE) and Methanol plants which was commissioned and in operation at Jubail, Saudi Arabia. MTBE is highly volatile and hazardous fuel additive used as oxygenate to boost the octane number of gasoline. A project was commissioned for loading MTBE tankers to comply with API using bottom-loading methodology. Local environmental regulations mandated that HC loading with a rate equal or more than should have Vapor control to avoid release of hydrocarbon to atmosphere during loading operation. This paper will describe how the environmental control was achieved and the system functionality. CEMS was required to be installed on four auxiliary Boilers to comply with the local environmental regulations for MTBE & Methanol plant Boilers for monitoring Carbon monoxide (CO) emission thru flue gas stack. CO emission monitoring was necessary since the code dictated that any fired furnace burning hazardous hydrocarbon waste as fuel shall monitor and maintain CO emission below 100 PPM. Paper will describe how an unconventional CEMS. System was installed and in operation for last two years and benefits realized. Copyright 2006 by ISA."
"Pietsch M., Schlaefke A., Vogl T.J., Bergh B." $ "Development and evaluation of different methods to assess download and display time of image web systems" $ "Objectives: The aim of this study was to develop and verify different methods of measuring time-to-display (TTD) for radiological images with image web systems (IWS). The process should be automatable in order to repeatedly perform a large number of measurements without human interaction. Materials and Methods: Three methods were defined and compared with respect to usability, stability, and quality of results. Method 1 was based on Windows 2000 Performance Monitor, whereas method 2 employed phototransistors taped to the screen and connected to a separate PC. A software tool developed for method 3, which used Windows application programming interface (API) function, calls to read the color code assigned to specific pixels on the screen. Results: Method 3 proved to be the most reliable and easy to automate. The accuracy is practically equivalent to method 2, but it proved to be far more automatable. Method 1 produced the largest mean error, was easily disturbed, but was also easy to set up and provided additional insights into the system's architecture especially if combined with method 3. Conclusions: To measure the performance of image distribution systems, any of these methods can be used, but method 3 proved to be superior. © 2006 SCAR (Society for Computer Applications in Radiology)."
"Sun C., Xia S., Sun D., Chen D., Shen H., Cai W." $ "Transparent adaptation of single-user applications for multi-user real-time collaboration" $ "Single-user interactive computer applications are pervasive in our daily lives and work. Leveraging single-user applications for supporting multi-user collaboration has the potential to significantly increase the availability and improve the usability of collaborative applications. In this article, we report an innovative Transparent Adaptation (TA) approach and associated supporting techniques that can be used to convert existing and new single-user applications into collaborative ones, without changing the source code of the original application. The cornerstone of the TA approach is the operational transformation (OT) technique and the method of adapting the single-user application programming interface to the data and operation models of OT. This approach and supporting techniques were developed and tested in the process of transparently converting two commercial off-the-shelf single-user applications (Microsoft Word and PowerPoint) into real-time collaborative applications, called CoWord and CoPowerPoint, respectively. CoWord and CoPowerPoint not only retain the functionalities and look-and-feel of their single-user counterparts, but also provide advanced multi-user collaboration capabilities for supporting multiple interaction paradigms, ranging from concurrent and free interaction to sequential and synchronized interaction, and for supporting detailed workspace awareness, including multi-user telepointers and radar views. The TA approach and generic collaboration engine software component developed from this work are potentially applicable and reusable in adapting a wide range of single-user applications. © 2006 ACM."
"Kim H.-J., Chu W.-S., Ahn S.-H., Kim D.-S., Jun C.-S." $ "Web-based design and manufacturing systems for micromachining: Comparison of architecture and usability" $ "In this paper, web-based micromachining systems are compared with a commercial CAD/CAM system from the point of educational usability. The web-based systems included in this study were Micromachining System (MIMS) and SmartFab. In the MIMS architecture, a 3D model in STL format was read using the web browser, the file was sent to the web server where toolpath planner was located, and the NC code was reviewed by the designer through the web connection. In the SmartFab system, SolidWorks was used as the design interface with modified menus that support input parameters for micromachining. This additional function was available by SolidWorks API that provided links to the same toolpath planner as MIMS. In the commercial CAD/CAM case, without using any web connection, SolidWorks and CATIA were used for design, and PowerMill was used as a CAM tool. For each system, accessibility, user-friendliness, toolpath-reliability, and processing time were compared. Total of 91 students tested these systems In an undergraduate CAD class, and the user's feedback showed better performance of the web-based system in accessibility, user-friendliness, and processing time. However, reliability of the web-based system should be improved to be more useful design and manufacturing system. © 2006 Wiley Periodicals, Inc."
"Wang C., Lin Y., Sohraby K., Li B." $ "An adaptive algorithm for active queue management" $ "This paper proposes an adaptive proportional integral (API) algorithm for active queue management. API uses mean packet loss ratio and mean queue length as control error to adaptively adjust packet drop probability in order to expedite congestion control. The extensive simulations validate that API achieves faster control response and improved performance in terms of goodput, average queue length, and packet loss ratio."
"Ghosh A., Olsson M., Persson P." $ "Open application environments in mobile devices: Focus on JME and Ericsson Mobile Platforms" $ "Advances in hardware in mobile handsets are rapidly overcoming computational constraints. Similarly, handset interfaces are improving in terms of quality and usability. At the same time, wireless operators are offering increasingly faster transmission rates for data communication. The table is thus being set, as it were, to provide a feast of innovative and interesting end-user services. Not all these services are installed in end-user handsets at the time of purchase, but thanks to the adoption of open application environments, more and more handsets can download and upgrade services. Handsets with Java application environments, for example, can download games and other applications over the air. The authors provide an overview of available open application environments. In particular, they focus on the Java for Micro Edition (JME) standard, a highly popular environment being developed through the Java Community Process (JCP). They also introduce Ericsson Mobile Platform's (EMP) middleware architecture and Open Platform API (OPA), putting emphasis on how OPA and JME provide a complete product offering to Ericsson's customers, including a compelling open application environment that meets wireless operator requirements."
"Mathieu P., Verrons M.-H." $ "GeNGA, a generic contract negotiation model [GeNGA, un modèle général de négociation de contrats]" $ "Modelisation of group phenomena is the core of the multi-agent problematic. Among them are automatic negotiation systems which have been largely studied in the electronic commerce field in order to modelise especially auctions. In this paper, we present a generic negotiation model for multi-agent systems, called GeNCA, built on three levels: a communication level, a negotiation level and a strategic level, which is the only level specific to a particular application. The negotiation model presented here aims to be general and parameterable for different kinds of negotiations. It has been implemented by a Java API used to build our applications. GeNCA is the only platform which enables the use of different communication systems and of negotiation strategies specific to the applications achieved."
"Czarnul P., Fra̧czak M." $ "New user-guided and ckpt-based checkpointing libraries for parallel MPI applications" $ "We present design and implementation details as well as performance results for two new parallel checkpointing libraries developed by us for parallel MPI applications. The first one, a user-guided library requires from the programmer to support packing and unpacking code with an easy-to-use API using MPI constants. It uses MPI-2 collective I/O calls or a dedicated master process for checkpointing. The other version is a technically advanced parallel implementation of checkpointing based on the user-level ckpt library. It uses wrappers for MPI calls in the user program which enables to run a shadow MPI application just for communication purposes. Communication between original processes and the shadow MPI code is done via shared memory segments to which communication buffers are mapped. We present checkpoint/restart times for the two approaches and subversions proposed by us compared to an available LAMMPI/BLCR checkpointing solution for MPI applications. The performance of all the versions and I/O optimizations are discussed for a 4-node, 16-processor cluster with NFS and specifically for single SMP nodes with a local file system. © Springer-Verlag Berlin Heidelberg 2005."
"Kennedy C." $ "Development of a new interchangeable virtual instrument class specification" $ "In today's world, rapidly changing technology and high costs associated with developing and maintaining ATE software push the need for reusability and ease of upgrading or replacing components in test systems intended to be used over a long period of time. The Interchangeable Virtual Instrument (IVI) Foundation is tackling these issues by: ""Promoting specifications for programming test instruments that simplify interchangeability, provide better performance, and reduce program development and maintenance cost."" An Interchangeable Virtual Instrument (IVI) class specification defines the base capabilities and extensions for an instrument type (such as a Function Generator or Oscilloscope). This specification defines the Application Programming Interface (API) used to develop an IVI Class-compliant driver. Systems & Electronics Inc. and Boeing are jointly chairing an IVI Foundation working group to define an IVI class specification for a Counter/Timer. Based on the experiences of characterizing the Counter/Timer specification, this paper explores the process of creating a new class specification for an instrument type that does not already have a specification defined. Topics such as steps to effective specification development, obstacles encountered, and how to keep the specification moving forward are discussed. © 2005 IEEE."
"Kraj P., McIndoe R.A." $ "caBIONet - A .NET wrapper to access and process genomic data stored at the National Cancer Institute's Center for Bioinformatics databases" $ "Motivation: The National Cancer Institute's Center for Bioinformatics (NCICB) has developed a Java based data management and information system called caCORE. One component of this software suite is the object oriented API (caBIO) used to access the rich biological datasets collected at the NCI. This API can access the data using native Java classes, SOAP requests or HTTP calls. Non-Java based clients wanting to use this API have to use the SOAP or HTTP interfaces with the data being returned from the NCI servers as an XML data stream. Although the XML can be read and manipulated using DOM or SAX parsers, one loses the convenience and usability of an object oriented programming paradigm. caBIONet is a set of .NET wrapper classes (managers, genes, chromosomes, sequences, etc.) capable of serializing the XML data stream into local .NET objects. The software is able to search NCICB databases and provide local objects representing the data that can be manipulated and used by other .NET programs. The software was written in C# and compiled as a .NET DLL. © The Author 2005. Published by Oxford University Press. All rights reserved."
"Guthe M., Balázs Á., Klein R." $ "GPU-based trimming and tessellation of NURBS and T-Spline surfaces" $ "As there is no hardware support neither for rendering trimmed NURBS - the standard surface representation in CAD - nor for T-Spline surfaces the usability of existing rendering APIs like OpenGL, where a run-time tessellation is performed on the CPU, is limited to simple scenes. Due to the irregular mesh data structures required for trimming no algorithms exists that exploit the GPU for tessellation. Therefore, recent approaches perform a pretessellation and use level-of-detail techniques. In contrast to a simple API these methods require tedious preparation of the models before rendering and hinder interactive editing. Furthermore, due to the tremendous amount of triangle data smooth zoom-ins from long shot to close-up are not possible. In this paper we show how the trimming region can be defined by a trim-texture that is dynamically adapted to the required resolution and allows for an efficient trimming of surfaces on the GPU. Combining this new method with GPU-based tessellation of cubic rational surfaces allows a new rendering algorithm for arbitrary trimmed NURBS and T-Spline surfaces with prescribed error in screen space on the GPU. The performance exceeds current CPU-based techniques by a factor of up to 1000 and makes real-time visualization of real-world trimmed NURBS and T-Spline models possible on consumer-level graphics cards. © 2005 ACM 0730-0301/05/0700-1016 $5.00."
"Pastel R., Skalsky N." $ "Demonstrating information in simple gestures" $ "We introduce the simple gesturing user interface (SGUI), an application programming interface (API) for designing user interfaces utilizing simple gesturing on the personal digital assistant (PDA). SGUI is particularly appropriate for PDA interfaces because the simple gestures are recognized using minimum processing power and reserve all of the small display for user-task specific information. A graphing-software implemented on a PDA using SGUI illustrates the usability of gesturing interfaces and the information conveyed in a single gesture stroke."
"McGuinness D.L., Da Silva P.P." $ "Explaining answers from the semantic web: The inference web approach" $ "The Semantic Web lacks support for explaining answers from web applications. When applications return answers, many users do not know what information sources were used, when they were updated, how reliable the source was, or what information was looked up versus derived. Many users also do not know how implicit answers were derived. The Inference Web (IW) aims to take opaque query answers and make the answers more transparent by providing infrastructure for presenting and managing explanations. The explanations include information concerning where answers came from (knowledge provenance) and how they were derived (or retrieved). In this article we describe an infrastructure for IW explanations. The infrastructure includes: IWBase - an extensible web-based registry containing details about information sources, reasoners, languages, and rewrite rules, PML - the Proof Markup Language specification and API used for encoding portable proofs, IW browser - a tool supporting navigation and presentations of proofs and their explanations, and a new explanation dialogue component. Source information in the IWBase is used to convey knowledge provenance. Representation and reasoning language axioms and rewrite rules in the IWBase are used to support proofs, proof combination, and Semantic Web agent interoperability. The Inference Web is in use by four Semantic Web agents, three of them using embedded reasoning engines fully registered in the IW. Inference Web also provides explanation infrastructure for a number of DARPA and ARDA projects. © 2004 Elsevier B.V. All rights reserved."
"Lee H.-C., Kim H.-J., Park K.-S." $ "A flexible transition scheme within a dual stack host in IPv4/IPv6 coexistence phase" $ "In an early transition period, the Internet consists of IPv4-only, IPv6-only or IPv4/IPv6 dual networks. Users want to connect to the Internet without any restriction and also still use their existing applications even after migration from IPv4 to IPv6 networks. Thus, we propose a new flexible transition scheme called GHADH (Coexistence of Heterogeneous Applications within a Dual stack Host). At this scheme, DSTM (Dual Stack Transition Mechanism) is tightly coupled with BIA (Bump In the API). With these coupling, Users can use their existing IPv4 applications to communicate with IPv6 host within IPv6 networks. Furthermore, seamless interworking with IPv4 networks can be also assured. Additionally, it can provide the users with adaptive environments to easily use their terminals in various networks environments. DNSv6 resolving can be also available to the users with the help of CHADH. We have implemented the prototype of CHADH on the Microsoft Windows 2000 and XP platforms. We have verified its usability through various experiments with existing applications and evaluated the performance in each network environments. © Springer-Verlag Berlin Heidelberg 2003."
"Simonds C." $ "Software for the Next-Generation Automobile" $ "The features of Ford devised intelligent transportation system (ITS) are discussed. Ford's prototype software provides aid in rapid tailoring of automobile features and handles diverse communication modes. The flexible XML-based software architecture, Vehicle User-Interface Mark-up Language (VUML), offers customers a high degree of personalization including real-time information, facilitated by off-board services. In this regard, the specifications of application programming interface (API) used in the designing of Vehicle Consumer Services Interface (VCSI) are also discussed."
"Ball T., Rajamani S.K." $ "The SLAM project: Debugging system software via static analysis" $ "The goal of the SLAM project is to check whether or not a program obeys ""API usage rules"" that specify what it means to be a good client of an API. The SLAM toolkit statically analyzes a C program to determine whether or not it violates given usage rules. The toolkit has two unique aspects: It does not require the programmer to annotate the source program (invariants are inferred), it minimizes noise (false error messages) through a process known as ""counterexample-driven refinement"". SLAM exploits and extends results from program analysis, model checking and automated deduction. We have successfully applied the SLAM toolkit to Windows XP device drivers, to both validate behavior and find defects in their usage of kernel APIs."
"Umlauf E.J., Piringer H., Reitmayr G., Schmalstieg D." $ "ARLib: The augmented library" $ "ARLib is a location-based application for a mobile Augmented Reality system based on a notebook computer, a head-mounted display fitted with a FireWire camera, and powered by Sludierstube 2.0 software. The application aims to aid the user in typical tasks that are done in a library by augmenting a book's position on a shelf. The system utilizes an optical tracking approach, relying on ARToolKit for recognising markers. Markers are attached to bookshelves and walls to determine the viewer's position, as well as to books themselves. A powerful multi-criteria search engine combined with an interface that supports grafitti text input grants a maximum of usability and speed. © 2002 IEEE."
"John B.E., Bass L." $ "Usability and software architecture" $ "The role of software architecture with respect to usability has evolved over the past 20 years. The architectures of the 1980s and early 1990s assumed that usability was primarily a property of the presentation of information. Therefore, simply separating the presentation from the dialogue and application make it easy to modify that presentation after user testing. A more popular belief in the 1990s was that usability concerns greatly affected system functionality as well as the presentation. This emphasis took attention away from architectural support (beyond separation). Achieving the correct functionality for a given system became paramount. It is our observation that even if presentation and functionality of a system are well designed, the usability of a system can be greatly compromised if the underlying architecture does not support human concerns beyond modifiability. This paper will present a new role for software architecture in usability, preliminary research and practice stemming from this role and a research agenda for the future."
"Bunn J.J., Holtman K., Newman H.B., Wilkinson R.P." $ "The GIOD project - Globally interconnected object databases" $ "The GIOD (Globally Interconnected Object Databases) Project, a joint effort between Caltech and CERN, funded by Hewlett Packard Corporation, has investigated the use of WAN-distributed Object Databases and Mass Storage systems for LHC data. A prototype small-scale LHC data analysis center has been constructed using computing resources at Caltechs Centre for Advanced Computing Research (CACR). These resources include a 256 CPU HP Exemplar of ∼4600 SPECfp95, a 600 TByte High Performance Storage System (HPSS), and local/wide area links based on OC3 ATM. Using the Exemplar, a large number of fully simulated CMS events were produced, and used to populate an object database with a complete schema for raw, reconstructed and analysis objects. The reconstruction software used for this task was based on early codes developed in preparation for the current CMS reconstruction program, ORCA. Simple analysis software was then developed in Java, and integrated with SLACs Java Analysis Studio tool. An event viewer was constructed with the Java 3D API. Using this suite of software, tests were made in collaboration with researchers at FNAL and SDSC, that focused on distributed access to the database by numerous clients, and measurements of peak bandwidths were made and interpreted. In this paper, some significant findings from the GIOD Project are presented, such as the achievement of the CMS experiment's 100 MB/s database I/O milestone. © 2001 Elsevier Science B.V. All rights reserved."
"Braun P., Lötzbeyer H., Schätz B., Slotosch O." $ "Consistent integration of formal methods" $ "The usability of formal concepts for system design depends essentially on their integration in the design process. We discuss several possible levels of integration: technical integration of tools considering APIs and tool interfaces, conceptual integration of metamodels of description formalisms combined with hard and soft constraints, semantical integration of semantics of description techniques using a common semantic model, and finally methodical integration by an embedding in the development process. We show the feasibility of such an integrated approach and its advantages presenting AutoFocus/Quest, a formal method CASE-Tool with its levels of integration. Parts of a banking system model are used as example. © Springer-Verlag Berlin Heidelberg 2000."
"North C., Shneiderman B." $ "Snap-together visualization: Can users construct and operate coordinated visualizations?" $ "Multiple coordinated visualizations enable users to rapidly explore complex information. However, users often need unforeseen combinations of coordinated visualizations. Snap-together visualization (Snap) enables users to rapidly and dynamically construct coordinated-visualization interfaces, customized for their data, without programming. Users load data into desired visualizations, then construct coordinations between them for brushing and linking, overview and detail view, drill down, etc. Snap formalizes a conceptual model of visualization coordination based on the relational data model. Visualization developers can easily Snap-enable their independent visualizations using a simple API. Empirical evaluation reveals benefits, cognitive issues and usability concerns with coordination concepts and Snap. Two user studies explore coordination construction and operation. Data-savvy users successfully, enthusiastically and rapidly constructed powerful coordinated-visualization interfaces of their own. Operating an overview-and-detail coordination reliably improved user performance by 30-80% over detail-only and uncoordinated interfaces for most tasks."
"Klein K., Sequeira V." $ "The view-cube: An efficient method of view planning for 3D modelling from range data" $ "When aiming at the automated reconstruction of real world scenes from range images, one has to address the problem of planning the image acquisition. Although solutions for small objects in well defined environments are already available, the insufficient scalability of these approaches to large scenes and to a high number of degrees of freedom limits their applicability. In this paper we present a new planning algorithm with emphasis on practical usability in initially unknown, large indoor environments. Using a surface representation of seen and unseen parts of the environment, we propose an objective function based on the analysis of occlusions. In addition to previous approaches, we take into account both a quality criterion and the cost of the next acquisition. By optimising this objective function, the parameters of the next view are computed efficiently for a large search space with eight degrees of freedom (3D position, viewing direction, field of view, and resolution). Our technique exploits hardware-accelerated rendering (OpenGL) in order to perform the expensive visibility computation, which reduces the computation time of one planning step to a couple of minutes. Results are shown for two large indoor scenes-an artificial scene and a real world room-with numerous self occlusions. © 2000 IEEE."
"North Chris, Shneiderman Ben" $ "Snap-Together Visualization: A user interface for coordinating visualizations via relational schemata" $ "Multiple coordinated visualizations enable users to rapidly explore complex information. However, users often need unforeseen combinations of coordinated visualizations that are appropriate for their data. Snap-Together Visualization enables data users to rapidly and dynamically mix and match visualizations and coordinations to construct custom exploration interfaces without programming. Snap's conceptual model is based on the relational database model. Users load relations into visualizations then coordinate them based on the relational joins between them. Users can create different types of coordinations such as: brushing, drill down, overview and detail view, and synchronized scrolling. Visualization developers can make their independent visualizations snap-able with a simple API. Evaluation of Snap revealed benefits, cognitive issues, and usability concerns. Data savvy users were very capable and thrilled to rapidly construct powerful coordinated visualizations. A snapped overview and detail-view coordination improved user performance by 30-80%, depending on task."
"McLellan S.G., Roesler A.W., Tempest J.T., Spinuzzi C.I." $ "Building more usable APIs" $ "Imagine hypothetically, just for a moment, that programmers are humans,"" writes Steven Pemberton in a July 1997 magazine devoted to human-computer interaction design and development. ""Now suppose for a moment, also for the sake of the argument, that their chief method of communicating and interacting with computers was with programming languages. What would we, as HCI people, then do? Run screaming in the other direction...."" 1 It is a good question and, unfortunately, an all too common response. It's hard enough for us to ensure that product interfaces, like those for Excel or Word, are easy to use and learn. But programmers are users, too. They need application and system libraries that are just as easy to learn and use as the products they build from these libraries. Listen to this customer: ""I think it would be worthwhile if all developers would spend maybe a couple of hours a year seeing how the[ir] product is used by...customers. Just watching them. And while they're watching ...the customer would say, 'I don't like the way this works....'You need to see how they use it."" 2 Now ask yourself: why is it easier to visualize the customer who's purchased a financial accounting package from a neighborhood computer outlet, rather than a programmer whose company has just purchased a new Java class library? Wouldn't the developer of this library find it worthwhile to watch programmers work with it?"
"[No author name available]" $ "Proceedings of the 1998 International Conference on Intelligent User Interfaces, IUI" $ "The proceedings contains 24 papers from the 1998 International Conference on Intelligent User Interfaces. Topics discussed include: intelligent user interfaces, life-like pedagogical agents, dynamically generated hypermedia presentations, multi-model interactive improvisational agent, speech research, integrating user interface agents, self-integrating context-aware services, multimodal tools, standardized task models, intelligent agents, user task models, task-sensitive cinematography interfaces, text editing task automation, context-sensitive filtering, knowledge-rich interface, construction planning information, software architectures critics, intelligent educational systems, adaptive forms, and agent-assisted interfaces."
"Watson Richard W., Coyne Robert A." $ "Parallel I/O architecture of the High-Performance Storage System (HPSS)" $ "Datasets up to terabyte size and petabyte total capacities have created a serious imbalance between I/O and storage-system performance and system functionality. One promising approach is the use of parallel data-transfer techniques for client access to storage, peripheral-to-peripheral transfers, and remote file transfers. This paper describes the parallel I/O architecture and mechanisms, Parallel Transport Protocol (PTP), parallel FTP, and parallel client Application Programming Interface (API) used by the High-Performance Storage System (HPSS). Parallel storage integration issues with a local parallel file system are also discussed."
"Castelli G." $ "Software development environments for massively parallel systems" $ "The commercial offer of massively parallel systems has now reached a wide variety, with well engineered products offered by European and American manufacturers. Furthermore, both the American government and the Commission of the European Communities have clearly identified the important role that High Performance Computing may play in science and industry in the near future. To be successful, HPC needs to improve greatly the quality attributes of its software. This paper investigates the status of the software environments for massively parallel systems. In fact, whilst the hardware technology improvements in the past few years have been very rapid, the technology has suffered because of a substantial misalignment between the potential user's expectations and the actual usability of software for massively parallel computer systems. Actions and serious industrialisation efforts are needed to bring the system software and the basic programming environments to a level of real usability, because it is time for these systems to get rid of the ancestral equation: massive parallel systems = number crunching. Many potential markets could be addressed by massively parallel systems if they were able to offer to the users the same ease of use, quality, completeness, and portability of conventional sequential systems. © 1994."
